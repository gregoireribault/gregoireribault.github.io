{"version":3,"file":"game.js","mappings":"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","sources":["webpack:///webpack/runtime/async module","webpack:///../assets/js/constant.js","webpack:///../assets/js/game/debug.js","webpack:///../assets/js/model/transition.js","webpack:///../assets/js/service/transition-manager.js","webpack:///../assets/js/model/top-menu.js","webpack:///../assets/js/model/inventory.js","webpack:///../assets/js/model/link.js","webpack:///../assets/js/service/input-manager.js","webpack:///../assets/js/game/game.js","webpack:///../assets/js/game/index.js","webpack:///../assets/js/model/character.js","webpack:///../assets/js/model/extra.js","webpack:///../assets/js/model/map.js","webpack:///../assets/js/model/resource/sound.js","webpack:///../assets/js/model/resource/sprite.js","webpack:///../assets/js/model/tile-transition.js","webpack:///../assets/js/model/tile.js","webpack:///../assets/js/resource.js","webpack:///../assets/js/service/hitbox-manager.js","webpack:///../assets/js/service/sound-manager.js","webpack:///../assets/js/service/text-manager.js","webpack:///../assets/js/service/world-manager.js","webpack:///../assets/js/utils/compression.js","webpack:///../assets/js/utils/io.js","webpack:///../node_modules/polybooljs/index.js","webpack:///../node_modules/polybooljs/lib/build-log.js","webpack:///../node_modules/polybooljs/lib/epsilon.js","webpack:///../node_modules/polybooljs/lib/geojson.js","webpack:///../node_modules/polybooljs/lib/intersecter.js","webpack:///../node_modules/polybooljs/lib/linked-list.js","webpack:///../node_modules/polybooljs/lib/segment-chainer.js","webpack:///../node_modules/polybooljs/lib/segment-selector.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","'use strict'\n\nexport const PATH_DATA_SPRITES = 'data/sprites.loz'\nexport const PATH_DATA_SOUNDS = 'data/sounds.loz'\nexport const PATH_AUDIO_SOUNDS = 'audio/sounds.mp3'\nexport const PATH_SPRITES_IMAGE = 'images/sprites.png'\nexport const PATH_DATA_GAME = 'data/game.loz'\nexport const PATH_DATA_EMPTY_WORLD = 'data/world.empty.loz'\nexport const TILES_PATH = 'data/tiles.loz'\nexport const TILE_WIDTH = 32\nexport const TILE_HEIGHT = 32\nexport const TILES_PER_LINE = 16\nexport const TILES_PER_COLUMN = 11\nexport const WORLD_MAPS_PER_LINE = 16\nexport const WORLD_MAPS_PER_COLUMN = 8\nexport const DUNGEON_MAPS_PER_LINE = 8\nexport const DUNGEON_MAPS_PER_COLUMN = 8\nexport const EDITOR_KEYS_REDO = ['ControlLeft', 'ShiftLeft', 'KeyW']\nexport const EDITOR_KEYS_UNDO = ['ControlLeft', 'KeyW']\nexport const EDITOR_KEYS_CANCEL = ['Escape']\nexport const FILE_TYPE_JSON = 'json'\nexport const FILE_TYPE_LOZ = 'loz'\nexport const FILE_TYPE_MP3 = 'mp3'\nexport const FILE_TYPE_PNG = 'png'\nexport const FILE_TYPE_WEBP = 'webp'\nexport const GAME_INTERVAL_DRAWING = 50\nexport const GAME_INTERVAL_PROCESS = 50\nexport const GAME_INTERVAL_INPUT = 30\nexport const GAME_TOP_MENU_HEIGHT = 96\nexport const MAP_TYPE_WORLD = 'world'\nexport const MAP_TYPE_CAVERNS = 'caverns'\nexport const MAP_TYPE_LEVEL1 = 'level1'\nexport const SPRITE_WIDTH = 32\nexport const SPRITE_HEIGHT = 32\nexport const SOUND_ARROW = 'arrow'\nexport const SOUND_BOMB_BLOW = 'bomb_blow'\nexport const SOUND_BOMB_DROP = 'bomb_drop'\nexport const SOUND_BOOMERANG = 'boomerang'\nexport const SOUND_BOSS_HIT = 'boss_hit'\nexport const SOUND_BOSS_SCREAM_1 = 'boss_scream_1'\nexport const SOUND_BOSS_SCREAM_2 = 'boss_scream_2'\nexport const SOUND_BOSS_SCREAM_3 = 'boss_scream_3'\nexport const SOUND_CANDLE = 'candle'\nexport const SOUND_DOOR_UNLOCK = 'door_unlock'\nexport const SOUND_ENNEMY_DIE = 'ennemy_die'\nexport const SOUND_ENNEMY_HIT = 'ennemy_hit'\nexport const SOUND_FANFARE = 'fanfare'\nexport const SOUND_GET_HEART = 'get_heart'\nexport const SOUND_GET_ITEM = 'get_item'\nexport const SOUND_GET_RUPEE = 'get_rupee'\nexport const SOUND_KEY_APPEAR = 'key_appear'\nexport const SOUND_LINK_DIE = 'link_die'\nexport const SOUND_LINK_HURT = 'link_hurt'\nexport const SOUND_LOW_HEALTH = 'low_health'\nexport const SOUND_MAGICAL_ROD = 'magical_rod'\nexport const SOUND_OVERWORLD = 'overworld'\nexport const SOUND_RECORDER = 'recorder'\nexport const SOUND_REFILL_LOOP = 'refill_loop'\nexport const SOUND_SECRET = 'secret'\nexport const SOUND_SHIELD = 'shield'\nexport const SOUND_STAIRS = 'stairs'\nexport const SOUND_SWORD_COMBINED = 'sword_combined'\nexport const SOUND_SWORD_SHOOT = 'sword_shoot'\nexport const SOUND_SWORD_SLASH = 'sword_slash'\nexport const SOUND_TEXT = 'text'\nexport const SOUND_TEXT_LOOP = 'text_loop'\nexport const SOUND_TEXT_SLOW = 'text_slow'\nexport const SPRITE_LINK_PREFIX = 'link'\nexport const SPRITE_TEXT_PREFIX = 'text'\nexport const SPRITE_TEXT_COLOR_RED = 'red'\nexport const SPRITE_TEXT_COLOR_WHITE = 'white'\nexport const SPRITE_TEXT_WIDTH = 16\nexport const SPRITE_TEXT_HEIGHT = 16\nexport const ITEM_LADDER = 'ladder'\nexport const ITEM_MAGICAL_KEY = 'magical_key'\nexport const ITEM_POWER_BRACELET_NONE = 'power_bracelet_none'\nexport const ITEM_POWER_BRACELET_NORMAL = 'power_bracelet_normal'\nexport const ITEM_SHIELD_MAGICAL = 'magical'\nexport const ITEM_SHIELD_NORMAL = 'normal'\nexport const ITEM_RING_BLUE = 'blue'\nexport const ITEM_RING_GREEN = 'green'\nexport const ITEM_RING_RED = 'red'\nexport const ARROW_SILVER = 'arrow_silver'\nexport const ARROW_WOODEN = 'arrow_wooden'\nexport const BOOK_OF_MAGIC = 'book_of_magic'\nexport const INVENTORY_MAX_KEYS = 250\nexport const INVENTORY_MAX_RUPEES = 250\nexport const INVENTORY_MAX_BOMBS_1 = 8\nexport const INVENTORY_MAX_BOMBS_2 = 16\nexport const LINK_ACTION_MOVE = 'move'\nexport const LINK_ACTION_PICK = 'pick'\nexport const LINK_ACTION_USE = 'use'\nexport const LINK_ACTION_USE_ITEM_A = 'user_item_a'\nexport const LINK_ACTION_USE_ITEM_B = 'user_item_b'\nexport const LINK_DIRECTION_EAST = 'east'\nexport const LINK_DIRECTION_NORTH = 'north'\nexport const LINK_DIRECTION_SOUTH = 'south'\nexport const LINK_DIRECTION_WEST = 'west'\nexport const TRANSITION_MAP_EAST = 'map_east'\nexport const TRANSITION_MAP_NORTH = 'map_north'\nexport const TRANSITION_MAP_SOUTH = 'map_south'\nexport const TRANSITION_MAP_WEST = 'map_west'\nexport const TRANSITION_CAVE_ENTRANCE = 'cave_entrance'\nexport const TRANSITION_CAVE_EXIT = 'cave_exit'\nexport const TRANSITION_CAVE_STAIRS_DOWN = 'cave_stairs_down'\nexport const TRANSITION_CAVE_STAIRS_UP = 'cave_stairs_up'\nexport const TRANSITION_MAP_DRAG = 'map_drag'\nexport const TRANSITION_MAP_INCREMENT_DELTA = 8\nexport const TRANSITION_MAP_INTERVAL_PLAY = 10\nexport const DIRECTION_EAST = 'east'\nexport const DIRECTION_NORTH = 'north'\nexport const DIRECTION_SOUTH = 'south'\nexport const DIRECTION_WEST = 'west'\n","'use strict'\r\n\r\nimport { FILE_TYPE_LOZ, GAME_TOP_MENU_HEIGHT } from '../constant'\r\nimport io from '../utils/io'\r\nimport compression from '../utils/compression'\r\n\r\nclass Debug {\r\n  game\r\n  displayBlockingZones\r\n  blockingZonesColor\r\n\r\n  constructor (displayBlockingZonesCheckbox, blockingZonesColorInput, rupeesInput, rupeesSubmit, keysInput, keysSubmit, bombsInput, bombsSubmit, convertToLozInput) {\r\n    const self = this\r\n    displayBlockingZonesCheckbox.addEventListener('change', (e) => {\r\n      e.preventDefault()\r\n      self.displayBlockingZones = e.target.checked\r\n    })\r\n    displayBlockingZonesCheckbox.checked = false\r\n    displayBlockingZonesCheckbox.dispatchEvent(new Event('change'))\r\n\r\n    blockingZonesColorInput.addEventListener('change', (e) => {\r\n      e.preventDefault()\r\n      self.blockingZonesColor = e.target.value\r\n    })\r\n    blockingZonesColorInput.value = '#ff0000'\r\n    blockingZonesColorInput.dispatchEvent(new Event('change'))\r\n\r\n    rupeesSubmit.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      self.game.link.inventory.rupees = Math.min(Math.max(rupeesInput.value, 0), self.game.link.inventory.maxRupees)\r\n      rupeesInput.value = undefined\r\n    })\r\n    keysSubmit.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      self.game.link.inventory.keys = Math.min(Math.max(keysInput.value, 0), self.game.link.inventory.maxKeys)\r\n      keysInput.value = undefined\r\n    })\r\n    bombsSubmit.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      self.game.link.inventory.bombs = Math.min(Math.max(bombsInput.value, 0), self.game.link.inventory.maxBombs)\r\n      bombsInput.value = undefined\r\n    })\r\n    convertToLozInput.addEventListener('click', async (e) => {\r\n      e.preventDefault()\r\n      let data = await io.openFile()\r\n      data = JSON.stringify(data)\r\n      await io.dowloadFile(data, FILE_TYPE_LOZ)\r\n    })\r\n  }\r\n\r\n  setGame (game) {\r\n    this.game = game\r\n  }\r\n\r\n  draw (context) {\r\n    if (this.displayBlockingZones) {\r\n      this.drawBlockingZones(context, this.blockingZonesColor)\r\n    }\r\n  }\r\n\r\n  drawBlockingZones (context, color) {\r\n    const map = this.game.map\r\n    context.translate(0, GAME_TOP_MENU_HEIGHT) // Translate context for top menu\r\n    context.translate(-map.x, -map.y)\r\n    map.drawBlockingZones(context, color)\r\n    if (this.game.nextMap) {\r\n      this.game.nextMap.drawBlockingZones(context, color)\r\n    }\r\n    context.translate(map.x, map.y)\r\n    context.translate(0, -GAME_TOP_MENU_HEIGHT)\r\n  }\r\n}\r\n\r\nexport { Debug }\r\n","'use strict'\n\nimport soundManager from '../service/sound-manager'\nimport resource from '../resource'\nimport { SOUND_TEXT_LOOP, SOUND_OVERWORLD, DIRECTION_EAST, DIRECTION_WEST, TRANSITION_MAP_INCREMENT_DELTA, DIRECTION_SOUTH, SOUND_STAIRS, TILE_HEIGHT, TRANSITION_MAP_DRAG, TRANSITION_CAVE_ENTRANCE, TRANSITION_CAVE_EXIT, TRANSITION_CAVE_STAIRS_DOWN, TRANSITION_CAVE_STAIRS_UP, TRANSITION_MAP_INTERVAL_PLAY, DIRECTION_NORTH } from '../constant'\n\nclass CaveEntrance {\n  async play (link) {\n    return new Promise((resolve) => {\n      link.y += TILE_HEIGHT\n      const limitY = link.y - 3 * TILE_HEIGHT\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        link.y -= 2\n        if (link.y <= limitY) {\n          clearInterval(transitionInterval)\n          link.stopWalking()\n          resolve()\n        }\n      }, 15)\n    })\n  }\n\n  static get name () {\n    return TRANSITION_CAVE_ENTRANCE\n  }\n}\n\nclass CaveExit {\n  async play (link, currentMap) {\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        link.y += 2\n        if (link.y > currentMap.y + currentMap.height) {\n          clearInterval(transitionInterval)\n          link.stopWalking()\n          resolve()\n        }\n      }, 15)\n    })\n  }\n\n  static get name () {\n    return TRANSITION_CAVE_EXIT\n  }\n}\n\nclass CaveStairsDown {\n  async play (link) {\n    return new Promise((resolve) => {\n      soundManager.stop(resource.getSound(SOUND_OVERWORLD))\n      soundManager.play(resource.getSound(SOUND_STAIRS))\n      link.direction = DIRECTION_NORTH\n      link.x = link.tile.x\n      link.y = link.tile.y\n      link.clipY = 0\n      link.startWalking()\n      const transitionInterval = setInterval(() => {\n        link.clipY++\n        if (link.clipY >= TILE_HEIGHT) {\n          clearInterval(transitionInterval)\n          link.clipY = 0\n          link.stopWalking()\n          resolve()\n        }\n      }, 30)\n    })\n  }\n\n  static get name () {\n    return TRANSITION_CAVE_STAIRS_DOWN\n  }\n}\n\nclass CaveStairsUp {\n  async play (link) {\n    return new Promise((resolve) => {\n      soundManager.play(resource.getSound(SOUND_STAIRS))\n      link.direction = DIRECTION_SOUTH\n      link.clipY = TILE_HEIGHT\n      link.startWalking()\n      const transitionInterval = setInterval(() => {\n        link.clipY--\n        if (link.clipY <= 0) {\n          clearInterval(transitionInterval)\n          link.clipY = 0\n          link.stopWalking()\n          soundManager.play(resource.getSound(SOUND_OVERWORLD))\n          resolve()\n        }\n      }, 30)\n    })\n  }\n\n  static get name () {\n    return TRANSITION_CAVE_STAIRS_UP\n  }\n}\n\nclass MapDrag {\n  async play (link, currentMap, targetMap) {\n    if (link.direction === DIRECTION_EAST) {\n      return this.playEast(link, currentMap, targetMap)\n    }\n    if (link.direction === DIRECTION_NORTH) {\n      return this.playNorth(link, currentMap, targetMap)\n    }\n    if (link.direction === DIRECTION_SOUTH) {\n      return this.playSouth(link, currentMap, targetMap)\n    }\n    if (link.direction === DIRECTION_WEST) {\n      return this.playWest(link, currentMap, targetMap)\n    }\n  }\n\n  playEast (link, currentMap, targetMap) {\n    currentMap.offsetX = 0\n    targetMap.offsetX = 0\n    link.x = currentMap.x + currentMap.width - link.width\n\n    const nbTicks = Math.round(targetMap.width / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.width - link.width) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetX -= TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetX -= TRANSITION_MAP_INCREMENT_DELTA\n        link.x -= linkIncrementDelta\n        if (currentMap.offsetX < -currentMap.width && targetMap.offsetX < -targetMap.width) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetX = 0\n          link.stopWalking()\n          link.x = targetMap.x\n          currentMap.offsetX = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  playNorth (link, currentMap, targetMap) {\n    currentMap.offsetY = 0\n    targetMap.offsetY = 0\n    link.y = currentMap.y\n\n    const nbTicks = Math.round(targetMap.height / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.height - link.height) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetY += TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetY += TRANSITION_MAP_INCREMENT_DELTA\n        link.y += linkIncrementDelta\n        if (currentMap.offsetY > currentMap.height && targetMap.offsetY > targetMap.height) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetY = 0\n          link.stopWalking()\n          link.y = targetMap.y + targetMap.height - link.height\n          currentMap.offsetY = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  playSouth (link, currentMap, targetMap) {\n    currentMap.offsetY = 0\n    targetMap.offsetY = 0\n    link.y = currentMap.y + currentMap.height - link.height\n\n    const nbTicks = Math.round(targetMap.height / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.height - link.height) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetY -= TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetY -= TRANSITION_MAP_INCREMENT_DELTA\n        link.y -= linkIncrementDelta\n        if (currentMap.offsetY < -currentMap.height && targetMap.offsetY < -targetMap.height) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetY = 0\n          link.stopWalking()\n          link.y = targetMap.y\n          currentMap.offsetY = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  playWest (link, currentMap, targetMap) {\n    currentMap.offsetX = 0\n    targetMap.offsetX = 0\n    link.x = currentMap.x\n\n    const nbTicks = Math.round(targetMap.width / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.width - link.width) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetX += TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetX += TRANSITION_MAP_INCREMENT_DELTA\n        link.x += linkIncrementDelta\n        if (currentMap.offsetX > currentMap.width && targetMap.offsetX > targetMap.width) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetX = 0\n          link.stopWalking()\n          link.x = targetMap.x + targetMap.width - link.width\n          currentMap.offsetX = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  static get name () {\n    return TRANSITION_MAP_DRAG\n  }\n}\n\nclass ItemPicking {\n  constructor () {\n    this.item = undefined\n    this.character = undefined\n  }\n\n  shouldBePlayed (map, link) {\n    for (let i = 0; i < map.items.length; i++) {\n      const item = map.items[i]\n      if (item.enabled && item.shouldBePickedBy(link) && link.canAfford(item) && item.canBePickedBy(link)) {\n        this.item = item\n        return true\n      }\n    }\n\n    for (let i = 0; i < map.characters.length; i++) {\n      const character = map.characters[i]\n      if (!character.items || !character.enabled) {\n        continue\n      }\n      for (let j = 0; j < character.items.length; j++) {\n        const item = character.items[j]\n        if (item.enabled && item.shouldBePickedBy(link) && link.canAfford(item) && item.canBePickedBy(link)) {\n          this.item = item\n          this.character = character\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n\n  play (map, link) {\n    if (!this.item.pick) {\n      return new Promise((resolve) => resolve())\n    }\n\n    this.isPlaying = true\n    link.stopWalking()\n\n    const clone = this.item.clone()\n    clone.price = undefined\n    map.items.push(clone)\n    this.item.picked()\n\n    const itemSavedX = clone.x\n    const itemSavedY = clone.y\n    const itemCenterX = HitboxManager.getHorizontalCenter(clone.hitbox)\n    const itemDeltaX = itemCenterX - clone.x\n    clone.x = link.x - itemDeltaX + 4\n    clone.y = link.y - clone.height\n\n    link.action = Link.ACTION_PICK\n    link.buy(this.item)\n    this.item.pickedBy(link)\n    soundManager.play(resource.getSound(SOUND_FANFARE))\n    this.character.disappearing = true\n\n    const itemPicking = this\n    return new Promise((resolve) => {\n      const characterInterval = setInterval(() => {\n        if (itemPicking.character) {\n          itemPicking.character.visible = !itemPicking.character.visible\n        }\n      }, 1)\n\n      setTimeout(() => {\n        link.action = Link.ACTION_MOVE\n        clone.x = itemSavedX\n        clone.y = itemSavedY\n\n        map.items.pop()\n\n        clearInterval(characterInterval)\n\n        itemPicking.character.itemPicked(itemPicking.item)\n        itemPicking.isPlaying = false\n        itemPicking.item = undefined\n        itemPicking.character = undefined\n\n        resolve()\n      }, 1100)\n    })\n  }\n\n  static get NAME () {\n    return ITEM_PICKING_NAME\n  }\n}\n\nclass Dialog {\n  async play (link) {\n    let length = 0\n    soundManager.play(resource.getSound(SOUND_TEXT_LOOP))\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        length++\n        link.map.character.displayedText = link.map.character.text.substring(0, length)\n        if (link.map.character.displayedText === link.map.character.text) {\n          soundManager.stop(resource.getSound(SOUND_TEXT_LOOP))\n          clearInterval(transitionInterval)\n          resolve()\n        }\n      }, 50)\n    })\n  }\n\n  static get NAME () {\n    return DIALOG_NAME\n  }\n}\n\nexport { CaveEntrance, CaveExit, CaveStairsDown, CaveStairsUp, MapDrag, Dialog }\n","'use strict'\n\nimport { CaveEntrance, CaveExit, CaveStairsDown, CaveStairsUp, MapDrag } from '../model/transition'\n\nexport default {\n  transitions: {\n    [CaveEntrance.name]: new CaveEntrance(),\n    [CaveExit.name]: new CaveExit(),\n    [CaveStairsDown.name]: new CaveStairsDown(),\n    [CaveStairsUp.name]: new CaveStairsUp(),\n    [MapDrag.name]: new MapDrag()\n  },\n  get: function (name) {\n    return this.transitions[name]\n  }\n}\n","'use strict'\n\nimport resource from '../resource'\nimport { SPRITE_TEXT_COLOR_RED, SPRITE_TEXT_COLOR_WHITE, WORLD_MAPS_PER_LINE, WORLD_MAPS_PER_COLUMN } from '../constant'\nimport textManager from '../service/text-manager'\nimport worldManager from '../service/world-manager'\n\nconst SPRITE_WIDTH = 16\nconst SPRITE_HEIGHT = 16\n\nconst MAP_WIDTH = 128\nconst MAP_HEIGTH = 64\n\nclass TopMenu {\n  constructor (link) {\n    this.link = link\n\n    this.map = undefined\n    this.mapLocationWidth = undefined\n    this.mapLocationHeight = undefined\n  }\n\n  initializeMap (map) {\n    this.map = map\n\n    /* const offsetBounds = WorldManager.getOffsetBoundsFromCategory(map.type)\n    this.mapLocationWidth = MAP_WIDTH / (offsetBounds.maxX - offsetBounds.minX + 1)\n    this.mapLocationHeight = MAP_HEIGTH / (offsetBounds.maxY - offsetBounds.minY + 1) */\n  }\n\n  draw (context) {\n    // Background\n    context.fillStyle = 'black'\n    context.fillRect(0, 0, 512, 96)\n\n    // Map\n    context.translate(16, 16)\n    context.fillStyle = 'grey'\n    context.fillRect(0, 0, MAP_WIDTH, MAP_HEIGTH)\n    const mapWidth = 128 / WORLD_MAPS_PER_LINE\n    const mapHeight = 64 / WORLD_MAPS_PER_COLUMN\n    context.fillStyle = 'green'\n    context.fillRect(this.link.map.column * mapWidth, this.link.map.line * mapHeight, mapWidth, mapHeight)\n    context.translate(-16, -16)\n\n    // Rupees\n    resource.getSprite('menu_rupee').draw(context, 160, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'x' + this.link.inventory.rupees, SPRITE_TEXT_COLOR_WHITE, 176, 16, 32, 16)\n\n    // Keys\n    resource.getSprite('menu_key').draw(context, 160, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'x' + this.link.inventory.keys, SPRITE_TEXT_COLOR_WHITE, 176, 48, 32, 16)\n\n    // Bombs\n    resource.getSprite('menu_bomb').draw(context, 160, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'x' + this.link.inventory.bombs, SPRITE_TEXT_COLOR_WHITE, 176, 64, 32, 16)\n\n    // Item B\n    resource.getSprite('menu_blue_line_corner_north_west').draw(context, 256, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_west').draw(context, 256, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_horizontal').draw(context, 272, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_east').draw(context, 288, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_north_east').draw(context, 288, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'b', SPRITE_TEXT_COLOR_WHITE, 272, 16, 16, 16)\n    if (this.link.itemB !== undefined) {\n      this.link.itemB.draw(context, 256 + 8, 16 + 16)\n    }\n\n    // Item A\n    resource.getSprite('menu_blue_line_corner_north_west').draw(context, 256 + 48, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256 + 48, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256 + 48, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_west').draw(context, 256 + 48, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_horizontal').draw(context, 272 + 48, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_east').draw(context, 288 + 48, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288 + 48, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288 + 48, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_north_east').draw(context, 288 + 48, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'a', SPRITE_TEXT_COLOR_WHITE, 272 + 48, 16, 16, 16)\n    if (this.link.itemA !== undefined) {\n      this.link.itemA.draw(context, 256 + 48 + 8, 16 + 16)\n    }\n\n    // Life\n    textManager.draw(context, '-life-', SPRITE_TEXT_COLOR_RED, 384, 16, 96, 16)\n    let x = 368\n    let y = 64\n    for (let i = 0; i < this.link.totalLife; i++) {\n      if (i < Math.floor(this.link.currentLife + 0.25)) {\n        resource.getSprite('menu_heart_full').draw(context, x, y, SPRITE_WIDTH, SPRITE_HEIGHT)\n      } else if (i < this.currentLife) {\n        resource.getSprite('menu_heart_half').draw(context, x, y, SPRITE_WIDTH, SPRITE_HEIGHT)\n      } else {\n        resource.getSprite('menu_heart_empty').draw(context, x, y, SPRITE_WIDTH, SPRITE_HEIGHT)\n      }\n\n      x += SPRITE_WIDTH\n      if (i === 7) {\n        y -= SPRITE_HEIGHT\n        x = 368\n      }\n    }\n  }\n}\n\nexport { TopMenu }\n","'use strict'\n\nimport { ITEM_SHIELD_NORMAL, ITEM_RING_GREEN } from '../constant'\n\nclass Inventory {\n  constructor () {\n    this.shield = ITEM_SHIELD_NORMAL\n    this.ring = ITEM_RING_GREEN\n    this.arrow = undefined\n    this.bookOfMagic = undefined\n    this.ladder = undefined\n    this.magicalKey = undefined\n    this.powerBracelet = undefined\n\n    this.rupees = 0\n    this.keys = 0\n    this.bombs = 0\n    this.maxRupees = 255\n    this.maxKeys = 8\n    this.maxBombs = 8\n  }\n}\n\nexport { Inventory }\n","'use strict'\n\nimport HitboxManager from '../service/hitbox-manager'\nimport soundManager from '../service/sound-manager'\nimport resource from '../resource'\nimport { LINK_DIRECTION_EAST, LINK_DIRECTION_NORTH, LINK_DIRECTION_SOUTH, LINK_DIRECTION_WEST, LINK_ACTION_MOVE, LINK_ACTION_PICK, LINK_ACTION_USE_ITEM_A, LINK_ACTION_USE_ITEM_B, LINK_ACTION_USE, SOUND_GET_RUPEE, SPRITE_LINK_PREFIX } from '../constant'\nimport { Inventory } from './inventory'\n\nconst EVENT_ITEM_A_CHANGED = 'item_a_changed'\nconst EVENT_ITEM_B_CHANGED = 'item_b_changed'\n\nconst SPRITE_WIDTH = 32\nconst SPRITE_HEIGHT = 32\n\nconst HITBOX_DELTA = 2\nconst SPEED = 10 // Speed depends on game processing interval\n\nclass Link extends EventTarget {\n  constructor (x, y, width, height) {\n    super()\n\n    this.x = x\n    this.y = y\n    this.width = SPRITE_WIDTH\n    this.height = SPRITE_HEIGHT\n\n    this.speed = SPEED\n    this.action = LINK_ACTION_MOVE\n    this.direction = LINK_DIRECTION_SOUTH\n    this.clipX = 0\n    this.clipY = 0\n\n    this.inventory = new Inventory()\n\n    this.totalLife = 3\n    this.currentLife = 3\n\n    this.items = []\n    this._itemA = undefined\n    this._itemB = undefined\n\n    this.actions = []\n  }\n\n  canAfford (item) {\n    return item.price === undefined || this.rupees >= item.price\n  }\n\n  buy (item) {\n    if (item.price !== undefined) {\n      let i = item.price\n      const link = this\n      const soundInteval = setInterval(() => {\n        soundManager.play(resource.getSound(SOUND_GET_RUPEE))\n      }, 200)\n      var buyInterval = setInterval(() => {\n        i--\n        link.rupees--\n        if (i === 0) {\n          clearInterval(buyInterval)\n          clearInterval(soundInteval)\n          if (link.rupees < 0) {\n            link.rupee = 0\n          }\n        }\n      }, 25)\n    }\n  }\n\n  useItemA () {\n    if (this.itemA !== undefined) {\n      this.itemA.use()\n    }\n  }\n\n  useItemB () {\n    if (this.itemB !== undefined) {\n      this.itemB.use()\n    }\n  }\n\n  getHitbox (x, y) {\n    x = x || this.x\n    y = y || this.y\n\n    return {\n      x: x + HITBOX_DELTA,\n      y: y + (this.height / 2) + HITBOX_DELTA,\n      width: this.width - 2 * HITBOX_DELTA,\n      height: (this.height / 2) - 2 * HITBOX_DELTA\n    }\n  }\n\n  move (map, direction) {\n    let targetX = this.x\n    let targetY = this.y\n    let targetHitbox\n    let collision\n\n    switch (direction) {\n      case LINK_DIRECTION_EAST:\n        this.direction = LINK_DIRECTION_EAST\n        targetX += this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetX = HitboxManager.getMinX(collision) - this.width\n        }\n        this.x = targetX\n        break\n      case LINK_DIRECTION_NORTH:\n        this.direction = LINK_DIRECTION_NORTH\n        targetY -= this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetY = HitboxManager.getMaxY(collision) - (this.height / 2)\n        }\n        this.y = targetY\n        break\n      case LINK_DIRECTION_SOUTH:\n        this.direction = LINK_DIRECTION_SOUTH\n        targetY += this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetY = HitboxManager.getMinY(collision) - this.height\n        }\n        this.y = targetY\n        break\n      case LINK_DIRECTION_WEST:\n        this.direction = LINK_DIRECTION_WEST\n        targetX -= this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetX = HitboxManager.getMaxX(collision)\n        }\n        this.x = targetX\n        break\n    }\n\n    this.hitbox = HitboxManager.compute(this)\n  }\n\n  startWalking () {\n    const sprite = resource.getSprite(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n    if (!sprite) {\n      console.log(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n      return\n    }\n    sprite.start()\n  }\n\n  stopWalking () {\n    const sprite = resource.getSprite(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n    if (!sprite) {\n      console.log(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n      return\n    }\n    sprite.stop()\n  }\n\n  drawSword (context, offsetX, offsetY) {\n    context.save()\n    const itemWidth = this.itemA.sprite.width\n    const itemHeight = this.itemA.sprite.height\n    const linkX = offsetX + this.x + this.clipX\n    const linkY = offsetY + this.y + this.clipY\n    const linkWidth = this.width - this.clipX\n    const linkHeight = this.height - this.clipY\n    context.setTransform(1, 0, 0, 1, linkX + linkWidth / 2, linkY + linkHeight / 2)\n    let deltaX = 0\n    const deltaY = -3 / 4 * linkHeight\n    if (this.direction === DIRECTION_EAST) {\n      context.rotate(90 * Math.PI / 180)\n      deltaX = 1 / 8 * linkWidth\n    }\n    if (this.direction === DIRECTION_SOUTH) {\n      context.rotate(180 * Math.PI / 180)\n    }\n    if (this.direction === DIRECTION_WEST) {\n      context.rotate(-90 * Math.PI / 180)\n      deltaX = -1 / 8 * linkWidth\n    }\n    if (this.direction === DIRECTION_NORTH) {\n    }\n    this.itemA.sprite.draw(context, 0, 0, itemWidth, itemHeight, -linkWidth / 2 + deltaX, -linkHeight / 2 + deltaY, itemWidth, itemHeight)\n    context.restore()\n  }\n\n  draw (context, offsetX, offsetY, drawingAction) {\n    if (drawingAction === LINK_ACTION_USE_ITEM_A) {\n      this.drawSword(context, offsetX, offsetY)\n    }\n\n    const spriteName = this.getSpriteName(drawingAction)\n    const sprite = resource.getSprite(spriteName)\n    if (!sprite) {\n      console.log(spriteName)\n      return\n    }\n    resource.getSprite(spriteName).draw(\n      context,\n      0, 0, this.width - this.clipX, this.height - this.clipY,\n      offsetX + this.x + this.clipX, offsetY + this.y + this.clipY, this.width - this.clipX, this.height - this.clipY\n    )\n  }\n\n  getSpriteName (action) {\n    switch (action) {\n      case LINK_ACTION_PICK:\n        return `${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${LINK_ACTION_PICK}`\n      case LINK_ACTION_USE_ITEM_A:\n      case LINK_ACTION_USE_ITEM_B:\n        return `${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.shield}_${LINK_ACTION_PICK}`\n      case LINK_ACTION_MOVE:\n        return `${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${LINK_ACTION_MOVE}`\n    }\n  }\n\n  addItem (item) {\n    this.items.push(item)\n  }\n\n  removeItem (item) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].constructor.name === item.name) {\n        this.items.splice(i, 1)\n      }\n    }\n  }\n\n  hasItem (item) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].constructor.name === item.name) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  addAction (action) {\n    if (this.actions.indexOf(action) === -1) {\n      this.actions.push(action)\n    }\n  }\n\n  hasAction (action) {\n    return this.actions.indexOf(action) > -1\n  }\n\n  removeAction (action) {\n    const index = this.actions.indexOf(action)\n    if (index > -1) {\n      this.actions.splice(index, 1)\n    }\n  }\n\n  resetActions () {\n    this.actions = []\n  }\n\n  get itemA () {\n    return this._itemA\n  }\n\n  set itemA (item) {\n    this._itemA = item\n    this.dispatchEvent(new Event(EVENT_ITEM_A_CHANGED))\n  }\n\n  get itemB () {\n    return this._itemB\n  }\n\n  set itemB (item) {\n    this._itemB = item\n    this.dispatchEvent(new Event(EVENT_ITEM_B_CHANGED))\n  }\n}\n\nexport default Link\n","'use strict'\n\nimport { GAME_INTERVAL_PROCESS } from '../constant'\n\nconst BLOCKING_ACTION = true\nconst ENABLED = true\n\nclass Key {\n  constructor (key, action, blockingAction, enabled) {\n    this.key = key\n    this.action = action\n    this.blockingAction = blockingAction\n    this.enabled = enabled\n\n    this.pressed = false\n    this.used = false\n  }\n\n  use () {\n    this.used = true\n\n    return this.action\n  }\n\n  disable () {\n    this.enabled = false\n  }\n\n  enable () {\n    this.enabled = true\n  }\n\n  unuse () {\n    this.used = false\n\n    return this.action\n  }\n\n  press () {\n    this.pressed = true\n  }\n\n  unpress () {\n    this.pressed = false\n  }\n\n  static get BLOCKING_ACTION () {\n    return BLOCKING_ACTION\n  }\n\n  static get ENABLED () {\n    return ENABLED\n  }\n}\n\nexport default {\n\n  ACTION_LINK_MOVE_WEST: 'link_move_west',\n  ACTION_LINK_MOVE_NORTH: 'link_move_north',\n  ACTION_LINK_MOVE_EAST: 'link_move_east',\n  ACTION_LINK_MOVE_SOUTH: 'link_move_south',\n  ACTION_LINK_USE_ITEM_A: 'link_use_item_a',\n  ACTION_LINK_USE_ITEM_B: 'link_use_item_b',\n  ACTION_MENU_CLOSE: 'menu_close',\n  ACTION_MENU_MOVE_LEFT: 'menu_move_left',\n  ACTION_MENU_MOVE_TOP: 'menu_move_top',\n  ACTION_MENU_MOVE_RIGHT: 'menu_move_right',\n  ACTION_MENU_MOVE_BOTTOM: 'menu_move_bottom',\n  ACTION_MENU_OPEN: 'menu_open',\n\n  MAPPING_MAIN: 'mapping_main',\n  MAPPING_MENU: 'mapping_menu',\n\n  mappings: {},\n\n  currentMappingName: undefined,\n\n  actionKeys: [],\n\n  setMapping: function () {\n    this.mappings = []\n    this.mappings[37] = new Key(37, this.ACTION_LINK_MOVE_WEST, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[38] = new Key(38, this.ACTION_LINK_MOVE_NORTH, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[39] = new Key(39, this.ACTION_LINK_MOVE_EAST, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[40] = new Key(40, this.ACTION_LINK_MOVE_SOUTH, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[65] = new Key(65, this.ACTION_LINK_USE_ITEM_A, Key.BLOCKING_ACTION, !Key.ENABLED)\n    this.mappings[66] = new Key(66, this.ACTION_LINK_USE_ITEM_B, Key.BLOCKING_ACTION, !Key.ENABLED)\n    /* return\n        this.mappings[this.MAPPING_MAIN] = {}\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_WEST] = new Key(37, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_NORTH] = new Key(38, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_EAST] = new Key(39, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_SOUTH] = new Key(40, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_USE_ITEM_A] = new Key(65, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_USE_ITEM_B] = new Key(66, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_MENU_OPEN] = 42\n\n        this.mappings[this.MAPPING_MENU] = {}\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_LEFT] = 37\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_TOP] = 38\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_RIGHT] = 39\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_BOTTOM] = 40\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_CLOSE] = 65 */\n  },\n\n  getCurrentDrawingAction: function () {\n    for (let i = 0; i < this.actionKeys.length; i++) {\n      if (this.actionKeys[i].blockingAction) {\n        return this.actionKeys[i].use()\n      }\n    }\n\n    return this.actionKeys[0]?.use()\n  },\n\n  getCurrentAction: function () {\n    for (let i = 0; i < this.actionKeys.length; i++) {\n      if (this.actionKeys[i].blockingAction && !this.actionKeys[i].used) {\n        return this.actionKeys[i].use()\n      }\n    }\n\n    return this.actionKeys[0] && !this.actionKeys[0].blockingAction ? this.actionKeys[0].use() : undefined\n  },\n\n  clear: function () {\n    this.actionKeys = []\n  },\n\n  getKey: function (keyNumber) {\n    return this.mappings[keyNumber]\n  },\n\n  addActionKey: function (key) {\n    this.actionKeys.unshift(key)\n  },\n\n  removeActionKey: function (key) {\n    const index = this.actionKeys.indexOf(key)\n    if (index !== -1) {\n      this.actionKeys.splice(index, 1)\n    }\n  },\n\n  triggerBlockingAction (key) {\n    if (key.blockingAction) {\n      key.disable()\n      const inputManager = this\n      setTimeout(() => {\n        inputManager.removeActionKey(key)\n        key.enable()\n      }, GAME_INTERVAL_PROCESS * 5)\n    }\n  },\n\n  handleKeyDown: function (keyNumber) {\n    const key = this.getKey(keyNumber)\n    if (!key || !key.enabled) {\n      return\n    }\n\n    if (key && !key.pressed) {\n      this.removeActionKey(key)\n      this.addActionKey(key)\n      this.triggerBlockingAction(key)\n      key.press()\n    }\n  },\n\n  handleKeyUp: function (keyNumber) {\n    const key = this.getKey(keyNumber)\n    if (!key) {\n      return\n    }\n    this.removeActionKey(key)\n    key.unuse()\n    key.unpress()\n  },\n\n  enable (action) {\n    for (const key in this.mappings) {\n      if (this.mappings[key].action === action) {\n        this.mappings[key].enable()\n      }\n    }\n  },\n\n  startDetection: function () {\n    const inputManager = this\n    document.onkeydown = function (e) {\n      inputManager.handleKeyDown(e.keyCode)\n    }\n    document.onkeyup = function (e) {\n      inputManager.handleKeyUp(e.keyCode)\n    }\n  },\n\n  stopDetection: function () {\n    document.onkeydown = undefined\n    document.onkeyup = undefined\n  }\n}\n","'use strict'\n\nimport transitionManager from '../service/transition-manager'\n// import TopMenu from 'Model/top-menu'\nimport { TopMenu } from '../model/top-menu'\n// import Link from 'Model/link'\nimport Link from '../model/link'\nimport InputManager from '../service/input-manager'\nimport HitboxManager from '../service/hitbox-manager'\n// import ItemManager from 'Manager/item'\nimport { SOUND_OVERWORLD, DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST, DIRECTION_WEST, LINK_DIRECTION_EAST, LINK_DIRECTION_NORTH, LINK_DIRECTION_SOUTH, LINK_DIRECTION_WEST, LINK_ACTION_MOVE, LINK_ACTION_USE_ITEM_A, LINK_ACTION_USE_ITEM_B, MAP_TYPE_WORLD, GAME_TOP_MENU_HEIGHT, TILE_WIDTH, TILE_HEIGHT, TILES_PER_LINE, TILES_PER_COLUMN } from '../constant'\nimport soundManager from '../service/sound-manager'\nimport resource from '../resource'\nimport worldManager from '../service/world-manager'\nimport { TileTransition } from '../model/tile-transition'\nimport { MapDrag, Dialog } from '../model/transition'\n\nclass Game {\n  constructor () {\n    const startingPosition = worldManager.findStartingPosition()\n    if (!startingPosition) {\n      throw new Error('No starting position found')\n    }\n    const map = startingPosition.map\n    const link = new Link(map.x + startingPosition.tileColumn * TILE_WIDTH, map.y + startingPosition.tileLine * TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT)\n    link.map = map\n\n    this.topMenu = new TopMenu(link)\n    // this.topMenu.initializeMap(map)\n\n    this.map = map\n    this.nextMap = undefined\n\n    this.link = link\n    this.link.addEventListener(Link.EVENT_ITEM_A_CHANGED, () => InputManager.enable(InputManager.ACTION_LINK_USE_ITEM_A))\n    this.link.addEventListener(Link.EVENT_ITEM_B_CHANGED, () => InputManager.enable(InputManager.ACTION_LINK_USE_ITEM_B))\n\n    this.isStarted = false\n    this.transitionPlaying = false\n  }\n\n  start () {\n    this.map.hitbox = HitboxManager.computeMapHitboxV2(this.map)\n    this.map.init()\n    this.link.hitbox = HitboxManager.compute(this.link)\n\n    InputManager.setMapping()\n    InputManager.startDetection()\n    InputManager.currentMappingName = InputManager.MAPPING_MAIN\n\n    this.isStarted = true\n\n    soundManager.play(resource.getSound(SOUND_OVERWORLD))\n\n    // this.link.itemA = ItemManager.create(ItemManager.WOODEN_SWORD, 0, 0)\n  }\n\n  draw (context, x, y, width, height) {\n    if (!this.isStarted) {\n      return\n    }\n\n    context.clearRect(x, y, width, height)\n\n    // Translate contexte to draw map behind top menu\n    context.translate(0, GAME_TOP_MENU_HEIGHT)\n\n    context.translate(-this.map.x, -this.map.y)\n    this.map.draw(context)\n    if (this.mapDragTransitionPlaying) {\n      this.nextMap.draw(context)\n    }\n    this.link.draw(context, 0, 0, this.getLinkActionFromInput(InputManager.getCurrentDrawingAction()))\n    context.translate(this.map.x, this.map.y)\n\n    context.translate(0, -GAME_TOP_MENU_HEIGHT)\n    this.topMenu.draw(context)\n  }\n\n  async process () {\n    if (!this.isStarted) {\n      return\n    }\n\n    if (this.transitionPlaying) {\n      return\n    }\n\n    // Process static transitions\n    if (this.map.character && !this.map.character.hasStoppedTalking()) {\n      this.transitionPlaying = true\n      this.link.resetActions()\n      const transition = new Dialog()\n      await transition.play(this.link)\n      this.transitionPlaying = false\n      return\n    }\n\n\n    // Process move transitions\n    const linkTile = HitboxManager.getLinkTile(this.map, this.link)\n    if (linkTile && linkTile !== this.link.tile) {\n      linkTile.tileTransition.enabled = true\n    }\n    this.link.tile = linkTile\n    const linkFrontTile = HitboxManager.getLinkFrontTile(this.map, this.link)\n    let tileTransition\n    if (this.link.tile && !linkFrontTile) {\n      tileTransition = this.createDynamicMapDragTileTransition()\n      this.mapDragTransitionPlaying = true\n    }\n    if (this.link.tile && linkFrontTile) {\n      tileTransition = this.link.tile.tileTransition\n    }\n    if (tileTransition && tileTransition.enabled && tileTransition.start) {\n      this.transitionPlaying = true\n      this.link.resetActions()\n      this.nextMap = tileTransition.getTargetMap()\n      this.nextMap.init()\n      const transitionStart = transitionManager.get(tileTransition.start)\n      if (transitionStart) {\n        await transitionStart.play(this.link, this.map, this.nextMap)\n      }\n      this.map.reset()\n      this.map = tileTransition.getTargetMap()\n      this.nextMap = undefined\n      this.map.hitbox = HitboxManager.computeMapHitboxV2(this.map)\n      this.link.x = tileTransition.getTargetPosition().x\n      this.link.y = tileTransition.getTargetPosition().y\n      const transitionEnd = transitionManager.get(tileTransition.end)\n      if (transitionEnd) {\n        await transitionEnd.play(this.link)\n      }\n      this.link.tile = HitboxManager.getLinkTile(this.map, this.link)\n      this.link.tile.tileTransition.enabled = false\n      this.link.map = this.map\n      this.transitionPlaying = false\n      this.mapDragTransitionPlaying = false\n      tileTransition.enabled = false\n      return\n    }\n\n    // Process link\n    this.processLinkActions()\n  }\n\n  createDynamicMapDragTileTransition () {\n    let targetMapColumn\n    let targetMapLine\n    let targetTileColumn\n    let targetTileLine\n    if (this.link.direction === DIRECTION_EAST) {\n      targetMapColumn = this.map.column + 1\n      targetMapLine = this.map.line\n      targetTileColumn = 0\n      targetTileLine = (this.link.y % (TILES_PER_COLUMN * TILE_HEIGHT)) / TILE_HEIGHT\n    }\n    if (this.link.direction === DIRECTION_NORTH) {\n      targetMapColumn = this.map.column\n      targetMapLine = this.map.line - 1\n      targetTileColumn = (this.link.x % (TILES_PER_LINE * TILE_WIDTH)) / TILE_WIDTH\n      targetTileLine = TILES_PER_COLUMN - 1\n    }\n    if (this.link.direction === DIRECTION_SOUTH) {\n      targetMapColumn = this.map.column\n      targetMapLine = this.map.line + 1\n      targetTileColumn = (this.link.x % (TILES_PER_LINE * TILE_WIDTH)) / TILE_WIDTH\n      targetTileLine = 0\n    }\n    if (this.link.direction === DIRECTION_WEST) {\n      targetMapColumn = this.map.column - 1\n      targetMapLine = this.map.line\n      targetTileColumn = TILES_PER_LINE - 1\n      targetTileLine = (this.link.y % (TILES_PER_COLUMN * TILE_HEIGHT)) / TILE_HEIGHT\n    }\n    return new TileTransition(MapDrag.name, this.map.type, targetMapColumn, targetMapLine, targetTileColumn, targetTileLine)\n  }\n\n  processLinkActions () {\n    let mustWalk = false\n    const linkMoves = [InputManager.ACTION_LINK_MOVE_EAST, InputManager.ACTION_LINK_MOVE_NORTH, InputManager.ACTION_LINK_MOVE_SOUTH, InputManager.ACTION_LINK_MOVE_WEST]\n    for (let i = 0; i < linkMoves.length; i++) {\n      if (this.link.hasAction(linkMoves[i])) {\n        mustWalk = true\n      }\n    }\n\n    if (mustWalk) {\n      this.link.startWalking()\n    } else {\n      this.link.stopWalking()\n    }\n\n    if (this.link.actions.length === 0) {\n      this.link.action = LINK_ACTION_MOVE\n    } else {\n      for (let i = 0; i < this.link.actions.length; i++) {\n        this.processAction(this.link.actions[i])\n      }\n    }\n  }\n\n  getLinkActionFromInput (inputAction) {\n    switch (inputAction) {\n      case InputManager.ACTION_LINK_MOVE_EAST:\n      case InputManager.ACTION_LINK_MOVE_NORTH:\n      case InputManager.ACTION_LINK_MOVE_SOUTH:\n      case InputManager.ACTION_LINK_MOVE_WEST:\n        return LINK_ACTION_MOVE\n      case InputManager.ACTION_LINK_USE_ITEM_A:\n        return LINK_ACTION_USE_ITEM_A\n      case InputManager.ACTION_LINK_USE_ITEM_B:\n        return LINK_ACTION_USE_ITEM_B\n      default:\n        return LINK_ACTION_MOVE\n    }\n  }\n\n  processAction (action) {\n    switch (action) {\n      case InputManager.ACTION_LINK_MOVE_EAST:\n        this.link.move(this.map, LINK_DIRECTION_EAST)\n        break\n      case InputManager.ACTION_LINK_MOVE_NORTH:\n        this.link.move(this.map, LINK_DIRECTION_NORTH)\n        break\n      case InputManager.ACTION_LINK_MOVE_SOUTH:\n        this.link.move(this.map, LINK_DIRECTION_SOUTH)\n        break\n      case InputManager.ACTION_LINK_MOVE_WEST:\n        this.link.move(this.map, LINK_DIRECTION_WEST)\n        break\n      case InputManager.ACTION_LINK_USE_ITEM_A:\n        this.link.useItemA()\n        break\n      case InputManager.ACTION_LINK_USE_ITEM_B:\n        this.link.useItemB()\n        break\n      case InputManager.ACTION_MENU_CLOSE:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_BOTTOM:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_LEFT:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_RIGHT:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_TOP:\n\n        break\n      case InputManager.ACTION_MENU_OPEN:\n\n        break\n    }\n\n    this.link.removeAction(action)\n  }\n\n  processInput () {\n    if (!this.isStarted) {\n      return\n    }\n\n    if (this.transitionPlaying) {\n      return\n    }\n\n    /* if (ItemManager.isItemPlaying()) {\n      return\n    } */\n\n    const action = InputManager.getCurrentAction()\n    if (action) {\n      this.link.addAction(action)\n    }\n  }\n}\n\nexport default Game\n","'use strict'\r\n\r\nimport Game from './game'\r\nimport { Debug } from './debug'\r\nimport io from '../utils/io'\r\nimport resource from '../resource'\r\nimport soundManager from '../service/sound-manager'\r\nimport worldManager from '../service/world-manager'\r\nimport { PATH_DATA_GAME, FILE_TYPE_LOZ, GAME_INTERVAL_PROCESS, GAME_INTERVAL_DRAWING, GAME_INTERVAL_INPUT, TILES_PER_LINE, TILES_PER_COLUMN, TILE_WIDTH, TILE_HEIGHT, GAME_TOP_MENU_HEIGHT } from '../constant'\r\n\r\nlet game\r\nlet debug\r\nlet drawInterval\r\nlet processInterval\r\nlet processInputInterval\r\nconst canvas = document.querySelector('#loz-canvas')\r\nconst context = canvas.getContext('2d')\r\n\r\ncanvas.width = TILES_PER_LINE * TILE_WIDTH\r\ncanvas.height = TILES_PER_COLUMN * TILE_HEIGHT + GAME_TOP_MENU_HEIGHT\r\ncanvas.onload = () => { canvas.focus() }\r\n\r\ndebug = new Debug(\r\n  document.querySelector('input#control-blocking-zones'),\r\n  document.querySelector('input#control-blocking-zones-color'),\r\n  document.querySelector('input#control-rupees'),\r\n  document.querySelector('input#control-rupees-submit'),\r\n  document.querySelector('input#control-keys'),\r\n  document.querySelector('input#control-keys-submit'),\r\n  document.querySelector('input#control-bombs'),\r\n  document.querySelector('input#control-bombs-submit'),\r\n  document.querySelector('input#control-convert-file-to-loz')\r\n)\r\nsoundManager.initContext()\r\nsoundManager.initEvents(document.querySelector('input#play-sounds'), document.querySelector('input#control-volume'))\r\nawait resource.loadAll()\r\n\r\nasync function loadGame (gameData) {\r\n  worldManager.createMaps(gameData)\r\n\r\n  game = new Game()\r\n  debug.setGame(game)\r\n\r\n  clearInterval(drawInterval)\r\n  drawInterval = setInterval(() => {\r\n    game.draw(context, 0, 0, canvas.width, canvas.height)\r\n    debug.draw(context, 0, 0, canvas.width, canvas.height)\r\n  }, GAME_INTERVAL_DRAWING)\r\n  clearInterval(processInterval)\r\n  processInterval = setInterval(() => game.process(), GAME_INTERVAL_PROCESS)\r\n  clearInterval(processInputInterval)\r\n  processInputInterval = setInterval(() => game.processInput(), GAME_INTERVAL_INPUT)\r\n\r\n  game.start()\r\n}\r\n\r\nconst gameData = await io.fetchRemoteFile(PATH_DATA_GAME)\r\nawait loadGame(gameData)\r\n\r\ndocument.querySelector('input#control-import-game').addEventListener('click', async (e) => {\r\n  e.preventDefault()\r\n  const gameData = await io.openFile(FILE_TYPE_LOZ)\r\n  loadGame(gameData)\r\n})\r\n","'use strict'\n\nimport { SPRITE_TEXT_COLOR_WHITE, TILE_HEIGHT, TILE_WIDTH } from '../constant'\nimport textManager from '../service/text-manager'\n\nclass Character {\n  constructor (column, line, x, y, width, height, sprite, text) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.sprite = sprite\n    this.text = text\n    this.displayedText = ''\n  }\n\n  init () {\n    this.sprite.start()\n  }\n\n  reset () {\n    this.sprite.stop()\n    this.displayedText = ''\n  }\n\n  hasStoppedTalking() {\n    return this.displayedText === this.text\n  }\n\n  draw (context) {\n    this.sprite.draw(context, this.x, this.y, this.width, this.height)\n\n    textManager.draw(context, this.text, SPRITE_TEXT_COLOR_WHITE, this.x - 4.5 * TILE_WIDTH, this.y - 1.5 * TILE_HEIGHT, 10 * TILE_WIDTH, 1.5 * TILE_HEIGHT, this.displayedText.length)\n  }\n}\n\nexport { Character }\n","'use strict'\n\nclass Extra {\n  constructor (column, line, x, y, width, height, sprite) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.sprite = sprite\n  }\n\n  init () {\n    this.sprite.start()\n  }\n\n  reset () {\n    this.sprite.stop()\n  }\n\n  draw (context) {\n    this.sprite.draw(context, this.x, this.y, this.width, this.height)\n  }\n}\n\nexport { Extra }\n","'use strict'\n\nclass Map {\n  constructor (column, line, x, y, width, height, type, tiles, characters, extras) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.offsetX = 0\n    this.offsetY = 0\n    this.width = width\n    this.height = height\n    this.type = type\n    this.tiles = tiles\n    this.characters = characters\n    this.extras = extras\n\n    this.savedItems = []\n    this.savedCharacters = []\n    this.mapPath = this.getMapPath()\n  }\n\n  get character() {\n    return this.characters[0]\n  }\n\n  getMapPath () {\n    const path = new Path2D()\n    path.rect(this.x, this.y, this.width, this.height)\n\n    return path\n  }\n\n  init () {\n    for (const character of this.characters) {\n      character.init()\n    }\n    for (const extra of this.extras) {\n      extra.init()\n    }\n  }\n\n  reset () {\n    for (const character of this.characters) {\n      character.reset()\n    }\n    for (const extra of this.extras) {\n      extra.reset()\n    }\n  }\n\n  draw (context) {\n    context.save()\n    context.translate(this.offsetX, this.offsetY)\n    const tileOffsetX = this.x\n    const tileOffsetY = this.y\n\n    for (const tile of this.tilesIterator()) {\n      tile.draw(context)\n    }\n\n    for (const character of this.characters) {\n      character.draw(context)\n    }\n\n    for (const extra of this.extras) {\n      extra.draw(context)\n    }\n\n    /* for (let i = 0; i < this.miscs.length; i++) {\n      this.miscs[i].draw(context, tileOffsetX, tileOffsetY)\n    }\n\n    for (let i = 0; i < this.items.length; i++) {\n      this.items[i].draw(context, tileOffsetX, tileOffsetY)\n    }\n\n    for (let i = 0; i < this.characters.length; i++) {\n      this.characters[i].draw(context, tileOffsetX, tileOffsetY)\n    } */\n    context.translate(-this.offsetX, -this.offsetY)\n    context.restore()\n  }\n\n  drawBlockingZones (context, color) {\n    context.save()\n    context.translate(this.offsetX, this.offsetY)\n    context.globalAlpha = 0.5\n    context.fillStyle = color\n    for (const tile of this.tilesIterator()) {\n      context.fill(tile.blockPath)\n    }\n    context.translate(-this.offsetX, -this.offsetY)\n    context.restore()\n  }\n\n  * tilesIterator () {\n    for (let column = 0; column < this.tiles.length; column++) {\n      for (let line = 0; line < this.tiles[column].length; line++) {\n        yield this.tiles[column][line]\n      }\n    }\n  }\n\n  getTile (column, line) {\n    return this.tiles[column] ? this.tiles[column][line] : undefined\n  }\n}\n\nexport { Map }\n","'use strict'\n\nclass Sound {\n  constructor (name, buffer, context, gain, duration, loop, loopStart, loopEnd) {\n    this.name = name\n    this.buffer = buffer\n    this.context = context\n    this.gain = gain\n    this.duration = duration\n    this.loop = loop\n    this.loopStart = loopStart\n    this.loopEnd = loopEnd\n    this.source = undefined\n  }\n\n  play () {\n    this.source = this.context.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.connect(this.gain)\n    this.source.loop = this.loop\n    this.source.loopStart = this.loopStart\n    this.source.loopEnd = this.loopEnd\n    this.source.start(0)\n  }\n\n  stop () {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n\nexport { Sound }\n","'use strict'\n\n// TODO remove this and handle draw directly in Sprite class\nclass SpriteImage {\n  constructor (name, file, offset, width, height) {\n    this.name = name\n    this.file = file\n    this.offset = offset\n    this.width = width\n    this.height = height\n  }\n\n  draw (context, x, y, w, h, dx, dy, dw, dh) {\n    if (dx !== undefined && dy !== undefined && dw !== undefined && dh !== undefined) {\n      context.drawImage(this.file, this.offset.x + x, this.offset.y + y, w, h, dx, dy, dw, dh)\n      return\n    }\n\n    context.drawImage(this.file, this.offset.x, this.offset.y, this.width, this.height, x, y, w, h)\n  }\n}\n\nclass Sprite {\n  constructor (name, type, images) {\n    this.name = name\n    this.type = type\n    this.images = images\n\n    this.currentImageIndex = 0\n    this.incrementSpeed = 200\n    this.incrementInterval = undefined\n  }\n\n  clone () {\n    return new Sprite(this.name, this.type, this.images)\n  }\n\n  start () {\n    if (this.incrementInterval) {\n      return\n    }\n\n    const self = this\n\n    this.incrementImageIndex()\n    this.incrementInterval = setInterval(() => {\n      self.incrementImageIndex()\n    }, this.incrementSpeed)\n\n    return this\n  }\n\n  stop () {\n    clearInterval(this.incrementInterval)\n    this.incrementInterval = undefined\n\n    return this\n  }\n\n  incrementImageIndex () {\n    if (!this.images) {\n      return\n    }\n\n    this.currentImageIndex++\n    if (this.currentImageIndex >= this.images.length) {\n      this.currentImageIndex = 0\n    }\n  }\n\n  draw (context, x, y, w, h, x2, y2, w2, h2) {\n    if (!this.images || !this.images[this.currentImageIndex]) {\n      return\n    }\n\n    this.images[this.currentImageIndex].draw(context, x, y, w, h, x2, y2, w2, h2)\n  }\n\n  get width () {\n    return this.images[this.currentImageIndex]?.width\n  }\n\n  get height () {\n    return this.images[this.currentImageIndex]?.height\n  }\n}\n\nexport { Sprite, SpriteImage }\n","'use strict'\n\nimport { TILE_HEIGHT, TILE_WIDTH } from '../constant'\nimport worldManager from '../service/world-manager'\n\nclass TileTransition {\n  constructor (start, targetMapType, targetMapColumn, targetMapLine, targetTileColumn, targetTileLine, end) {\n    this.start = start\n    this.targetMapType = targetMapType\n    this.targetMapColumn = targetMapColumn\n    this.targetMapLine = targetMapLine\n    this.targetTileColumn = targetTileColumn\n    this.targetTileLine = targetTileLine\n    this.end = end\n    this.enabled = true\n  }\n\n  isEmpty () {\n    return !this.start && !this.targetMapType && !this.targetMapColumn && !this.targetMapLine && !this.targetTileColumn && !this.targetTileLine && !this.end\n  }\n\n  getTargetMap () {\n    return worldManager.getMap(this.targetMapType, this.targetMapColumn, this.targetMapLine)\n  }\n\n  getTargetPosition () {\n    return {\n      x: this.getTargetMap().x + this.targetTileColumn * TILE_WIDTH,\n      y: this.getTargetMap().y + this.targetTileLine * TILE_HEIGHT\n    }\n  }\n\n  clone () {\n    return new TileTransition(this.start, this.targetMapType, this.targetMapColumn, this.targetMapLine, this.targetTileColumn, this.targetTileLine, this.end)\n  }\n}\n\nexport { TileTransition }\n","'use strict'\n\nimport { TileTransition } from './tile-transition'\n\nclass Tile {\n  constructor (column, line, x, y, width, height, hitbox, sprite, block, desctructible, tileTransition, start) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.hitbox = hitbox\n    this.sprite = sprite\n    this.transition = undefined\n    this.tilePath = this.getTilePath()\n    this.blockPath = this.getBlockPath()\n    this.block = block\n    this.desctructible = desctructible\n    this.tileTransition = tileTransition\n    this.start = start\n  }\n\n  recomputePaths () {\n    this.tilePath = this.getTilePath()\n    this.blockPath = this.getBlockPath()\n  }\n\n  clone () {\n    return new Tile(this.column, this.line, this.x, this.y, this.width, this.height, this.hitbox, this.sprite.clone(), this.block, this.desctructible, this.tileTransition.clone())\n  }\n\n  draw (context, offsetX, offsetY) {\n    const tileOffsetX = offsetX !== undefined ? this.x + offsetX : this.x\n    const tileOffsetY = offsetY !== undefined ? this.y + offsetY : this.y\n\n    this.sprite.draw(context, tileOffsetX, tileOffsetY, this.width, this.height)\n    if (this.other) {\n      this.other.draw(context, tileOffsetX, tileOffsetY, this.width, this.height)\n    }\n  }\n\n  getTilePath () {\n    const path = new Path2D()\n    path.rect(this.x, this.y, this.width, this.height)\n\n    return path\n  }\n\n  getBlockPath () {\n    if (typeof this.hitbox !== 'string') {\n      return\n    }\n\n    const points = []\n    if (this.hitbox.charAt(0) === '1') {\n      points.push([this.x, this.y])\n    }\n    if (this.hitbox.charAt(1) === '1') {\n      points.push([this.x + this.width / 2, this.y])\n    }\n    if (this.hitbox.charAt(2) === '1') {\n      points.push([this.x + this.width, this.y])\n    }\n    if (this.hitbox.charAt(3) === '1') {\n      points.push([this.x + this.width, this.y + this.height / 2])\n    }\n    if (this.hitbox.charAt(4) === '1') {\n      points.push([this.x + this.width, this.y + this.height])\n    }\n    if (this.hitbox.charAt(5) === '1') {\n      points.push([this.x + this.width / 2, this.y + this.height])\n    }\n    if (this.hitbox.charAt(6) === '1') {\n      points.push([this.x, this.y + this.height])\n    }\n    if (this.hitbox.charAt(7) === '1') {\n      points.push([this.x, this.y + this.height / 2])\n    }\n\n    const path = new Path2D()\n    if (points[0]) {\n      path.moveTo(points[0][0], points[0][1])\n    }\n    for (let i = 1; i < points.length; i++) {\n      path.lineTo(points[i][0], points[i][1])\n    }\n\n    return path\n  }\n}\n\nexport { Tile }\n","'use strict'\r\n\r\nimport io from './utils/io'\r\nimport soundManager from './service/sound-manager'\r\nimport { PATH_DATA_SPRITES, PATH_SPRITES_IMAGE, PATH_DATA_SOUNDS, PATH_AUDIO_SOUNDS, SPRITE_WIDTH, SPRITE_HEIGHT } from './constant'\r\nimport { Sprite, SpriteImage } from './model/resource/sprite'\r\nimport { Sound } from './model/resource/sound'\r\n\r\nconst sprites = {}\r\nconst sounds = {}\r\n\r\nexport default {\r\n  loadAll: async function () {\r\n    const resources = await io.fetchRemoteFiles(PATH_DATA_SPRITES, PATH_SPRITES_IMAGE, PATH_DATA_SOUNDS, PATH_AUDIO_SOUNDS)\r\n    const dataSprites = resources[0]\r\n    const spritesImage = resources[1]\r\n    const dataSounds = resources[2]\r\n    const audioSounds = resources[3]\r\n    this.loadSprites(dataSprites, spritesImage)\r\n    await this.loadSounds(dataSounds, audioSounds)\r\n  },\r\n  loadSprites: async function (dataSprites, spritesImage) {\r\n    if (!dataSprites || !spritesImage) {\r\n      const resources = await io.fetchRemoteFiles(PATH_DATA_SPRITES, PATH_SPRITES_IMAGE)\r\n      dataSprites = resources[0]\r\n      spritesImage = resources[1]\r\n    }\r\n    for (let i = 0; i < dataSprites.length; i++) {\r\n      const dataSprite = dataSprites[i]\r\n      const name = dataSprite.name\r\n      const type = dataSprite.type\r\n      // Several image parts for one Sprite\r\n      const images = dataSprite.offsets.map((offset) => new SpriteImage(name, spritesImage, { x: offset.x * SPRITE_WIDTH, y: offset.y * SPRITE_HEIGHT }, SPRITE_WIDTH, SPRITE_HEIGHT))\r\n      sprites[name] = new Sprite(name, type, images)\r\n    }\r\n  },\r\n  cloneSprite: (name) => {\r\n    return sprites[name] ? sprites[name].clone() : undefined\r\n  },\r\n  getSprite: (name) => {\r\n    return sprites[name]\r\n  },\r\n  loadSounds: async function (dataSounds, audioSounds) {\r\n    const context = soundManager.getContext()\r\n    const gainNode = soundManager.getGainNode()\r\n    if (!context || !gainNode) {\r\n      throw new Error('Audio context must be initialized before loading sounds')\r\n    }\r\n    if (!dataSounds || !audioSounds) {\r\n      const resources = await io.fetchRemoteFiles(PATH_DATA_SOUNDS, PATH_AUDIO_SOUNDS)\r\n      dataSounds = resources[0]\r\n      audioSounds = resources[1]\r\n    }\r\n    for (let i = 0; i < dataSounds.length; i++) {\r\n      const dataSound = dataSounds[i]\r\n      const bytes = dataSound.bytes\r\n      const offset = dataSound.offset\r\n      const arrayBuffer = audioSounds.slice(offset, offset + bytes)\r\n      const audioBuffer = await context.decodeAudioData(arrayBuffer)\r\n      const name = dataSound.name\r\n      const duration = dataSound.duration || undefined\r\n      const loop = dataSound.loop || false\r\n      const loopEnd = dataSound.loop_end || 0\r\n      const loopStart = dataSound.loop_start || 0\r\n      sounds[name] = new Sound(name, audioBuffer, context, gainNode, duration, loop, loopStart, loopEnd)\r\n    }\r\n  },\r\n  cloneSound: (name) => {\r\n    return sounds[name] ? sounds[name].clone() : undefined\r\n  },\r\n  getSound: (name) => {\r\n    return sounds[name]\r\n  }\r\n}\r\n","'use strict'\n\nimport { DIRECTION_WEST, DIRECTION_SOUTH, DIRECTION_NORTH, DIRECTION_EAST } from '../constant'\n\n// @see https://www.npmjs.com/package/polybooljs\nconst PolyBool = require('polybooljs')\n\nconst HitboxManager = {\n  getHitboxFromString: function (x, y, width, height, hitboxString) {\n    var hitbox = []\n\n    if (hitboxString.charAt(0) === '1') {\n      hitbox.push([x, y])\n    }\n    if (hitboxString.charAt(1) === '1') {\n      hitbox.push([x + width / 2, y])\n    }\n    if (hitboxString.charAt(2) === '1') {\n      hitbox.push([x + width, y])\n    }\n    if (hitboxString.charAt(3) === '1') {\n      hitbox.push([x + width, y + height / 2])\n    }\n    if (hitboxString.charAt(4) === '1') {\n      hitbox.push([x + width, y + height])\n    }\n    if (hitboxString.charAt(5) === '1') {\n      hitbox.push([x + width / 2, y + height])\n    }\n    if (hitboxString.charAt(6) === '1') {\n      hitbox.push([x, y + height])\n    }\n    if (hitboxString.charAt(7) === '1') {\n      hitbox.push([x, y + height / 2])\n    }\n\n    var hitbox = {\n      regions: [hitbox],\n      inverted: false\n    }\n\n    return PolyBool.polygon(PolyBool.segments(hitbox))\n  },\n\n  getPathFromString: function (x, y, width, height, hitboxString) {\n    const hitbox = []\n    if (hitboxString.charAt(0) === '1') {\n      hitbox.push([x, y])\n    }\n    if (hitboxString.charAt(1) === '1') {\n      hitbox.push([x + width / 2, y])\n    }\n    if (hitboxString.charAt(2) === '1') {\n      hitbox.push([x + width, y])\n    }\n    if (hitboxString.charAt(3) === '1') {\n      hitbox.push([x + width, y + height / 2])\n    }\n    if (hitboxString.charAt(4) === '1') {\n      hitbox.push([x + width, y + height])\n    }\n    if (hitboxString.charAt(5) === '1') {\n      hitbox.push([x + width / 2, y + height])\n    }\n    if (hitboxString.charAt(6) === '1') {\n      hitbox.push([x, y + height])\n    }\n    if (hitboxString.charAt(7) === '1') {\n      hitbox.push([x, y + height / 2])\n    }\n\n    const path = new Path2D()\n    if (hitbox[0]) {\n      path.moveTo(hitbox[0][0], hitbox[0][1])\n    }\n    for (let i = 1; i < hitbox.length; i++) {\n      path.lineTo(hitbox[i][0], hitbox[i][1])\n    }\n\n    return path\n  },\n\n  compute: function (object) {\n    const hitbox = {\n      regions: [[\n        [object.x, object.y],\n        [object.x + object.width, object.y],\n        [object.x + object.width, object.y + object.height],\n        [object.x, object.y + object.height]\n      ]],\n      inverted: false\n    }\n\n    return hitbox\n  },\n\n  computeMapHitbox: function (map) {\n    const hitbox = {\n      regions: [],\n      inverted: false\n    }\n\n    for (let i = 0; i < map.tiles.length; i++) {\n      if (map.tiles[i].hitbox.regions[0]) {\n        hitbox.regions.push(map.tiles[i].hitbox.regions[0])\n      }\n    }\n\n    return PolyBool.union(hitbox, { regions: [], inverted: false })\n  },\n\n  computeMapHitboxV2: function (map) {\n    const hitbox = {\n      regions: [],\n      inverted: false\n    }\n\n    for (const tile of map.tilesIterator()) {\n      if (tile.block.regions && tile.block.regions[0]) {\n        hitbox.regions.push(tile.block.regions[0])\n      }\n    }\n\n    return PolyBool.union(hitbox, { regions: [], inverted: false })\n  },\n\n  computeHitboxesCollision: function (hitobx1, hitbox2) {\n    const intersection = PolyBool.intersect(hitobx1, hitbox2)\n    if (intersection && intersection.regions && intersection.regions.length > 0) {\n      return intersection\n    }\n\n    return undefined\n  },\n\n  getMinX: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let x\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (x === undefined || x > hitbox.regions[i][j][0]) {\n          x = hitbox.regions[i][j][0]\n        }\n      }\n    }\n\n    return x\n  },\n\n  getMaxX: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let x\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (x === undefined || x < hitbox.regions[i][j][0]) {\n          x = hitbox.regions[i][j][0]\n        }\n      }\n    }\n\n    return x\n  },\n\n  getMinY: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let y\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (y === undefined || y > hitbox.regions[i][j][1]) {\n          y = hitbox.regions[i][j][1]\n        }\n      }\n    }\n\n    return y\n  },\n\n  getMaxY: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let y\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (y === undefined || y < hitbox.regions[i][j][1]) {\n          y = hitbox.regions[i][j][1]\n        }\n      }\n    }\n\n    return y\n  },\n\n  draw: function (context, hitbox, offsetX, offsetY, color) {\n    if (offsetX === undefined) {\n      offsetX = 0\n    }\n    if (offsetY === undefined) {\n      offsetY = 0\n    }\n\n    context.save()\n    context.globalAlpha = 0.5\n    context.fillStyle = color\n\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      context.beginPath()\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (j === 0) {\n          context.moveTo(hitbox.regions[i][j][0] + offsetX, hitbox.regions[i][j][1] + offsetY)\n          continue\n        }\n        context.lineTo(hitbox.regions[i][j][0] + offsetX, hitbox.regions[i][j][1] + offsetY)\n      }\n      context.closePath()\n      context.fill()\n    }\n\n    context.restore()\n  },\n\n  getCurrentTiles: function (map, link) {\n    const currentTiles = []\n    for (const tile of map.tilesIterator()) {\n      if (\n        (tile.x <= link.x && link.x <= tile.x + tile.width && tile.y <= link.y && link.y <= tile.y + tile.height) || // link (x,y) is in tile\n                (tile.x <= link.x + link.width && link.x + link.width <= tile.x + tile.width && tile.y <= link.y && link.y <= tile.y + tile.height) || // link (x+w,y) is in tile\n                (tile.x <= link.x + link.width && link.x + link.width <= tile.x + tile.width && tile.y <= link.y + link.height && link.y + link.height <= tile.y + tile.height) || // link (x+w,y+h) is in tile\n                (tile.x <= link.x && link.x <= tile.x + tile.width && tile.y <= link.y + link.height && link.y + link.height <= tile.y + tile.height) // link (x,y+h) is in tile\n      ) {\n        currentTiles.push(tile)\n      }\n    }\n\n    return currentTiles\n  },\n\n  getLinkTile: function (map, link) {\n    const linkCenterX = link.x + link.width / 2\n    const linkCenterY = link.y + link.height / 2\n    const delta = 2\n    for (const tile of map.tilesIterator()) {\n      if (tile.x <= linkCenterX + delta && linkCenterX <= tile.x + tile.width - delta && tile.y <= linkCenterY + delta && linkCenterY <= tile.y + tile.height - delta) {\n        return tile\n      }\n    }\n\n    return undefined\n  },\n\n  getLinkFrontTile: function (map, link) {\n    const linkTile = link.tile ?? this.getLinkTile(map, link)\n    if (!linkTile) {\n      return undefined\n    }\n    if (link.direction === DIRECTION_WEST && linkTile.x >= link.x) {\n      return map.getTile(linkTile.column - 1, linkTile.line)\n    }\n    if (link.direction === DIRECTION_NORTH && linkTile.y >= link.y) {\n      return map.getTile(linkTile.column, linkTile.line - 1)\n    }\n    if (link.direction === DIRECTION_EAST && linkTile.x + linkTile.width <= link.x + link.width) {\n      return map.getTile(linkTile.column + 1, linkTile.line)\n    }\n    if (link.direction === DIRECTION_SOUTH && linkTile.y + linkTile.height <= link.y + link.height) {\n      return map.getTile(linkTile.column, linkTile.line + 1)\n    }\n    return linkTile\n  },\n\n  getReachedMapEdge: function (map, link) {\n    if (map.x >= link.x) {\n      return DIRECTION_WEST\n    }\n    if (map.y >= link.y) {\n      return DIRECTION_NORTH\n    }\n    if (map.x + map.width <= link.x) {\n      return DIRECTION_EAST\n    }\n    if (map.y + map.height <= link.y) {\n      return DIRECTION_SOUTH\n    }\n    return undefined\n  },\n\n  getHorizontalCenter: function (hitbox) {\n    const minX = this.getMinX(hitbox)\n    const maxX = this.getMaxX(hitbox)\n\n    return minX + (maxX - minX) / 2\n  }\n}\n\nexport default HitboxManager\n","'use strict'\n\nlet context\nlet gainNode\n\nexport default {\n  initContext () {\n    context = new AudioContext()\n    context.suspend()\n    context.createGain = context.createGain ? context.createGain : context.createGainNode\n    gainNode = context.createGain()\n    gainNode.connect(context.destination)\n  },\n  initEvents (playSoundsCheckbox, volumeRangeInput) {\n    const self = this\n    volumeRangeInput.addEventListener('change', (e) => {\n      e.preventDefault()\n      self.updateVolume(parseInt(e.target.value) / parseInt(e.target.max))\n    })\n    volumeRangeInput.value = 50\n    volumeRangeInput.dispatchEvent(new Event('change'))\n\n    playSoundsCheckbox.addEventListener('change', (e) => {\n      if (e.target.checked) {\n        self.enable()\n      } else {\n        self.disable()\n      }\n    })\n    playSoundsCheckbox.checked = false\n    playSoundsCheckbox.dispatchEvent(new Event('change'))\n  },\n  getContext () {\n    return context\n  },\n  getGainNode () {\n    return gainNode\n  },\n  updateVolume (value) {\n    gainNode.gain.setValueAtTime(value, context.currentTime)\n  },\n  enable () {\n    context.resume()\n  },\n  disable () {\n    context.suspend()\n  },\n  play (sound) {\n    sound.play()\n    const duration = sound.duration\n    if (duration) {\n      setTimeout(() => this.stop(sound), duration * 1000)\n    }\n  },\n  stop (sound) {\n    sound.stop()\n  }\n}\n","'use strict'\n\nimport resource from '../resource'\nimport { SPRITE_TEXT_PREFIX, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT } from '../constant'\n\nexport default {\n  draw: function (context, text, color, x, y, width, height, maxLength) {\n    maxLength = maxLength === undefined ? text.length : maxLength\n    const maxNbLines = Math.floor(height / SPRITE_TEXT_HEIGHT)\n    const lines = this.splitTextIntoLines(text, width)\n    let nbDisplayedCharacters = 0\n    for (let i = 0; i < lines.length; i++) {\n      const centeredLine = this.centerLine(lines[i], width)\n      const displayedLine = centeredLine.substring(0, maxLength - nbDisplayedCharacters)\n      nbDisplayedCharacters += (displayedLine.length - 1) // Sub one to handle skipped space on line break\n      this.drawLine(context, displayedLine, color, x, y)\n      y += SPRITE_TEXT_HEIGHT\n      if ((i + 1) >= maxNbLines) {\n        break\n      }\n    }\n  },\n\n  drawLine: function (context, text, color, x, y) {\n    for (const char of text) {\n      const sprite = resource.getSprite(`${SPRITE_TEXT_PREFIX}_${color}_${char.toLowerCase()}`)\n      if (sprite) {\n        sprite.draw(context, x, y, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT)\n      }\n      x += SPRITE_TEXT_WIDTH\n    }\n  },\n\n  splitTextIntoLines: function (text, maxWidth) {\n    const textPerLine = []\n    const nbLettersPerLine = Math.floor(maxWidth / SPRITE_TEXT_WIDTH)\n    let currentLine = ''\n    const parts = text.split(' ')\n    for (const part of parts) {\n      let currentNbLetters = currentLine.length\n      if (currentNbLetters > 0) {\n        currentNbLetters += 1 // Count space\n      }\n      if (currentNbLetters + part.length <= nbLettersPerLine) {\n        currentLine += currentNbLetters > 0 ? ` ${part}` : `${part}`\n      } else {\n        textPerLine.push(currentLine)\n        currentLine = `${part}`\n      }\n    }\n    if (currentLine.length > 0) {\n      textPerLine.push(currentLine)\n    }\n    return textPerLine\n  },\n\n  centerLine: function (text, maxWidth) {\n    const nbLettersPerLine = Math.floor(maxWidth / SPRITE_TEXT_WIDTH)\n    const spacesLeft = nbLettersPerLine - text.length\n    const nbStartSpaces = Math.ceil(spacesLeft / 2)\n    const nEndSpaces = Math.floor(spacesLeft / 2)\n    text = text.padStart(text.length + nbStartSpaces, ' ')\n    text = text.padEnd(text.length + nEndSpaces, ' ')\n    return text\n  }\n}\n","'use strict'\n\nimport { TILES_PER_LINE, TILES_PER_COLUMN, TILE_WIDTH, TILE_HEIGHT, MAP_TYPE_WORLD, MAP_TYPE_CAVERNS, MAP_TYPE_LEVEL1 } from '../constant'\nimport { Map } from '../model/map'\nimport { Tile } from '../model/tile'\nimport resource from '../resource'\nimport HitboxManager from './hitbox-manager'\nimport { TileTransition } from '../model/tile-transition'\nimport { Extra } from '../model/extra'\nimport { Character } from '../model/character'\n\nexport default {\n  world: [],\n  caverns: [],\n  level1: [],\n  level2: [],\n  level3: [],\n  level4: [],\n  level5: [],\n  level6: [],\n  level7: [],\n  level8: [],\n  level9: [],\n\n  createMaps (data) {\n    this.world = this.createMapsForType('world', data.world)\n    this.caverns = this.createMapsForType('caverns', data.caverns)\n    this.level1 = this.createMapsForType('level1', data.level1)\n  },\n\n  createMapsForType (type, mapsData) {\n    const maps = []\n    for (let i = 0; i < mapsData.length; i++) {\n      const mapData = mapsData[i]\n      const column = mapData.x\n      const line = mapData.y\n      const width = TILES_PER_LINE * TILE_WIDTH\n      const height = TILES_PER_COLUMN * TILE_HEIGHT\n      const x = column * width\n      const y = line * height\n      const tiles = this.createMapTiles(mapData.tiles, x, y)\n      if (!maps[column]) {\n        maps[column] = []\n      }\n      const characters = []\n      for (const characteraData of mapData.characters) {\n        const characterColumn = characteraData.x\n        const characterLine = characteraData.y\n        const characterWidth = TILE_WIDTH\n        const characterHeight = TILE_HEIGHT\n        const characterX = x + characterColumn * characterWidth\n        const characterY = y + characterLine * characterHeight\n        const characterSprite = resource.getSprite(characteraData.sprite)\n        const characterText = characteraData.text\n        characters.push(new Character(characterColumn, characterLine, characterX, characterY, characterWidth, characterHeight, characterSprite, characterText))\n      }\n      const extras = []\n      for (const extraData of mapData.extras) {\n        const extraColumn = extraData.x\n        const extraLine = extraData.y\n        const extraWidth = TILE_WIDTH\n        const extraHeight = TILE_HEIGHT\n        const extraX = x + extraColumn * extraWidth\n        const extraY = y + extraLine * extraHeight\n        const extraSprite = resource.getSprite(extraData.sprite)\n        extras.push(new Extra(extraColumn, extraLine, extraX, extraY, extraWidth, extraHeight, extraSprite))\n      }\n      maps[column][line] = new Map(column, line, x, y, width, height, type, tiles, characters, extras)\n    }\n\n    return maps\n  },\n\n  createMapTiles (tilesData, offsetX, offsetY) {\n    const tiles = []\n    for (let i = 0; i < tilesData.length; i++) {\n      const tileData = tilesData[i]\n      const column = tileData.x\n      const line = tileData.y\n      const width = TILE_WIDTH\n      const height = TILE_HEIGHT\n      const x = column * width + offsetX\n      const y = line * height + offsetY\n      const sprite = resource.getSprite(tileData.sprite)\n      const block = HitboxManager.getHitboxFromString(x, y, width, height, tileData.hitbox)\n      const transition = new TileTransition(tileData.transition?.start, tileData.transition?.targetMapType, tileData.transition?.targetMapColumn, tileData.transition?.targetMapLine, tileData.transition?.targetTileColumn, tileData.transition?.targetTileLine, tileData.transition?.end)\n      if (!tiles[column]) {\n        tiles[column] = []\n      }\n      tiles[column][line] = new Tile(column, line, x, y, width, height, tileData.hitbox, sprite, block, undefined, transition, !!tileData.start)\n    }\n\n    return tiles\n  },\n\n  getMap (type, column, line) {\n    return this[type] && this[type][column] && this[type][column][line] ? this[type][column][line] : undefined\n  },\n\n  findStartingPosition () {\n    for (const map of this.mapsIterator(MAP_TYPE_WORLD)) {\n      for (const tile of map.tilesIterator()) {\n        if (tile.start) {\n          return {\n            map,\n            tileColumn: tile.column,\n            tileLine: tile.line\n          }\n        }\n      }\n    }\n  },\n\n  * mapsIterator (type) {\n    for (let column = 0; column < this[type].length; column++) {\n      for (let line = 0; line < this[type][column].length; line++) {\n        yield this[type][column][line]\n      }\n    }\n  },\n\n  exportGame () {\n    const world = this.exportMaps(MAP_TYPE_WORLD)\n    const caverns = this.exportMaps(MAP_TYPE_CAVERNS)\n    const level1 = this.exportMaps(MAP_TYPE_LEVEL1)\n\n    return { world, caverns, level1 }\n  },\n\n  exportMaps (type) {\n    const mapsData = []\n    for (const map of this.mapsIterator(type)) {\n      const mapData = {\n        x: map.column,\n        y: map.line,\n        tiles: [],\n        characters: [],\n        extras: []\n      }\n      for (const character of map.characters) {\n        mapData.characters.push({\n          x: character.column,\n          y: character.line,\n          sprite: character.sprite.name,\n          text: character.text\n        })\n      }\n      for (const extra of map.extras) {\n        mapData.extras.push({\n          x: extra.column,\n          y: extra.line,\n          sprite: extra.sprite.name\n        })\n      }\n      for (const tile of map.tilesIterator()) {\n        const tileData = {\n          x: tile.column,\n          y: tile.line,\n          hitbox: tile.hitbox,\n          sprite: tile.sprite.name\n        }\n        if (!tile.tileTransition.isEmpty()) {\n          tileData.transition = {\n            start: tile.tileTransition.start,\n            targetMapType: tile.tileTransition.targetMapType,\n            targetMapColumn: tile.tileTransition.targetMapColumn,\n            targetMapLine: tile.tileTransition.targetMapLine,\n            targetTileColumn: tile.tileTransition.targetTileColumn,\n            targetTileLine: tile.tileTransition.targetTileLine,\n            end: tile.tileTransition.end\n          }\n        }\n        if (tile.start) {\n          tileData.start = true\n        }\n        mapData.tiles.push(tileData)\n      }\n      mapsData.push(mapData)\n    }\n    return mapsData\n  }\n}\n","'use strict'\n\nconst COMPRESSION_GZIP = 'gzip'\n\nconst compression = {\n  compress: async function (str) {\n    const stream = new Blob([str]).stream()\n    const compressedStream = stream.pipeThrough(new CompressionStream(COMPRESSION_GZIP))\n    const chunks = []\n    for await (const chunk of compressedStream) {\n      chunks.push(chunk)\n    }\n    return await this.concatUint8Arrays(chunks)\n  },\n  decompress: async function (compressedBytes) {\n    const stream = new Blob([compressedBytes]).stream()\n    const decompressedStream = stream.pipeThrough(new DecompressionStream(COMPRESSION_GZIP))\n    const chunks = []\n    for await (const chunk of decompressedStream) {\n      chunks.push(chunk)\n    }\n    const stringBytes = await this.concatUint8Arrays(chunks)\n    return new TextDecoder().decode(stringBytes)\n  },\n  concatUint8Arrays: async function (uint8arrays) {\n    const blob = new Blob(uint8arrays)\n    const buffer = await blob.arrayBuffer()\n    return new Uint8Array(buffer)\n  }\n}\n\nexport default compression\n","'use strict'\r\n\r\nimport compression from './compression'\r\nimport { FILE_TYPE_JSON, FILE_TYPE_LOZ, FILE_TYPE_MP3, FILE_TYPE_PNG, FILE_TYPE_WEBP } from '../constant'\r\n\r\nexport default {\r\n  openFile: async function (type) {\r\n    const self = this\r\n    return new Promise((resolve, reject) => {\r\n      const input = document.createElement('input')\r\n      input.type = 'file'\r\n      if (type) {\r\n        input.accept = `.${type}`\r\n      }\r\n      input.style.display = 'none'\r\n      input.addEventListener('cancel', () => {\r\n        input.remove()\r\n      })\r\n      input.addEventListener('change', async () => {\r\n        const files = input.files\r\n        input.remove()\r\n        if (files.length === 1) {\r\n          resolve(await self.readFile(files[0], type))\r\n        } else {\r\n          reject()\r\n        }\r\n      })\r\n      document.body.appendChild(input)\r\n      input.click()\r\n    })\r\n  },\r\n  readFile: async function (file, type) {\r\n    if (!type) {\r\n      type = this.guessTypeFromExtension(file.name)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader()\r\n      fileReader.onload = async (e) => {\r\n        let data = e.target.result\r\n        switch (type) {\r\n          case FILE_TYPE_LOZ:\r\n            data = new Uint8Array(data)\r\n            data = await compression.decompress(data)\r\n            try {\r\n              data = JSON.parse(data)\r\n            } catch (e) {}\r\n            resolve(data)\r\n            break\r\n          case FILE_TYPE_JSON:\r\n            resolve(JSON.parse(data))\r\n            break\r\n          case FILE_TYPE_PNG:\r\n            const img = await fetch(data)\r\n            const blob = await img.blob()\r\n            resolve(createImageBitmap(blob))\r\n            break\r\n          default:\r\n            reject()\r\n        }\r\n      }\r\n      switch (type) {\r\n        case FILE_TYPE_LOZ:\r\n          fileReader.readAsArrayBuffer(file)\r\n          break\r\n        case FILE_TYPE_PNG:\r\n          fileReader.readAsDataURL(file)\r\n          break\r\n        case FILE_TYPE_JSON:\r\n        default:\r\n          fileReader.readAsText(file)\r\n      }\r\n    })\r\n  },\r\n  dowloadFile: async function (data, type) {\r\n    const filename = prompt('Filename')\r\n    if (!filename) {\r\n      return\r\n    }\r\n    switch (type) {\r\n      case FILE_TYPE_LOZ:\r\n        data = await compression.compress(data)\r\n        break\r\n      case FILE_TYPE_JSON:\r\n      default:\r\n                // nothing\r\n    }\r\n    const a = document.createElement('a')\r\n    a.style.display = 'none'\r\n    a.href = URL.createObjectURL(new Blob([data]))\r\n    a.download = `${filename.toLowerCase()}.${type}`\r\n    a.textContent = 'Download'\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  },\r\n  fetchRemoteFiles: async function (/* Each argument will be loaded */) {\r\n    let paths = Array.prototype.slice.call(arguments)\r\n    if (!Array.isArray(paths)) {\r\n      paths = [paths]\r\n    }\r\n    if (paths.length === 1 && Array.isArray(paths[0])) {\r\n      paths = paths[0]\r\n    }\r\n\r\n    const promises = []\r\n    for (let i = 0; i < paths.length; i++) {\r\n      promises.push(this.fetchRemoteFile(paths[i]))\r\n    }\r\n\r\n    return Promise.all(promises)\r\n  },\r\n  fetchRemoteFile: async function (path) {\r\n    const extension = path.split('.').pop()\r\n    switch (extension) {\r\n      case FILE_TYPE_JSON:\r\n        return this.fetchJsonFile(path)\r\n      case FILE_TYPE_LOZ:\r\n        return this.fetchLozFile(path)\r\n      case FILE_TYPE_MP3:\r\n        return this.fetchAudioFile(path)\r\n      case FILE_TYPE_PNG:\r\n      case FILE_TYPE_WEBP:\r\n        return this.fetchImageFile(path)\r\n      default:\r\n        throw new Error(`IO: extension not allowed for file ${path}`)\r\n    }\r\n  },\r\n  fetchLozFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.arrayBuffer()\r\n    data = new Uint8Array(data)\r\n    data = await compression.decompress(data)\r\n    try {\r\n      data = JSON.parse(data)\r\n    } catch (e) {}\r\n    return data\r\n  },\r\n  fetchJsonFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.json()\r\n    return data\r\n  },\r\n  fetchImageFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.blob()\r\n    data = createImageBitmap(data)\r\n    return data\r\n  },\r\n  fetchAudioFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.arrayBuffer()\r\n    return data\r\n  },\r\n  guessTypeFromExtension: (filename) => {\r\n    return filename.split('.').at(-1)\r\n  }\r\n}\r\n","/*\n * @copyright 2016 Sean Connelly (@voidqk), http://syntheti.cc\n * @license MIT\n * @preserve Project Home: https://github.com/voidqk/polybooljs\n */\n\nvar BuildLog = require('./lib/build-log');\nvar Epsilon = require('./lib/epsilon');\nvar Intersecter = require('./lib/intersecter');\nvar SegmentChainer = require('./lib/segment-chainer');\nvar SegmentSelector = require('./lib/segment-selector');\nvar GeoJSON = require('./lib/geojson');\n\nvar buildLog = false;\nvar epsilon = Epsilon();\n\nvar PolyBool;\nPolyBool = {\n\t// getter/setter for buildLog\n\tbuildLog: function(bl){\n\t\tif (bl === true)\n\t\t\tbuildLog = BuildLog();\n\t\telse if (bl === false)\n\t\t\tbuildLog = false;\n\t\treturn buildLog === false ? false : buildLog.list;\n\t},\n\t// getter/setter for epsilon\n\tepsilon: function(v){\n\t\treturn epsilon.epsilon(v);\n\t},\n\n\t// core API\n\tsegments: function(poly){\n\t\tvar i = Intersecter(true, epsilon, buildLog);\n\t\tpoly.regions.forEach(i.addRegion);\n\t\treturn {\n\t\t\tsegments: i.calculate(poly.inverted),\n\t\t\tinverted: poly.inverted\n\t\t};\n\t},\n\tcombine: function(segments1, segments2){\n\t\tvar i3 = Intersecter(false, epsilon, buildLog);\n\t\treturn {\n\t\t\tcombined: i3.calculate(\n\t\t\t\tsegments1.segments, segments1.inverted,\n\t\t\t\tsegments2.segments, segments2.inverted\n\t\t\t),\n\t\t\tinverted1: segments1.inverted,\n\t\t\tinverted2: segments2.inverted\n\t\t};\n\t},\n\tselectUnion: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.union(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 || combined.inverted2\n\t\t}\n\t},\n\tselectIntersect: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.intersect(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectDifference: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.difference(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && !combined.inverted2\n\t\t}\n\t},\n\tselectDifferenceRev: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.differenceRev(combined.combined, buildLog),\n\t\t\tinverted: !combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectXor: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.xor(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 !== combined.inverted2\n\t\t}\n\t},\n\tpolygon: function(segments){\n\t\treturn {\n\t\t\tregions: SegmentChainer(segments.segments, epsilon, buildLog),\n\t\t\tinverted: segments.inverted\n\t\t};\n\t},\n\n\t// GeoJSON converters\n\tpolygonFromGeoJSON: function(geojson){\n\t\treturn GeoJSON.toPolygon(PolyBool, geojson);\n\t},\n\tpolygonToGeoJSON: function(poly){\n\t\treturn GeoJSON.fromPolygon(PolyBool, epsilon, poly);\n\t},\n\n\t// helper functions for common operations\n\tunion: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectUnion);\n\t},\n\tintersect: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectIntersect);\n\t},\n\tdifference: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifference);\n\t},\n\tdifferenceRev: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifferenceRev);\n\t},\n\txor: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectXor);\n\t}\n};\n\nfunction operate(poly1, poly2, selector){\n\tvar seg1 = PolyBool.segments(poly1);\n\tvar seg2 = PolyBool.segments(poly2);\n\tvar comb = PolyBool.combine(seg1, seg2);\n\tvar seg3 = selector(comb);\n\treturn PolyBool.polygon(seg3);\n}\n\nif (typeof window === 'object')\n\twindow.PolyBool = PolyBool;\n\nmodule.exports = PolyBool;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// used strictly for logging the processing of the algorithm... only useful if you intend on\n// looking under the covers (for pretty UI's or debugging)\n//\n\nfunction BuildLog(){\n\tvar my;\n\tvar nextSegmentId = 0;\n\tvar curVert = false;\n\n\tfunction push(type, data){\n\t\tmy.list.push({\n\t\t\ttype: type,\n\t\t\tdata: data ? JSON.parse(JSON.stringify(data)) : void 0\n\t\t});\n\t\treturn my;\n\t}\n\n\tmy = {\n\t\tlist: [],\n\t\tsegmentId: function(){\n\t\t\treturn nextSegmentId++;\n\t\t},\n\t\tcheckIntersection: function(seg1, seg2){\n\t\t\treturn push('check', { seg1: seg1, seg2: seg2 });\n\t\t},\n\t\tsegmentChop: function(seg, end){\n\t\t\tpush('div_seg', { seg: seg, pt: end });\n\t\t\treturn push('chop', { seg: seg, pt: end });\n\t\t},\n\t\tstatusRemove: function(seg){\n\t\t\treturn push('pop_seg', { seg: seg });\n\t\t},\n\t\tsegmentUpdate: function(seg){\n\t\t\treturn push('seg_update', { seg: seg });\n\t\t},\n\t\tsegmentNew: function(seg, primary){\n\t\t\treturn push('new_seg', { seg: seg, primary: primary });\n\t\t},\n\t\tsegmentRemove: function(seg){\n\t\t\treturn push('rem_seg', { seg: seg });\n\t\t},\n\t\ttempStatus: function(seg, above, below){\n\t\t\treturn push('temp_status', { seg: seg, above: above, below: below });\n\t\t},\n\t\trewind: function(seg){\n\t\t\treturn push('rewind', { seg: seg });\n\t\t},\n\t\tstatus: function(seg, above, below){\n\t\t\treturn push('status', { seg: seg, above: above, below: below });\n\t\t},\n\t\tvert: function(x){\n\t\t\tif (x === curVert)\n\t\t\t\treturn my;\n\t\t\tcurVert = x;\n\t\t\treturn push('vert', { x: x });\n\t\t},\n\t\tlog: function(data){\n\t\t\tif (typeof data !== 'string')\n\t\t\t\tdata = JSON.stringify(data, false, '  ');\n\t\t\treturn push('log', { txt: data });\n\t\t},\n\t\treset: function(){\n\t\t\treturn push('reset');\n\t\t},\n\t\tselected: function(segs){\n\t\t\treturn push('selected', { segs: segs });\n\t\t},\n\t\tchainStart: function(seg){\n\t\t\treturn push('chain_start', { seg: seg });\n\t\t},\n\t\tchainRemoveHead: function(index, pt){\n\t\t\treturn push('chain_rem_head', { index: index, pt: pt });\n\t\t},\n\t\tchainRemoveTail: function(index, pt){\n\t\t\treturn push('chain_rem_tail', { index: index, pt: pt });\n\t\t},\n\t\tchainNew: function(pt1, pt2){\n\t\t\treturn push('chain_new', { pt1: pt1, pt2: pt2 });\n\t\t},\n\t\tchainMatch: function(index){\n\t\t\treturn push('chain_match', { index: index });\n\t\t},\n\t\tchainClose: function(index){\n\t\t\treturn push('chain_close', { index: index });\n\t\t},\n\t\tchainAddHead: function(index, pt){\n\t\t\treturn push('chain_add_head', { index: index, pt: pt });\n\t\t},\n\t\tchainAddTail: function(index, pt){\n\t\t\treturn push('chain_add_tail', { index: index, pt: pt, });\n\t\t},\n\t\tchainConnect: function(index1, index2){\n\t\t\treturn push('chain_con', { index1: index1, index2: index2 });\n\t\t},\n\t\tchainReverse: function(index){\n\t\t\treturn push('chain_rev', { index: index });\n\t\t},\n\t\tchainJoin: function(index1, index2){\n\t\t\treturn push('chain_join', { index1: index1, index2: index2 });\n\t\t},\n\t\tdone: function(){\n\t\t\treturn push('done');\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = BuildLog;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// provides the raw computation functions that takes epsilon into account\n//\n// zero is defined to be between (-epsilon, epsilon) exclusive\n//\n\nfunction Epsilon(eps){\n\tif (typeof eps !== 'number')\n\t\teps = 0.0000000001; // sane default? sure why not\n\tvar my = {\n\t\tepsilon: function(v){\n\t\t\tif (typeof v === 'number')\n\t\t\t\teps = v;\n\t\t\treturn eps;\n\t\t},\n\t\tpointAboveOrOnLine: function(pt, left, right){\n\t\t\tvar Ax = left[0];\n\t\t\tvar Ay = left[1];\n\t\t\tvar Bx = right[0];\n\t\t\tvar By = right[1];\n\t\t\tvar Cx = pt[0];\n\t\t\tvar Cy = pt[1];\n\t\t\treturn (Bx - Ax) * (Cy - Ay) - (By - Ay) * (Cx - Ax) >= -eps;\n\t\t},\n\t\tpointBetween: function(p, left, right){\n\t\t\t// p must be collinear with left->right\n\t\t\t// returns false if p == left, p == right, or left == right\n\t\t\tvar d_py_ly = p[1] - left[1];\n\t\t\tvar d_rx_lx = right[0] - left[0];\n\t\t\tvar d_px_lx = p[0] - left[0];\n\t\t\tvar d_ry_ly = right[1] - left[1];\n\n\t\t\tvar dot = d_px_lx * d_rx_lx + d_py_ly * d_ry_ly;\n\t\t\t// if `dot` is 0, then `p` == `left` or `left` == `right` (reject)\n\t\t\t// if `dot` is less than 0, then `p` is to the left of `left` (reject)\n\t\t\tif (dot < eps)\n\t\t\t\treturn false;\n\n\t\t\tvar sqlen = d_rx_lx * d_rx_lx + d_ry_ly * d_ry_ly;\n\t\t\t// if `dot` > `sqlen`, then `p` is to the right of `right` (reject)\n\t\t\t// therefore, if `dot - sqlen` is greater than 0, then `p` is to the right of `right` (reject)\n\t\t\tif (dot - sqlen > -eps)\n\t\t\t\treturn false;\n\n\t\t\treturn true;\n\t\t},\n\t\tpointsSameX: function(p1, p2){\n\t\t\treturn Math.abs(p1[0] - p2[0]) < eps;\n\t\t},\n\t\tpointsSameY: function(p1, p2){\n\t\t\treturn Math.abs(p1[1] - p2[1]) < eps;\n\t\t},\n\t\tpointsSame: function(p1, p2){\n\t\t\treturn my.pointsSameX(p1, p2) && my.pointsSameY(p1, p2);\n\t\t},\n\t\tpointsCompare: function(p1, p2){\n\t\t\t// returns -1 if p1 is smaller, 1 if p2 is smaller, 0 if equal\n\t\t\tif (my.pointsSameX(p1, p2))\n\t\t\t\treturn my.pointsSameY(p1, p2) ? 0 : (p1[1] < p2[1] ? -1 : 1);\n\t\t\treturn p1[0] < p2[0] ? -1 : 1;\n\t\t},\n\t\tpointsCollinear: function(pt1, pt2, pt3){\n\t\t\t// does pt1->pt2->pt3 make a straight line?\n\t\t\t// essentially this is just checking to see if the slope(pt1->pt2) === slope(pt2->pt3)\n\t\t\t// if slopes are equal, then they must be collinear, because they share pt2\n\t\t\tvar dx1 = pt1[0] - pt2[0];\n\t\t\tvar dy1 = pt1[1] - pt2[1];\n\t\t\tvar dx2 = pt2[0] - pt3[0];\n\t\t\tvar dy2 = pt2[1] - pt3[1];\n\t\t\treturn Math.abs(dx1 * dy2 - dx2 * dy1) < eps;\n\t\t},\n\t\tlinesIntersect: function(a0, a1, b0, b1){\n\t\t\t// returns false if the lines are coincident (e.g., parallel or on top of each other)\n\t\t\t//\n\t\t\t// returns an object if the lines intersect:\n\t\t\t//   {\n\t\t\t//     pt: [x, y],    where the intersection point is at\n\t\t\t//     alongA: where intersection point is along A,\n\t\t\t//     alongB: where intersection point is along B\n\t\t\t//   }\n\t\t\t//\n\t\t\t//  alongA and alongB will each be one of: -2, -1, 0, 1, 2\n\t\t\t//\n\t\t\t//  with the following meaning:\n\t\t\t//\n\t\t\t//    -2   intersection point is before segment's first point\n\t\t\t//    -1   intersection point is directly on segment's first point\n\t\t\t//     0   intersection point is between segment's first and second points (exclusive)\n\t\t\t//     1   intersection point is directly on segment's second point\n\t\t\t//     2   intersection point is after segment's second point\n\t\t\tvar adx = a1[0] - a0[0];\n\t\t\tvar ady = a1[1] - a0[1];\n\t\t\tvar bdx = b1[0] - b0[0];\n\t\t\tvar bdy = b1[1] - b0[1];\n\n\t\t\tvar axb = adx * bdy - ady * bdx;\n\t\t\tif (Math.abs(axb) < eps)\n\t\t\t\treturn false; // lines are coincident\n\n\t\t\tvar dx = a0[0] - b0[0];\n\t\t\tvar dy = a0[1] - b0[1];\n\n\t\t\tvar A = (bdx * dy - bdy * dx) / axb;\n\t\t\tvar B = (adx * dy - ady * dx) / axb;\n\n\t\t\tvar ret = {\n\t\t\t\talongA: 0,\n\t\t\t\talongB: 0,\n\t\t\t\tpt: [\n\t\t\t\t\ta0[0] + A * adx,\n\t\t\t\t\ta0[1] + A * ady\n\t\t\t\t]\n\t\t\t};\n\n\t\t\t// categorize where intersection point is along A and B\n\n\t\t\tif (A <= -eps)\n\t\t\t\tret.alongA = -2;\n\t\t\telse if (A < eps)\n\t\t\t\tret.alongA = -1;\n\t\t\telse if (A - 1 <= -eps)\n\t\t\t\tret.alongA = 0;\n\t\t\telse if (A - 1 < eps)\n\t\t\t\tret.alongA = 1;\n\t\t\telse\n\t\t\t\tret.alongA = 2;\n\n\t\t\tif (B <= -eps)\n\t\t\t\tret.alongB = -2;\n\t\t\telse if (B < eps)\n\t\t\t\tret.alongB = -1;\n\t\t\telse if (B - 1 <= -eps)\n\t\t\t\tret.alongB = 0;\n\t\t\telse if (B - 1 < eps)\n\t\t\t\tret.alongB = 1;\n\t\t\telse\n\t\t\t\tret.alongB = 2;\n\n\t\t\treturn ret;\n\t\t},\n\t\tpointInsideRegion: function(pt, region){\n\t\t\tvar x = pt[0];\n\t\t\tvar y = pt[1];\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar inside = false;\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\n\t\t\t\t// if y is between curr_y and last_y, and\n\t\t\t\t// x is to the right of the boundary created by the line\n\t\t\t\tif ((curr_y - y > eps) != (last_y - y > eps) &&\n\t\t\t\t\t(last_x - curr_x) * (y - curr_y) / (last_y - curr_y) + curr_x - x > eps)\n\t\t\t\t\tinside = !inside\n\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\treturn inside;\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = Epsilon;\n","// (c) Copyright 2017, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// convert between PolyBool polygon format and GeoJSON formats (Polygon and MultiPolygon)\n//\n\nvar GeoJSON = {\n\t// convert a GeoJSON object to a PolyBool polygon\n\ttoPolygon: function(PolyBool, geojson){\n\n\t\t// converts list of LineString's to segments\n\t\tfunction GeoPoly(coords){\n\t\t\t// check for empty coords\n\t\t\tif (coords.length <= 0)\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [] });\n\n\t\t\t// convert LineString to segments\n\t\t\tfunction LineString(ls){\n\t\t\t\t// remove tail which should be the same as head\n\t\t\t\tvar reg = ls.slice(0, ls.length - 1);\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [reg] });\n\t\t\t}\n\n\t\t\t// the first LineString is considered the outside\n\t\t\tvar out = LineString(coords[0]);\n\n\t\t\t// the rest of the LineStrings are considered interior holes, so subtract them from the\n\t\t\t// current result\n\t\t\tfor (var i = 1; i < coords.length; i++)\n\t\t\t\tout = PolyBool.selectDifference(PolyBool.combine(out, LineString(coords[i])));\n\n\t\t\treturn out;\n\t\t}\n\n\t\tif (geojson.type === 'Polygon'){\n\t\t\t// single polygon, so just convert it and we're done\n\t\t\treturn PolyBool.polygon(GeoPoly(geojson.coordinates));\n\t\t}\n\t\telse if (geojson.type === 'MultiPolygon'){\n\t\t\t// multiple polygons, so union all the polygons together\n\t\t\tvar out = PolyBool.segments({ inverted: false, regions: [] });\n\t\t\tfor (var i = 0; i < geojson.coordinates.length; i++)\n\t\t\t\tout = PolyBool.selectUnion(PolyBool.combine(out, GeoPoly(geojson.coordinates[i])));\n\t\t\treturn PolyBool.polygon(out);\n\t\t}\n\t\tthrow new Error('PolyBool: Cannot convert GeoJSON object to PolyBool polygon');\n\t},\n\n\t// convert a PolyBool polygon to a GeoJSON object\n\tfromPolygon: function(PolyBool, eps, poly){\n\t\t// make sure out polygon is clean\n\t\tpoly = PolyBool.polygon(PolyBool.segments(poly));\n\n\t\t// test if r1 is inside r2\n\t\tfunction regionInsideRegion(r1, r2){\n\t\t\t// we're guaranteed no lines intersect (because the polygon is clean), but a vertex\n\t\t\t// could be on the edge -- so we just average pt[0] and pt[1] to produce a point on the\n\t\t\t// edge of the first line, which cannot be on an edge\n\t\t\treturn eps.pointInsideRegion([\n\t\t\t\t(r1[0][0] + r1[1][0]) * 0.5,\n\t\t\t\t(r1[0][1] + r1[1][1]) * 0.5\n\t\t\t], r2);\n\t\t}\n\n\t\t// calculate inside heirarchy\n\t\t//\n\t\t//  _____________________   _______    roots -> A       -> F\n\t\t// |          A          | |   F   |            |          |\n\t\t// |  _______   _______  | |  ___  |            +-- B      +-- G\n\t\t// | |   B   | |   C   | | | |   | |            |   |\n\t\t// | |  ___  | |  ___  | | | |   | |            |   +-- D\n\t\t// | | | D | | | | E | | | | | G | |            |\n\t\t// | | |___| | | |___| | | | |   | |            +-- C\n\t\t// | |_______| |_______| | | |___| |                |\n\t\t// |_____________________| |_______|                +-- E\n\n\t\tfunction newNode(region){\n\t\t\treturn {\n\t\t\t\tregion: region,\n\t\t\t\tchildren: []\n\t\t\t};\n\t\t}\n\n\t\tvar roots = newNode(null);\n\n\t\tfunction addChild(root, region){\n\t\t\t// first check if we're inside any children\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(region, child.region)){\n\t\t\t\t\t// we are, so insert inside them instead\n\t\t\t\t\taddChild(child, region);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// not inside any children, so check to see if any children are inside us\n\t\t\tvar node = newNode(region);\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(child.region, region)){\n\t\t\t\t\t// oops... move the child beneath us, and remove them from root\n\t\t\t\t\tnode.children.push(child);\n\t\t\t\t\troot.children.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// now we can add ourselves\n\t\t\troot.children.push(node);\n\t\t}\n\n\t\t// add all regions to the root\n\t\tfor (var i = 0; i < poly.regions.length; i++){\n\t\t\tvar region = poly.regions[i];\n\t\t\tif (region.length < 3) // regions must have at least 3 points (sanity check)\n\t\t\t\tcontinue;\n\t\t\taddChild(roots, region);\n\t\t}\n\n\t\t// with our heirarchy, we can distinguish between exterior borders, and interior holes\n\t\t// the root nodes are exterior, children are interior, children's children are exterior,\n\t\t// children's children's children are interior, etc\n\n\t\t// while we're at it, exteriors are counter-clockwise, and interiors are clockwise\n\n\t\tfunction forceWinding(region, clockwise){\n\t\t\t// first, see if we're clockwise or counter-clockwise\n\t\t\t// https://en.wikipedia.org/wiki/Shoelace_formula\n\t\t\tvar winding = 0;\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar copy = [];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\t\t\t\tcopy.push([curr_x, curr_y]); // create a copy while we're at it\n\t\t\t\twinding += curr_y * last_x - curr_x * last_y;\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\t// this assumes Cartesian coordinates (Y is positive going up)\n\t\t\tvar isclockwise = winding < 0;\n\t\t\tif (isclockwise !== clockwise)\n\t\t\t\tcopy.reverse();\n\t\t\t// while we're here, the last point must be the first point...\n\t\t\tcopy.push([copy[0][0], copy[0][1]]);\n\t\t\treturn copy;\n\t\t}\n\n\t\tvar geopolys = [];\n\n\t\tfunction addExterior(node){\n\t\t\tvar poly = [forceWinding(node.region, false)];\n\t\t\tgeopolys.push(poly);\n\t\t\t// children of exteriors are interior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\tpoly.push(getInterior(node.children[i]));\n\t\t}\n\n\t\tfunction getInterior(node){\n\t\t\t// children of interiors are exterior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\taddExterior(node.children[i]);\n\t\t\t// return the clockwise interior\n\t\t\treturn forceWinding(node.region, true);\n\t\t}\n\n\t\t// root nodes are exterior\n\t\tfor (var i = 0; i < roots.children.length; i++)\n\t\t\taddExterior(roots.children[i]);\n\n\t\t// lastly, construct the approrpriate GeoJSON object\n\n\t\tif (geopolys.length <= 0) // empty GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: [] };\n\t\tif (geopolys.length == 1) // use a GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: geopolys[0] };\n\t\treturn { // otherwise, use a GeoJSON MultiPolygon\n\t\t\ttype: 'MultiPolygon',\n\t\t\tcoordinates: geopolys\n\t\t};\n\t}\n};\n\nmodule.exports = GeoJSON;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// this is the core work-horse\n//\n\nvar LinkedList = require('./linked-list');\n\nfunction Intersecter(selfIntersection, eps, buildLog){\n\t// selfIntersection is true/false depending on the phase of the overall algorithm\n\n\t//\n\t// segment creation\n\t//\n\n\tfunction segmentNew(start, end){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: null, // is there fill above us?\n\t\t\t\tbelow: null  // is there fill below us?\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\tfunction segmentCopy(start, end, seg){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: seg.myFill.above,\n\t\t\t\tbelow: seg.myFill.below\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\t//\n\t// event logic\n\t//\n\n\tvar event_root = LinkedList.create();\n\n\tfunction eventCompare(p1_isStart, p1_1, p1_2, p2_isStart, p2_1, p2_2){\n\t\t// compare the selected points first\n\t\tvar comp = eps.pointsCompare(p1_1, p2_1);\n\t\tif (comp !== 0)\n\t\t\treturn comp;\n\t\t// the selected points are the same\n\n\t\tif (eps.pointsSame(p1_2, p2_2)) // if the non-selected points are the same too...\n\t\t\treturn 0; // then the segments are equal\n\n\t\tif (p1_isStart !== p2_isStart) // if one is a start and the other isn't...\n\t\t\treturn p1_isStart ? 1 : -1; // favor the one that isn't the start\n\n\t\t// otherwise, we'll have to calculate which one is below the other manually\n\t\treturn eps.pointAboveOrOnLine(p1_2,\n\t\t\tp2_isStart ? p2_1 : p2_2, // order matters\n\t\t\tp2_isStart ? p2_2 : p2_1\n\t\t) ? 1 : -1;\n\t}\n\n\tfunction eventAdd(ev, other_pt){\n\t\tevent_root.insertBefore(ev, function(here){\n\t\t\t// should ev be inserted before here?\n\t\t\tvar comp = eventCompare(\n\t\t\t\tev  .isStart, ev  .pt,      other_pt,\n\t\t\t\there.isStart, here.pt, here.other.pt\n\t\t\t);\n\t\t\treturn comp < 0;\n\t\t});\n\t}\n\n\tfunction eventAddSegmentStart(seg, primary){\n\t\tvar ev_start = LinkedList.node({\n\t\t\tisStart: true,\n\t\t\tpt: seg.start,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: null,\n\t\t\tstatus: null\n\t\t});\n\t\teventAdd(ev_start, seg.end);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventAddSegmentEnd(ev_start, seg, primary){\n\t\tvar ev_end = LinkedList.node({\n\t\t\tisStart: false,\n\t\t\tpt: seg.end,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: ev_start,\n\t\t\tstatus: null\n\t\t});\n\t\tev_start.other = ev_end;\n\t\teventAdd(ev_end, ev_start.pt);\n\t}\n\n\tfunction eventAddSegment(seg, primary){\n\t\tvar ev_start = eventAddSegmentStart(seg, primary);\n\t\teventAddSegmentEnd(ev_start, seg, primary);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventUpdateEnd(ev, end){\n\t\t// slides an end backwards\n\t\t//   (start)------------(end)    to:\n\t\t//   (start)---(end)\n\n\t\tif (buildLog)\n\t\t\tbuildLog.segmentChop(ev.seg, end);\n\n\t\tev.other.remove();\n\t\tev.seg.end = end;\n\t\tev.other.pt = end;\n\t\teventAdd(ev.other, ev.pt);\n\t}\n\n\tfunction eventDivide(ev, pt){\n\t\tvar ns = segmentCopy(pt, ev.seg.end, ev.seg);\n\t\teventUpdateEnd(ev, pt);\n\t\treturn eventAddSegment(ns, ev.primary);\n\t}\n\n\tfunction calculate(primaryPolyInverted, secondaryPolyInverted){\n\t\t// if selfIntersection is true then there is no secondary polygon, so that isn't used\n\n\t\t//\n\t\t// status logic\n\t\t//\n\n\t\tvar status_root = LinkedList.create();\n\n\t\tfunction statusCompare(ev1, ev2){\n\t\t\tvar a1 = ev1.seg.start;\n\t\t\tvar a2 = ev1.seg.end;\n\t\t\tvar b1 = ev2.seg.start;\n\t\t\tvar b2 = ev2.seg.end;\n\n\t\t\tif (eps.pointsCollinear(a1, b1, b2)){\n\t\t\t\tif (eps.pointsCollinear(a2, b1, b2))\n\t\t\t\t\treturn 1;//eventCompare(true, a1, a2, true, b1, b2);\n\t\t\t\treturn eps.pointAboveOrOnLine(a2, b1, b2) ? 1 : -1;\n\t\t\t}\n\t\t\treturn eps.pointAboveOrOnLine(a1, b1, b2) ? 1 : -1;\n\t\t}\n\n\t\tfunction statusFindSurrounding(ev){\n\t\t\treturn status_root.findTransition(function(here){\n\t\t\t\tvar comp = statusCompare(ev, here.ev);\n\t\t\t\treturn comp > 0;\n\t\t\t});\n\t\t}\n\n\t\tfunction checkIntersection(ev1, ev2){\n\t\t\t// returns the segment equal to ev1, or false if nothing equal\n\n\t\t\tvar seg1 = ev1.seg;\n\t\t\tvar seg2 = ev2.seg;\n\t\t\tvar a1 = seg1.start;\n\t\t\tvar a2 = seg1.end;\n\t\t\tvar b1 = seg2.start;\n\t\t\tvar b2 = seg2.end;\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.checkIntersection(seg1, seg2);\n\n\t\t\tvar i = eps.linesIntersect(a1, a2, b1, b2);\n\n\t\t\tif (i === false){\n\t\t\t\t// segments are parallel or coincident\n\n\t\t\t\t// if points aren't collinear, then the segments are parallel, so no intersections\n\t\t\t\tif (!eps.pointsCollinear(a1, a2, b1))\n\t\t\t\t\treturn false;\n\t\t\t\t// otherwise, segments are on top of each other somehow (aka coincident)\n\n\t\t\t\tif (eps.pointsSame(a1, b2) || eps.pointsSame(a2, b1))\n\t\t\t\t\treturn false; // segments touch at endpoints... no intersection\n\n\t\t\t\tvar a1_equ_b1 = eps.pointsSame(a1, b1);\n\t\t\t\tvar a2_equ_b2 = eps.pointsSame(a2, b2);\n\n\t\t\t\tif (a1_equ_b1 && a2_equ_b2)\n\t\t\t\t\treturn ev2; // segments are exactly equal\n\n\t\t\t\tvar a1_between = !a1_equ_b1 && eps.pointBetween(a1, b1, b2);\n\t\t\t\tvar a2_between = !a2_equ_b2 && eps.pointBetween(a2, b1, b2);\n\n\t\t\t\t// handy for debugging:\n\t\t\t\t// buildLog.log({\n\t\t\t\t//\ta1_equ_b1: a1_equ_b1,\n\t\t\t\t//\ta2_equ_b2: a2_equ_b2,\n\t\t\t\t//\ta1_between: a1_between,\n\t\t\t\t//\ta2_between: a2_between\n\t\t\t\t// });\n\n\t\t\t\tif (a1_equ_b1){\n\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t//  (a1)---(a2)\n\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//  (a1)----------(a2)\n\t\t\t\t\t\t//  (b1)---(b2)\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t}\n\t\t\t\t\treturn ev2;\n\t\t\t\t}\n\t\t\t\telse if (a1_between){\n\t\t\t\t\tif (!a2_equ_b2){\n\t\t\t\t\t\t// make a2 equal to b2\n\t\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t\t\t//  (b1)-----------------(b2)\n\t\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t//         (a1)----------(a2)\n\t\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// otherwise, lines intersect at i.pt, which may or may not be between the endpoints\n\n\t\t\t\t// is A divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongA === 0){\n\t\t\t\t\tif (i.alongB === -1) // yes, at exactly b1\n\t\t\t\t\t\teventDivide(ev1, b1);\n\t\t\t\t\telse if (i.alongB === 0) // yes, somewhere between B's endpoints\n\t\t\t\t\t\teventDivide(ev1, i.pt);\n\t\t\t\t\telse if (i.alongB === 1) // yes, at exactly b2\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t}\n\n\t\t\t\t// is B divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongB === 0){\n\t\t\t\t\tif (i.alongA === -1) // yes, at exactly a1\n\t\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t\telse if (i.alongA === 0) // yes, somewhere between A's endpoints (exclusive)\n\t\t\t\t\t\teventDivide(ev2, i.pt);\n\t\t\t\t\telse if (i.alongA === 1) // yes, at exactly a2\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//\n\t\t// main event loop\n\t\t//\n\t\tvar segments = [];\n\t\twhile (!event_root.isEmpty()){\n\t\t\tvar ev = event_root.getHead();\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.vert(ev.pt[0]);\n\n\t\t\tif (ev.isStart){\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.segmentNew(ev.seg, ev.primary);\n\n\t\t\t\tvar surrounding = statusFindSurrounding(ev);\n\t\t\t\tvar above = surrounding.before ? surrounding.before.ev : null;\n\t\t\t\tvar below = surrounding.after ? surrounding.after.ev : null;\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.tempStatus(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfunction checkBothIntersections(){\n\t\t\t\t\tif (above){\n\t\t\t\t\t\tvar eve = checkIntersection(ev, above);\n\t\t\t\t\t\tif (eve)\n\t\t\t\t\t\t\treturn eve;\n\t\t\t\t\t}\n\t\t\t\t\tif (below)\n\t\t\t\t\t\treturn checkIntersection(ev, below);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar eve = checkBothIntersections();\n\t\t\t\tif (eve){\n\t\t\t\t\t// ev and eve are equal\n\t\t\t\t\t// we'll keep eve and throw away ev\n\n\t\t\t\t\t// merge ev.seg's fill information into eve.seg\n\n\t\t\t\t\tif (selfIntersection){\n\t\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\t\tif (ev.seg.myFill.below === null)\n\t\t\t\t\t\t\ttoggle = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below;\n\n\t\t\t\t\t\t// merge two segments that belong to the same polygon\n\t\t\t\t\t\t// think of this as sandwiching two segments together, where `eve.seg` is\n\t\t\t\t\t\t// the bottom -- this will cause the above fill flag to toggle\n\t\t\t\t\t\tif (toggle)\n\t\t\t\t\t\t\teve.seg.myFill.above = !eve.seg.myFill.above;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// merge two segments that belong to different polygons\n\t\t\t\t\t\t// each segment has distinct knowledge, so no special logic is needed\n\t\t\t\t\t\t// note that this can only happen once per segment in this phase, because we\n\t\t\t\t\t\t// are guaranteed that all self-intersections are gone\n\t\t\t\t\t\teve.seg.otherFill = ev.seg.myFill;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.segmentUpdate(eve.seg);\n\n\t\t\t\t\tev.other.remove();\n\t\t\t\t\tev.remove();\n\t\t\t\t}\n\n\t\t\t\tif (event_root.getHead() !== ev){\n\t\t\t\t\t// something was inserted before us in the event queue, so loop back around and\n\t\t\t\t\t// process it before continuing\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.rewind(ev.seg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\t// calculate fill flags\n\t\t\t\t//\n\t\t\t\tif (selfIntersection){\n\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\tif (ev.seg.myFill.below === null) // if we are a new segment...\n\t\t\t\t\t\ttoggle = true; // then we toggle\n\t\t\t\t\telse // we are a segment that has previous knowledge from a division\n\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below; // calculate toggle\n\n\t\t\t\t\t// next, calculate whether we are filled below us\n\t\t\t\t\tif (!below){ // if nothing is below us...\n\t\t\t\t\t\t// we are filled below us if the polygon is inverted\n\t\t\t\t\t\tev.seg.myFill.below = primaryPolyInverted;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// otherwise, we know the answer -- it's the same if whatever is below\n\t\t\t\t\t\t// us is filled above it\n\t\t\t\t\t\tev.seg.myFill.below = below.seg.myFill.above;\n\t\t\t\t\t}\n\n\t\t\t\t\t// since now we know if we're filled below us, we can calculate whether\n\t\t\t\t\t// we're filled above us by applying toggle to whatever is below us\n\t\t\t\t\tif (toggle)\n\t\t\t\t\t\tev.seg.myFill.above = !ev.seg.myFill.below;\n\t\t\t\t\telse\n\t\t\t\t\t\tev.seg.myFill.above = ev.seg.myFill.below;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// now we fill in any missing transition information, since we are all-knowing\n\t\t\t\t\t// at this point\n\n\t\t\t\t\tif (ev.seg.otherFill === null){\n\t\t\t\t\t\t// if we don't have other information, then we need to figure out if we're\n\t\t\t\t\t\t// inside the other polygon\n\t\t\t\t\t\tvar inside;\n\t\t\t\t\t\tif (!below){\n\t\t\t\t\t\t\t// if nothing is below us, then we're inside if the other polygon is\n\t\t\t\t\t\t\t// inverted\n\t\t\t\t\t\t\tinside =\n\t\t\t\t\t\t\t\tev.primary ? secondaryPolyInverted : primaryPolyInverted;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{ // otherwise, something is below us\n\t\t\t\t\t\t\t// so copy the below segment's other polygon's above\n\t\t\t\t\t\t\tif (ev.primary === below.primary)\n\t\t\t\t\t\t\t\tinside = below.seg.otherFill.above;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tinside = below.seg.myFill.above;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tev.seg.otherFill = {\n\t\t\t\t\t\t\tabove: inside,\n\t\t\t\t\t\t\tbelow: inside\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.status(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// insert the status and remember it for later removal\n\t\t\t\tev.other.status = surrounding.insert(LinkedList.node({ ev: ev }));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvar st = ev.status;\n\n\t\t\t\tif (st === null){\n\t\t\t\t\tthrow new Error('PolyBool: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t\t\t'probably too small or too large');\n\t\t\t\t}\n\n\t\t\t\t// removing the status will create two new adjacent edges, so we'll need to check\n\t\t\t\t// for those\n\t\t\t\tif (status_root.exists(st.prev) && status_root.exists(st.next))\n\t\t\t\t\tcheckIntersection(st.prev.ev, st.next.ev);\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.statusRemove(st.ev.seg);\n\n\t\t\t\t// remove the status\n\t\t\t\tst.remove();\n\n\t\t\t\t// if we've reached this point, we've calculated everything there is to know, so\n\t\t\t\t// save the segment for reporting\n\t\t\t\tif (!ev.primary){\n\t\t\t\t\t// make sure `seg.myFill` actually points to the primary polygon though\n\t\t\t\t\tvar s = ev.seg.myFill;\n\t\t\t\t\tev.seg.myFill = ev.seg.otherFill;\n\t\t\t\t\tev.seg.otherFill = s;\n\t\t\t\t}\n\t\t\t\tsegments.push(ev.seg);\n\t\t\t}\n\n\t\t\t// remove the event and continue\n\t\t\tevent_root.getHead().remove();\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.done();\n\n\t\treturn segments;\n\t}\n\n\t// return the appropriate API depending on what we're doing\n\tif (!selfIntersection){\n\t\t// performing combination of polygons, so only deal with already-processed segments\n\t\treturn {\n\t\t\tcalculate: function(segments1, inverted1, segments2, inverted2){\n\t\t\t\t// segmentsX come from the self-intersection API, or this API\n\t\t\t\t// invertedX is whether we treat that list of segments as an inverted polygon or not\n\t\t\t\t// returns segments that can be used for further operations\n\t\t\t\tsegments1.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), true);\n\t\t\t\t});\n\t\t\t\tsegments2.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), false);\n\t\t\t\t});\n\t\t\t\treturn calculate(inverted1, inverted2);\n\t\t\t}\n\t\t};\n\t}\n\n\t// otherwise, performing self-intersection, so deal with regions\n\treturn {\n\t\taddRegion: function(region){\n\t\t\t// regions are a list of points:\n\t\t\t//  [ [0, 0], [100, 0], [50, 100] ]\n\t\t\t// you can add multiple regions before running calculate\n\t\t\tvar pt1;\n\t\t\tvar pt2 = region[region.length - 1];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tpt1 = pt2;\n\t\t\t\tpt2 = region[i];\n\n\t\t\t\tvar forward = eps.pointsCompare(pt1, pt2);\n\t\t\t\tif (forward === 0) // points are equal, so we have a zero-length segment\n\t\t\t\t\tcontinue; // just skip it\n\n\t\t\t\teventAddSegment(\n\t\t\t\t\tsegmentNew(\n\t\t\t\t\t\tforward < 0 ? pt1 : pt2,\n\t\t\t\t\t\tforward < 0 ? pt2 : pt1\n\t\t\t\t\t),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tcalculate: function(inverted){\n\t\t\t// is the polygon inverted?\n\t\t\t// returns segments\n\t\t\treturn calculate(inverted, false);\n\t\t}\n\t};\n}\n\nmodule.exports = Intersecter;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// simple linked list implementation that allows you to traverse down nodes and save positions\n//\n\nvar LinkedList = {\n\tcreate: function(){\n\t\tvar my = {\n\t\t\troot: { root: true, next: null },\n\t\t\texists: function(node){\n\t\t\t\tif (node === null || node === my.root)\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tisEmpty: function(){\n\t\t\t\treturn my.root.next === null;\n\t\t\t},\n\t\t\tgetHead: function(){\n\t\t\t\treturn my.root.next;\n\t\t\t},\n\t\t\tinsertBefore: function(node, check){\n\t\t\t\tvar last = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here)){\n\t\t\t\t\t\tnode.prev = here.prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\there.prev.next = node;\n\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlast = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\tlast.next = node;\n\t\t\t\tnode.prev = last;\n\t\t\t\tnode.next = null;\n\t\t\t},\n\t\t\tfindTransition: function(check){\n\t\t\t\tvar prev = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tprev = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tbefore: prev === my.root ? null : prev,\n\t\t\t\t\tafter: here,\n\t\t\t\t\tinsert: function(node){\n\t\t\t\t\t\tnode.prev = prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\tprev.next = node;\n\t\t\t\t\t\tif (here !== null)\n\t\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\treturn my;\n\t},\n\tnode: function(data){\n\t\tdata.prev = null;\n\t\tdata.next = null;\n\t\tdata.remove = function(){\n\t\t\tdata.prev.next = data.next;\n\t\t\tif (data.next)\n\t\t\t\tdata.next.prev = data.prev;\n\t\t\tdata.prev = null;\n\t\t\tdata.next = null;\n\t\t};\n\t\treturn data;\n\t}\n};\n\nmodule.exports = LinkedList;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\n\nfunction SegmentChainer(segments, eps, buildLog){\n\tvar chains = [];\n\tvar regions = [];\n\n\tsegments.forEach(function(seg){\n\t\tvar pt1 = seg.start;\n\t\tvar pt2 = seg.end;\n\t\tif (eps.pointsSame(pt1, pt2)){\n\t\t\tconsole.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t'probably too small or too large');\n\t\t\treturn;\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainStart(seg);\n\n\t\t// search for two chains that this segment matches\n\t\tvar first_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar second_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar next_match = first_match;\n\t\tfunction setMatch(index, matches_head, matches_pt1){\n\t\t\t// return true if we've matched twice\n\t\t\tnext_match.index = index;\n\t\t\tnext_match.matches_head = matches_head;\n\t\t\tnext_match.matches_pt1 = matches_pt1;\n\t\t\tif (next_match === first_match){\n\t\t\t\tnext_match = second_match;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnext_match = null;\n\t\t\treturn true; // we've matched twice, we're done here\n\t\t}\n\t\tfor (var i = 0; i < chains.length; i++){\n\t\t\tvar chain = chains[i];\n\t\t\tvar head  = chain[0];\n\t\t\tvar head2 = chain[1];\n\t\t\tvar tail  = chain[chain.length - 1];\n\t\t\tvar tail2 = chain[chain.length - 2];\n\t\t\tif (eps.pointsSame(head, pt1)){\n\t\t\t\tif (setMatch(i, true, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(head, pt2)){\n\t\t\t\tif (setMatch(i, true, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt1)){\n\t\t\t\tif (setMatch(i, false, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt2)){\n\t\t\t\tif (setMatch(i, false, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (next_match === first_match){\n\t\t\t// we didn't match anything, so create a new chain\n\t\t\tchains.push([ pt1, pt2 ]);\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainNew(pt1, pt2);\n\t\t\treturn;\n\t\t}\n\n\t\tif (next_match === second_match){\n\t\t\t// we matched a single chain\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainMatch(first_match.index);\n\n\t\t\t// add the other point to the apporpriate end, and check to see if we've closed the\n\t\t\t// chain into a loop\n\n\t\t\tvar index = first_match.index;\n\t\t\tvar pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n\t\t\tvar addToHead = first_match.matches_head; // if we matched at head, then add to the head\n\n\t\t\tvar chain = chains[index];\n\t\t\tvar grow  = addToHead ? chain[0] : chain[chain.length - 1];\n\t\t\tvar grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n\t\t\tvar oppo  = addToHead ? chain[chain.length - 1] : chain[0];\n\t\t\tvar oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n\n\t\t\tif (eps.pointsCollinear(grow2, grow, pt)){\n\t\t\t\t// grow isn't needed because it's directly between grow2 and pt:\n\t\t\t\t// grow2 ---grow---> pt\n\t\t\t\tif (addToHead){\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, pt);\n\t\t\t\t\tchain.shift();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, pt);\n\t\t\t\t\tchain.pop();\n\t\t\t\t}\n\t\t\t\tgrow = grow2; // old grow is gone... new grow is what grow2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsSame(oppo, pt)){\n\t\t\t\t// we're closing the loop, so remove chain from chains\n\t\t\t\tchains.splice(index, 1);\n\n\t\t\t\tif (eps.pointsCollinear(oppo2, oppo, grow)){\n\t\t\t\t\t// oppo isn't needed because it's directly between oppo2 and grow:\n\t\t\t\t\t// oppo2 ---oppo--->grow\n\t\t\t\t\tif (addToHead){\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, grow);\n\t\t\t\t\t\tchain.pop();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, grow);\n\t\t\t\t\t\tchain.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainClose(first_match.index);\n\n\t\t\t\t// we have a closed chain!\n\t\t\t\tregions.push(chain);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// not closing a loop, so just add it to the apporpriate side\n\t\t\tif (addToHead){\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddHead(first_match.index, pt);\n\t\t\t\tchain.unshift(pt);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddTail(first_match.index, pt);\n\t\t\t\tchain.push(pt);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, we matched two chains, so we need to combine those chains together\n\n\t\tfunction reverseChain(index){\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainReverse(index);\n\t\t\tchains[index].reverse(); // gee, that's easy\n\t\t}\n\n\t\tfunction appendChain(index1, index2){\n\t\t\t// index1 gets index2 appended to it, and index2 is removed\n\t\t\tvar chain1 = chains[index1];\n\t\t\tvar chain2 = chains[index2];\n\t\t\tvar tail  = chain1[chain1.length - 1];\n\t\t\tvar tail2 = chain1[chain1.length - 2];\n\t\t\tvar head  = chain2[0];\n\t\t\tvar head2 = chain2[1];\n\n\t\t\tif (eps.pointsCollinear(tail2, tail, head)){\n\t\t\t\t// tail isn't needed because it's directly between tail2 and head\n\t\t\t\t// tail2 ---tail---> head\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveTail(index1, tail);\n\t\t\t\tchain1.pop();\n\t\t\t\ttail = tail2; // old tail is gone... new tail is what tail2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsCollinear(tail, head, head2)){\n\t\t\t\t// head isn't needed because it's directly between tail and head2\n\t\t\t\t// tail ---head---> head2\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveHead(index2, head);\n\t\t\t\tchain2.shift();\n\t\t\t}\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainJoin(index1, index2);\n\t\t\tchains[index1] = chain1.concat(chain2);\n\t\t\tchains.splice(index2, 1);\n\t\t}\n\n\t\tvar F = first_match.index;\n\t\tvar S = second_match.index;\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainConnect(F, S);\n\n\t\tvar reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n\t\tif (first_match.matches_head){\n\t\t\tif (second_match.matches_head){\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\tappendChain(S, F);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif (second_match.matches_head){\n\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\tappendChain(F, S);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn regions;\n}\n\nmodule.exports = SegmentChainer;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// filter a list of segments based on boolean operations\n//\n\nfunction select(segments, selection, buildLog){\n\tvar result = [];\n\tsegments.forEach(function(seg){\n\t\tvar index =\n\t\t\t(seg.myFill.above ? 8 : 0) +\n\t\t\t(seg.myFill.below ? 4 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.above) ? 2 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.below) ? 1 : 0);\n\t\tif (selection[index] !== 0){\n\t\t\t// copy the segment to the results, while also calculating the fill status\n\t\t\tresult.push({\n\t\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\t\tstart: seg.start,\n\t\t\t\tend: seg.end,\n\t\t\t\tmyFill: {\n\t\t\t\t\tabove: selection[index] === 1, // 1 if filled above\n\t\t\t\t\tbelow: selection[index] === 2  // 2 if filled below\n\t\t\t\t},\n\t\t\t\totherFill: null\n\t\t\t});\n\t\t}\n\t});\n\n\tif (buildLog)\n\t\tbuildLog.selected(result);\n\n\treturn result;\n}\n\nvar SegmentSelector = {\n\tunion: function(segments, buildLog){ // primary | secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 2, 0, 0,\n\t\t\t1, 0, 1, 0,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\tintersect: function(segments, buildLog){ // primary & secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled below    2\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   yes filled above    1\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled below    2\n\t\t//    1      1      1      0   =>   yes filled above    1\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 1, 0\n\t\t], buildLog);\n\t},\n\tdifference: function(segments, buildLog){ // primary - secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled below    2\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   yes filled above    1\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t2, 0, 2, 0,\n\t\t\t1, 1, 0, 0,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t},\n\tdifferenceRev: function(segments, buildLog){ // secondary - primary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled above    1\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   yes filled below    2\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\txor: function(segments, buildLog){ // primary ^ secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 0, 0, 1,\n\t\t\t1, 0, 0, 2,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t}\n};\n\nmodule.exports = SegmentSelector;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(526);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","PATH_DATA_SPRITES","PATH_DATA_SOUNDS","PATH_AUDIO_SOUNDS","PATH_SPRITES_IMAGE","PATH_DATA_GAME","TILE_WIDTH","TILE_HEIGHT","TILES_PER_LINE","TILES_PER_COLUMN","WORLD_MAPS_PER_LINE","WORLD_MAPS_PER_COLUMN","FILE_TYPE_JSON","FILE_TYPE_LOZ","FILE_TYPE_MP3","FILE_TYPE_PNG","FILE_TYPE_WEBP","GAME_INTERVAL_DRAWING","GAME_INTERVAL_PROCESS","GAME_INTERVAL_INPUT","GAME_TOP_MENU_HEIGHT","MAP_TYPE_WORLD","MAP_TYPE_CAVERNS","MAP_TYPE_LEVEL1","SPRITE_WIDTH","SPRITE_HEIGHT","SOUND_GET_RUPEE","SOUND_OVERWORLD","SOUND_STAIRS","SOUND_TEXT_LOOP","SPRITE_LINK_PREFIX","SPRITE_TEXT_PREFIX","SPRITE_TEXT_COLOR_RED","SPRITE_TEXT_COLOR_WHITE","SPRITE_TEXT_WIDTH","SPRITE_TEXT_HEIGHT","ITEM_SHIELD_NORMAL","ITEM_RING_GREEN","LINK_ACTION_MOVE","LINK_ACTION_PICK","LINK_ACTION_USE_ITEM_A","LINK_ACTION_USE_ITEM_B","LINK_DIRECTION_EAST","LINK_DIRECTION_NORTH","LINK_DIRECTION_SOUTH","LINK_DIRECTION_WEST","TRANSITION_CAVE_ENTRANCE","TRANSITION_CAVE_EXIT","TRANSITION_CAVE_STAIRS_DOWN","TRANSITION_CAVE_STAIRS_UP","TRANSITION_MAP_DRAG","TRANSITION_MAP_INCREMENT_DELTA","TRANSITION_MAP_INTERVAL_PLAY","DIRECTION_EAST","DIRECTION_NORTH","DIRECTION_SOUTH","DIRECTION_WEST","Debug","game","displayBlockingZones","blockingZonesColor","constructor","displayBlockingZonesCheckbox","blockingZonesColorInput","rupeesInput","rupeesSubmit","keysInput","keysSubmit","bombsInput","bombsSubmit","convertToLozInput","self","this","addEventListener","e","preventDefault","target","checked","dispatchEvent","Event","value","link","inventory","rupees","Math","min","max","maxRupees","undefined","keys","maxKeys","bombs","maxBombs","async","data","openFile","JSON","stringify","dowloadFile","setGame","draw","context","drawBlockingZones","color","map","translate","x","y","nextMap","CaveEntrance","play","Promise","resolve","limitY","transitionInterval","setInterval","startWalking","clearInterval","stopWalking","name","CaveExit","currentMap","height","CaveStairsDown","stop","getSound","direction","tile","clipY","CaveStairsUp","MapDrag","targetMap","playEast","playNorth","playSouth","playWest","offsetX","width","nbTicks","round","linkIncrementDelta","offsetY","Dialog","length","character","displayedText","text","substring","NAME","DIALOG_NAME","transitions","get","TopMenu","mapLocationWidth","mapLocationHeight","initializeMap","fillStyle","fillRect","mapWidth","mapHeight","column","line","getSprite","itemB","itemA","i","totalLife","floor","currentLife","Inventory","shield","ring","arrow","bookOfMagic","ladder","magicalKey","powerBracelet","EventTarget","super","speed","action","clipX","items","_itemA","_itemB","actions","canAfford","item","price","buy","soundInteval","buyInterval","rupee","useItemA","use","useItemB","getHitbox","move","targetHitbox","collision","targetX","targetY","compute","computeHitboxesCollision","hitbox","getMinX","getMaxY","getMinY","getMaxX","sprite","start","console","log","drawSword","save","itemWidth","itemHeight","linkX","linkY","linkWidth","linkHeight","setTransform","deltaX","deltaY","rotate","PI","restore","drawingAction","spriteName","getSpriteName","addItem","push","removeItem","splice","hasItem","addAction","indexOf","hasAction","removeAction","index","resetActions","Key","key","blockingAction","enabled","pressed","used","disable","enable","unuse","press","unpress","BLOCKING_ACTION","ENABLED","ACTION_LINK_MOVE_WEST","ACTION_LINK_MOVE_NORTH","ACTION_LINK_MOVE_EAST","ACTION_LINK_MOVE_SOUTH","ACTION_LINK_USE_ITEM_A","ACTION_LINK_USE_ITEM_B","ACTION_MENU_CLOSE","ACTION_MENU_MOVE_LEFT","ACTION_MENU_MOVE_TOP","ACTION_MENU_MOVE_RIGHT","ACTION_MENU_MOVE_BOTTOM","ACTION_MENU_OPEN","MAPPING_MAIN","MAPPING_MENU","mappings","currentMappingName","actionKeys","setMapping","getCurrentDrawingAction","getCurrentAction","clear","getKey","keyNumber","addActionKey","unshift","removeActionKey","triggerBlockingAction","inputManager","setTimeout","handleKeyDown","handleKeyUp","startDetection","document","onkeydown","keyCode","onkeyup","stopDetection","startingPosition","findStartingPosition","Error","tileColumn","tileLine","topMenu","EVENT_ITEM_A_CHANGED","EVENT_ITEM_B_CHANGED","isStarted","transitionPlaying","computeMapHitboxV2","init","clearRect","mapDragTransitionPlaying","getLinkActionFromInput","process","hasStoppedTalking","transition","linkTile","getLinkTile","tileTransition","linkFrontTile","getLinkFrontTile","createDynamicMapDragTileTransition","getTargetMap","transitionStart","reset","getTargetPosition","transitionEnd","end","processLinkActions","targetMapColumn","targetMapLine","targetTileColumn","targetTileLine","type","mustWalk","linkMoves","processAction","inputAction","processInput","debug","drawInterval","processInterval","processInputInterval","canvas","querySelector","getContext","loadGame","gameData","createMaps","onload","focus","initContext","initEvents","loadAll","fetchRemoteFile","Character","Extra","Map","tiles","characters","extras","savedItems","savedCharacters","mapPath","getMapPath","path","Path2D","rect","extra","tilesIterator","globalAlpha","fill","blockPath","getTile","Sound","buffer","gain","duration","loop","loopStart","loopEnd","source","createBufferSource","connect","SpriteImage","file","offset","w","h","dx","dy","dw","dh","drawImage","Sprite","images","currentImageIndex","incrementSpeed","incrementInterval","clone","incrementImageIndex","x2","y2","w2","h2","TileTransition","targetMapType","isEmpty","getMap","Tile","block","desctructible","tilePath","getTilePath","getBlockPath","recomputePaths","tileOffsetX","tileOffsetY","other","points","charAt","moveTo","lineTo","sprites","sounds","resources","fetchRemoteFiles","dataSprites","spritesImage","dataSounds","audioSounds","loadSprites","loadSounds","dataSprite","offsets","cloneSprite","gainNode","getGainNode","dataSound","bytes","arrayBuffer","slice","audioBuffer","decodeAudioData","loop_end","loop_start","cloneSound","PolyBool","getHitboxFromString","hitboxString","regions","inverted","polygon","segments","getPathFromString","object","computeMapHitbox","union","hitobx1","hitbox2","intersection","intersect","j","beginPath","closePath","getCurrentTiles","currentTiles","linkCenterX","linkCenterY","getReachedMapEdge","getHorizontalCenter","minX","AudioContext","suspend","createGain","createGainNode","destination","playSoundsCheckbox","volumeRangeInput","updateVolume","parseInt","setValueAtTime","currentTime","resume","sound","maxLength","maxNbLines","lines","splitTextIntoLines","nbDisplayedCharacters","displayedLine","centerLine","drawLine","char","toLowerCase","maxWidth","textPerLine","nbLettersPerLine","currentLine","parts","split","part","currentNbLetters","spacesLeft","nbStartSpaces","ceil","nEndSpaces","padStart","padEnd","world","caverns","level1","level2","level3","level4","level5","level6","level7","level8","level9","createMapsForType","mapsData","maps","mapData","createMapTiles","characteraData","characterColumn","characterLine","characterWidth","characterHeight","characterX","characterY","characterSprite","characterText","extraData","extraColumn","extraLine","extraWidth","extraHeight","extraX","extraY","extraSprite","tilesData","tileData","mapsIterator","exportGame","exportMaps","COMPRESSION_GZIP","compress","str","compressedStream","Blob","stream","pipeThrough","CompressionStream","chunks","chunk","concatUint8Arrays","decompress","compressedBytes","decompressedStream","DecompressionStream","stringBytes","TextDecoder","decode","uint8arrays","blob","Uint8Array","reject","input","createElement","accept","style","display","remove","files","readFile","body","appendChild","click","guessTypeFromExtension","fileReader","FileReader","result","parse","img","fetch","createImageBitmap","readAsArrayBuffer","readAsDataURL","readAsText","filename","prompt","a","href","URL","createObjectURL","download","textContent","removeChild","paths","Array","prototype","call","arguments","isArray","promises","all","pop","fetchJsonFile","fetchLozFile","fetchAudioFile","fetchImageFile","json","at","BuildLog","Epsilon","Intersecter","SegmentChainer","SegmentSelector","GeoJSON","buildLog","epsilon","operate","poly1","poly2","selector","seg1","seg2","seg3","combine","bl","list","v","poly","forEach","addRegion","calculate","segments1","segments2","combined","inverted1","inverted2","selectUnion","selectIntersect","selectDifference","difference","selectDifferenceRev","differenceRev","selectXor","xor","polygonFromGeoJSON","geojson","toPolygon","polygonToGeoJSON","fromPolygon","window","module","exports","my","nextSegmentId","curVert","segmentId","checkIntersection","segmentChop","seg","pt","statusRemove","segmentUpdate","segmentNew","primary","segmentRemove","tempStatus","above","below","rewind","status","vert","txt","selected","segs","chainStart","chainRemoveHead","chainRemoveTail","chainNew","pt1","pt2","chainMatch","chainClose","chainAddHead","chainAddTail","chainConnect","index1","index2","chainReverse","chainJoin","done","eps","pointAboveOrOnLine","left","right","Ax","Ay","Bx","By","Cx","pointBetween","p","d_py_ly","d_rx_lx","d_px_lx","d_ry_ly","dot","pointsSameX","p1","p2","abs","pointsSameY","pointsSame","pointsCompare","pointsCollinear","pt3","dx1","dy1","dx2","dy2","linesIntersect","a0","a1","b0","b1","adx","ady","bdx","bdy","axb","A","B","ret","alongA","alongB","pointInsideRegion","region","last_x","last_y","inside","curr_x","curr_y","GeoPoly","coords","LineString","ls","reg","out","coordinates","regionInsideRegion","r1","r2","newNode","children","roots","addChild","root","child","node","forceWinding","clockwise","winding","copy","reverse","geopolys","addExterior","getInterior","LinkedList","selfIntersection","segmentCopy","id","myFill","otherFill","event_root","create","eventAdd","ev","other_pt","insertBefore","here","p1_isStart","isStart","p1_1","p1_2","p2_isStart","p2_1","p2_2","comp","eventAddSegment","ev_start","eventAddSegmentStart","ev_end","eventAddSegmentEnd","eventDivide","ns","eventUpdateEnd","primaryPolyInverted","secondaryPolyInverted","status_root","statusFindSurrounding","findTransition","ev1","ev2","a2","b2","a1_equ_b1","a2_equ_b2","a1_between","a2_between","getHead","surrounding","before","after","checkBothIntersections","eve","toggle","insert","st","exists","prev","next","s","forward","check","last","chains","warn","first_match","matches_head","matches_pt1","second_match","next_match","head","chain","tail","setMatch","addToHead","grow","grow2","oppo","oppo2","shift","F","S","reverseF","reverseChain","appendChain","chain1","chain2","tail2","head2","concat","select","selection","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Symbol","queue","d","fn","r","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","deps","dep","then","obj","wrapDeps","getResult","fnQueue","q","has","add","err","definition","o","Object","defineProperty","enumerable","prop","hasOwnProperty"],"sourceRoot":""}