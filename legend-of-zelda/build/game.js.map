{"version":3,"file":"game.js","mappings":"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","sources":["webpack:///webpack/runtime/async module","webpack:///../assets/js/constant.js","webpack:///../assets/js/game/debug.js","webpack:///../assets/js/model/transition.js","webpack:///../assets/js/service/transition-manager.js","webpack:///../assets/js/model/top-menu.js","webpack:///../assets/js/model/inventory.js","webpack:///../assets/js/model/link.js","webpack:///../assets/js/service/input-manager.js","webpack:///../assets/js/game/game.js","webpack:///../assets/js/game/index.js","webpack:///../assets/js/model/character.js","webpack:///../assets/js/model/extra.js","webpack:///../assets/js/model/item.js","webpack:///../assets/js/model/map.js","webpack:///../assets/js/model/resource/sound.js","webpack:///../assets/js/model/resource/sprite.js","webpack:///../assets/js/model/tile-transition.js","webpack:///../assets/js/model/tile.js","webpack:///../assets/js/resource.js","webpack:///../assets/js/service/hitbox-manager.js","webpack:///../assets/js/service/sound-manager.js","webpack:///../assets/js/service/text-manager.js","webpack:///../assets/js/service/world-manager.js","webpack:///../assets/js/utils/compression.js","webpack:///../assets/js/utils/io.js","webpack:///../node_modules/polybooljs/index.js","webpack:///../node_modules/polybooljs/lib/build-log.js","webpack:///../node_modules/polybooljs/lib/epsilon.js","webpack:///../node_modules/polybooljs/lib/geojson.js","webpack:///../node_modules/polybooljs/lib/intersecter.js","webpack:///../node_modules/polybooljs/lib/linked-list.js","webpack:///../node_modules/polybooljs/lib/segment-chainer.js","webpack:///../node_modules/polybooljs/lib/segment-selector.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","'use strict'\n\nexport const PATH_DATA_SPRITES = 'data/sprites.loz'\nexport const PATH_DATA_SOUNDS = 'data/sounds.loz'\nexport const PATH_AUDIO_SOUNDS = 'audio/sounds.mp3'\nexport const PATH_SPRITES_IMAGE = 'images/sprites.png'\nexport const PATH_DATA_GAME = 'data/game.loz'\nexport const PATH_DATA_EMPTY_WORLD = 'data/world.empty.loz'\nexport const TILES_PATH = 'data/tiles.loz'\nexport const TILE_WIDTH = 32\nexport const TILE_HEIGHT = 32\nexport const TILES_PER_LINE = 16\nexport const TILES_PER_COLUMN = 11\nexport const WORLD_MAPS_PER_LINE = 16\nexport const WORLD_MAPS_PER_COLUMN = 8\nexport const DUNGEON_MAPS_PER_LINE = 8\nexport const DUNGEON_MAPS_PER_COLUMN = 8\nexport const EDITOR_KEYS_REDO = ['ControlLeft', 'ShiftLeft', 'KeyW']\nexport const EDITOR_KEYS_UNDO = ['ControlLeft', 'KeyW']\nexport const EDITOR_KEYS_CANCEL = ['Escape']\nexport const FILE_TYPE_JSON = 'json'\nexport const FILE_TYPE_LOZ = 'loz'\nexport const FILE_TYPE_MP3 = 'mp3'\nexport const FILE_TYPE_PNG = 'png'\nexport const FILE_TYPE_WEBP = 'webp'\nexport const GAME_INTERVAL_DRAWING = 50\nexport const GAME_INTERVAL_PROCESS = 50\nexport const GAME_INTERVAL_INPUT = 30\nexport const GAME_TOP_MENU_HEIGHT = 96\nexport const MAP_TYPE_WORLD = 'world'\nexport const MAP_TYPE_CAVERNS = 'caverns'\nexport const MAP_TYPE_LEVEL1 = 'level1'\nexport const SPRITE_WIDTH = 32\nexport const SPRITE_HEIGHT = 32\nexport const SOUND_ARROW = 'arrow'\nexport const SOUND_BOMB_BLOW = 'bomb_blow'\nexport const SOUND_BOMB_DROP = 'bomb_drop'\nexport const SOUND_BOOMERANG = 'boomerang'\nexport const SOUND_BOSS_HIT = 'boss_hit'\nexport const SOUND_BOSS_SCREAM_1 = 'boss_scream_1'\nexport const SOUND_BOSS_SCREAM_2 = 'boss_scream_2'\nexport const SOUND_BOSS_SCREAM_3 = 'boss_scream_3'\nexport const SOUND_CANDLE = 'candle'\nexport const SOUND_DOOR_UNLOCK = 'door_unlock'\nexport const SOUND_ENNEMY_DIE = 'ennemy_die'\nexport const SOUND_ENNEMY_HIT = 'ennemy_hit'\nexport const SOUND_FANFARE = 'fanfare'\nexport const SOUND_GET_HEART = 'get_heart'\nexport const SOUND_GET_ITEM = 'get_item'\nexport const SOUND_GET_RUPEE = 'get_rupee'\nexport const SOUND_KEY_APPEAR = 'key_appear'\nexport const SOUND_LINK_DIE = 'link_die'\nexport const SOUND_LINK_HURT = 'link_hurt'\nexport const SOUND_LOW_HEALTH = 'low_health'\nexport const SOUND_MAGICAL_ROD = 'magical_rod'\nexport const SOUND_OVERWORLD = 'overworld'\nexport const SOUND_RECORDER = 'recorder'\nexport const SOUND_REFILL_LOOP = 'refill_loop'\nexport const SOUND_SECRET = 'secret'\nexport const SOUND_SHIELD = 'shield'\nexport const SOUND_STAIRS = 'stairs'\nexport const SOUND_SWORD_COMBINED = 'sword_combined'\nexport const SOUND_SWORD_SHOOT = 'sword_shoot'\nexport const SOUND_SWORD_SLASH = 'sword_slash'\nexport const SOUND_TEXT = 'text'\nexport const SOUND_TEXT_LOOP = 'text_loop'\nexport const SOUND_TEXT_SLOW = 'text_slow'\nexport const SPRITE_LINK_PREFIX = 'link'\nexport const SPRITE_TEXT_PREFIX = 'text'\nexport const SPRITE_TEXT_COLOR_RED = 'red'\nexport const SPRITE_TEXT_COLOR_WHITE = 'white'\nexport const SPRITE_TEXT_WIDTH = 16\nexport const SPRITE_TEXT_HEIGHT = 16\nexport const ITEM_LADDER = 'ladder'\nexport const ITEM_MAGICAL_KEY = 'magical_key'\nexport const ITEM_POWER_BRACELET_NONE = 'power_bracelet_none'\nexport const ITEM_POWER_BRACELET_NORMAL = 'power_bracelet_normal'\nexport const ITEM_SHIELD_MAGICAL = 'magical'\nexport const ITEM_SHIELD_NORMAL = 'normal'\nexport const ITEM_RING_BLUE = 'blue'\nexport const ITEM_RING_GREEN = 'green'\nexport const ITEM_RING_RED = 'red'\nexport const ITEM_WOODEN_SWORD = 'wooden_sword'\nexport const UNIQUE_ITEMS = [ITEM_WOODEN_SWORD]\nexport const ARROW_SILVER = 'arrow_silver'\nexport const ARROW_WOODEN = 'arrow_wooden'\nexport const BOOK_OF_MAGIC = 'book_of_magic'\nexport const INVENTORY_MAX_KEYS = 250\nexport const INVENTORY_MAX_RUPEES = 250\nexport const INVENTORY_MAX_BOMBS_1 = 8\nexport const INVENTORY_MAX_BOMBS_2 = 16\nexport const LINK_ACTION_MOVE = 'move'\nexport const LINK_ACTION_PICK = 'pick'\nexport const LINK_ACTION_USE = 'use'\nexport const LINK_ACTION_USE_ITEM_A = 'user_item_a'\nexport const LINK_ACTION_USE_ITEM_B = 'user_item_b'\nexport const LINK_DIRECTION_EAST = 'east'\nexport const LINK_DIRECTION_NORTH = 'north'\nexport const LINK_DIRECTION_SOUTH = 'south'\nexport const LINK_DIRECTION_WEST = 'west'\nexport const TRANSITION_MAP_EAST = 'map_east'\nexport const TRANSITION_MAP_NORTH = 'map_north'\nexport const TRANSITION_MAP_SOUTH = 'map_south'\nexport const TRANSITION_MAP_WEST = 'map_west'\nexport const TRANSITION_CAVE_ENTRANCE = 'cave_entrance'\nexport const TRANSITION_CAVE_EXIT = 'cave_exit'\nexport const TRANSITION_CAVE_STAIRS_DOWN = 'cave_stairs_down'\nexport const TRANSITION_CAVE_STAIRS_UP = 'cave_stairs_up'\nexport const TRANSITION_MAP_DRAG = 'map_drag'\nexport const TRANSITION_MAP_INCREMENT_DELTA = 8\nexport const TRANSITION_MAP_INTERVAL_PLAY = 10\nexport const DIRECTION_EAST = 'east'\nexport const DIRECTION_NORTH = 'north'\nexport const DIRECTION_SOUTH = 'south'\nexport const DIRECTION_WEST = 'west'\nexport const CHARACTER_MERCHANT = 'merchant'\nexport const ITEM_FIVE_RUPESS = 'five_rupees'\n","'use strict'\r\n\r\nimport { FILE_TYPE_LOZ, GAME_TOP_MENU_HEIGHT } from '../constant'\r\nimport io from '../utils/io'\r\n\r\nclass Debug {\r\n  game\r\n  displayBlockingZones\r\n  blockingZonesColor\r\n\r\n  constructor (displayBlockingZonesCheckbox, blockingZonesColorInput, rupeesInput, rupeesSubmit, keysInput, keysSubmit, bombsInput, bombsSubmit, convertToLozInput) {\r\n    const self = this\r\n    displayBlockingZonesCheckbox.addEventListener('change', (e) => {\r\n      e.preventDefault()\r\n      self.displayBlockingZones = e.target.checked\r\n    })\r\n    displayBlockingZonesCheckbox.checked = false\r\n    displayBlockingZonesCheckbox.dispatchEvent(new Event('change'))\r\n\r\n    blockingZonesColorInput.addEventListener('change', (e) => {\r\n      e.preventDefault()\r\n      self.blockingZonesColor = e.target.value\r\n    })\r\n    blockingZonesColorInput.value = '#ff0000'\r\n    blockingZonesColorInput.dispatchEvent(new Event('change'))\r\n\r\n    rupeesSubmit.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      self.game.link.inventory.rupees = Math.min(Math.max(rupeesInput.value, 0), self.game.link.inventory.maxRupees)\r\n      rupeesInput.value = undefined\r\n    })\r\n    keysSubmit.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      self.game.link.inventory.keys = Math.min(Math.max(keysInput.value, 0), self.game.link.inventory.maxKeys)\r\n      keysInput.value = undefined\r\n    })\r\n    bombsSubmit.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      self.game.link.inventory.bombs = Math.min(Math.max(bombsInput.value, 0), self.game.link.inventory.maxBombs)\r\n      bombsInput.value = undefined\r\n    })\r\n    convertToLozInput.addEventListener('click', async (e) => {\r\n      e.preventDefault()\r\n      let data = await io.openFile()\r\n      data = JSON.stringify(data)\r\n      await io.dowloadFile(data, FILE_TYPE_LOZ)\r\n    })\r\n  }\r\n\r\n  setGame (game) {\r\n    this.game = game\r\n  }\r\n\r\n  draw (context) {\r\n    if (this.displayBlockingZones) {\r\n      this.drawBlockingZones(context, this.blockingZonesColor)\r\n    }\r\n  }\r\n\r\n  drawBlockingZones (context, color) {\r\n    const map = this.game.map\r\n    context.translate(0, GAME_TOP_MENU_HEIGHT) // Translate context for top menu\r\n    context.translate(-map.x, -map.y)\r\n    map.drawBlockingZones(context, color)\r\n    if (this.game.nextMap) {\r\n      this.game.nextMap.drawBlockingZones(context, color)\r\n    }\r\n    context.translate(map.x, map.y)\r\n    context.translate(0, -GAME_TOP_MENU_HEIGHT)\r\n  }\r\n}\r\n\r\nexport { Debug }\r\n","'use strict'\n\nimport soundManager from '../service/sound-manager'\nimport hitboxManager from '../service/hitbox-manager'\nimport resource from '../resource'\nimport { UNIQUE_ITEMS, LINK_ACTION_MOVE, SOUND_FANFARE, LINK_ACTION_PICK, SOUND_TEXT_LOOP, SOUND_OVERWORLD, DIRECTION_EAST, DIRECTION_WEST, TRANSITION_MAP_INCREMENT_DELTA, DIRECTION_SOUTH, SOUND_STAIRS, TILE_HEIGHT, TRANSITION_MAP_INTERVAL_PLAY, DIRECTION_NORTH } from '../constant'\n\nclass CaveEntrance {\n  async play (link) {\n    return new Promise((resolve) => {\n      link.y += TILE_HEIGHT\n      const limitY = link.y - 3 * TILE_HEIGHT\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        link.y -= 2\n        if (link.y <= limitY) {\n          clearInterval(transitionInterval)\n          link.stopWalking()\n          resolve()\n        }\n      }, 15)\n    })\n  }\n}\n\nclass CaveExit {\n  async play (link, currentMap) {\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        link.y += 2\n        if (link.y > currentMap.y + currentMap.height) {\n          clearInterval(transitionInterval)\n          link.stopWalking()\n          resolve()\n        }\n      }, 15)\n    })\n  }\n}\n\nclass CaveStairsDown {\n  async play (link) {\n    return new Promise((resolve) => {\n      soundManager.stop(resource.getSound(SOUND_OVERWORLD))\n      soundManager.play(resource.getSound(SOUND_STAIRS))\n      link.direction = DIRECTION_NORTH\n      link.x = link.tile.x\n      link.y = link.tile.y\n      link.clipY = 0\n      link.startWalking()\n      const transitionInterval = setInterval(() => {\n        link.clipY++\n        if (link.clipY >= TILE_HEIGHT) {\n          clearInterval(transitionInterval)\n          link.clipY = 0\n          link.stopWalking()\n          resolve()\n        }\n      }, 30)\n    })\n  }\n}\n\nclass CaveStairsUp {\n  async play (link) {\n    return new Promise((resolve) => {\n      soundManager.play(resource.getSound(SOUND_STAIRS))\n      link.direction = DIRECTION_SOUTH\n      link.clipY = TILE_HEIGHT\n      link.startWalking()\n      const transitionInterval = setInterval(() => {\n        link.clipY--\n        if (link.clipY <= 0) {\n          clearInterval(transitionInterval)\n          link.clipY = 0\n          link.stopWalking()\n          soundManager.play(resource.getSound(SOUND_OVERWORLD))\n          resolve()\n        }\n      }, 30)\n    })\n  }\n}\n\nclass MapDrag {\n  async play (link, currentMap, targetMap) {\n    if (link.direction === DIRECTION_EAST) {\n      return this.playEast(link, currentMap, targetMap)\n    }\n    if (link.direction === DIRECTION_NORTH) {\n      return this.playNorth(link, currentMap, targetMap)\n    }\n    if (link.direction === DIRECTION_SOUTH) {\n      return this.playSouth(link, currentMap, targetMap)\n    }\n    if (link.direction === DIRECTION_WEST) {\n      return this.playWest(link, currentMap, targetMap)\n    }\n  }\n\n  playEast (link, currentMap, targetMap) {\n    currentMap.offsetX = 0\n    targetMap.offsetX = 0\n    link.x = currentMap.x + currentMap.width - link.width\n\n    const nbTicks = Math.round(targetMap.width / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.width - link.width) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetX -= TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetX -= TRANSITION_MAP_INCREMENT_DELTA\n        link.x -= linkIncrementDelta\n        if (currentMap.offsetX < -currentMap.width && targetMap.offsetX < -targetMap.width) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetX = 0\n          link.stopWalking()\n          link.x = targetMap.x\n          currentMap.offsetX = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  playNorth (link, currentMap, targetMap) {\n    currentMap.offsetY = 0\n    targetMap.offsetY = 0\n    link.y = currentMap.y\n\n    const nbTicks = Math.round(targetMap.height / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.height - link.height) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetY += TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetY += TRANSITION_MAP_INCREMENT_DELTA\n        link.y += linkIncrementDelta\n        if (currentMap.offsetY > currentMap.height && targetMap.offsetY > targetMap.height) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetY = 0\n          link.stopWalking()\n          link.y = targetMap.y + targetMap.height - link.height\n          currentMap.offsetY = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  playSouth (link, currentMap, targetMap) {\n    currentMap.offsetY = 0\n    targetMap.offsetY = 0\n    link.y = currentMap.y + currentMap.height - link.height\n\n    const nbTicks = Math.round(targetMap.height / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.height - link.height) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetY -= TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetY -= TRANSITION_MAP_INCREMENT_DELTA\n        link.y -= linkIncrementDelta\n        if (currentMap.offsetY < -currentMap.height && targetMap.offsetY < -targetMap.height) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetY = 0\n          link.stopWalking()\n          link.y = targetMap.y\n          currentMap.offsetY = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n\n  playWest (link, currentMap, targetMap) {\n    currentMap.offsetX = 0\n    targetMap.offsetX = 0\n    link.x = currentMap.x\n\n    const nbTicks = Math.round(targetMap.width / TRANSITION_MAP_INCREMENT_DELTA)\n    const linkIncrementDelta = (targetMap.width - link.width) / nbTicks\n\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        link.startWalking()\n        currentMap.offsetX += TRANSITION_MAP_INCREMENT_DELTA\n        targetMap.offsetX += TRANSITION_MAP_INCREMENT_DELTA\n        link.x += linkIncrementDelta\n        if (currentMap.offsetX > currentMap.width && targetMap.offsetX > targetMap.width) {\n          clearInterval(transitionInterval)\n\n          targetMap.offsetX = 0\n          link.stopWalking()\n          link.x = targetMap.x + targetMap.width - link.width\n          currentMap.offsetX = 0\n\n          resolve()\n        }\n      }, TRANSITION_MAP_INTERVAL_PLAY)\n    })\n  }\n}\n\nclass ItemPick {\n  buy (link, item) {\n    let i = item.price ?? 0\n    const soundInteval = setInterval(() => {\n      // soundManager.play(resource.getSound(SOUND_GET_RUPEE))\n    }, 200)\n    const buyInterval = setInterval(() => {\n      i--\n      link.inventory.rupees--\n      if (i === 0) {\n        clearInterval(buyInterval)\n        clearInterval(soundInteval)\n        if (link.inventory.rupees < 0) {\n          link.inventory.rupee = 0\n        }\n      }\n    }, 25)\n  }\n\n  removeItemFromMap (map, item) {\n    const index = map.items.indexOf(item)\n    if (index > -1) {\n      map.items.splice(index, 1)\n    }\n  }\n\n  addItemToMap (map, item) {\n    map.items.push(item)\n  }\n\n  play (link, item) {\n    if (item.price) {\n      this.buy(link, item)\n    }\n\n    if (link.map.character) {\n      link.map.character.vanish(1300)\n    }\n\n    const clonedItem = item.clone()\n    clonedItem.price = undefined\n    for (const i of link.map.items) {\n      i.enabled = false\n    }\n\n    // Test picking item or not\n    /* if (false) {\n      this.finalizeTransition(link.map, item)\n      return\n    } */\n\n    link.stopWalking()\n    link.action = LINK_ACTION_PICK\n    this.addItemToMap(link.map, clonedItem)\n\n    const itemCenterX = hitboxManager.getHorizontalCenter(clonedItem.hitbox)\n    const itemDeltaX = itemCenterX - clonedItem.x\n    clonedItem.x = link.x - itemDeltaX + 4\n    clonedItem.y = link.y - clonedItem.height\n    soundManager.play(resource.getSound(SOUND_FANFARE))\n\n    const self = this\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        link.action = LINK_ACTION_MOVE\n        self.removeItemFromMap(link.map, clonedItem)\n        self.finalizeTransition(link.map, item)\n        resolve()\n      }, 1300)\n    })\n  }\n\n  finalizeTransition (map, item) {\n    if (UNIQUE_ITEMS.includes(item.name)) {\n      map.items = []\n      map.characters = []\n    }\n  }\n}\n\nclass Dialog {\n  async play (link) {\n    let length = 0\n    soundManager.play(resource.getSound(SOUND_TEXT_LOOP))\n    return new Promise((resolve) => {\n      const transitionInterval = setInterval(() => {\n        length++\n        link.map.character.displayedText = link.map.character.text.substring(0, length)\n        if (link.map.character.displayedText === link.map.character.text) {\n          soundManager.stop(resource.getSound(SOUND_TEXT_LOOP))\n          clearInterval(transitionInterval)\n          resolve()\n        }\n      }, 50)\n    })\n  }\n}\n\nexport { CaveEntrance, CaveExit, CaveStairsDown, CaveStairsUp, MapDrag, Dialog, ItemPick }\n","'use strict'\n\nimport { CaveEntrance, CaveExit, CaveStairsDown, CaveStairsUp, MapDrag } from '../model/transition'\nimport { TRANSITION_CAVE_ENTRANCE, TRANSITION_CAVE_EXIT, TRANSITION_CAVE_STAIRS_DOWN, TRANSITION_CAVE_STAIRS_UP, TRANSITION_MAP_DRAG } from '../constant'\n\nexport default {\n  transitions: {\n    [TRANSITION_CAVE_ENTRANCE]: new CaveEntrance(),\n    [TRANSITION_CAVE_EXIT]: new CaveExit(),\n    [TRANSITION_CAVE_STAIRS_DOWN]: new CaveStairsDown(),\n    [TRANSITION_CAVE_STAIRS_UP]: new CaveStairsUp(),\n    [TRANSITION_MAP_DRAG]: new MapDrag()\n  },\n  get: function (name) {\n    return this.transitions[name]\n  }\n}\n","'use strict'\n\nimport resource from '../resource'\nimport { SPRITE_TEXT_COLOR_RED, SPRITE_TEXT_COLOR_WHITE, WORLD_MAPS_PER_LINE, WORLD_MAPS_PER_COLUMN, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT } from '../constant'\nimport textManager from '../service/text-manager'\n\nconst SPRITE_WIDTH = 16\nconst SPRITE_HEIGHT = 16\n\nconst MAP_WIDTH = 128\nconst MAP_HEIGTH = 64\n\nclass TopMenu {\n  constructor (link) {\n    this.link = link\n\n    this.map = undefined\n    this.mapLocationWidth = undefined\n    this.mapLocationHeight = undefined\n  }\n\n  initializeMap (map) {\n    this.map = map\n\n    /* const offsetBounds = WorldManager.getOffsetBoundsFromCategory(map.type)\n    this.mapLocationWidth = MAP_WIDTH / (offsetBounds.maxX - offsetBounds.minX + 1)\n    this.mapLocationHeight = MAP_HEIGTH / (offsetBounds.maxY - offsetBounds.minY + 1) */\n  }\n\n  draw (context) {\n    // Background\n    context.fillStyle = 'black'\n    context.fillRect(0, 0, 512, 96)\n\n    // Map\n    context.translate(16, 16)\n    context.fillStyle = 'grey'\n    context.fillRect(0, 0, MAP_WIDTH, MAP_HEIGTH)\n    const mapWidth = 128 / WORLD_MAPS_PER_LINE\n    const mapHeight = 64 / WORLD_MAPS_PER_COLUMN\n    context.fillStyle = 'green'\n    context.fillRect(this.link.map.column * mapWidth, this.link.map.line * mapHeight, mapWidth, mapHeight)\n    context.translate(-16, -16)\n\n    // Rupees\n    resource.getSprite('menu_rupee').draw(context, 160, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'x' + this.link.inventory.rupees, SPRITE_TEXT_COLOR_WHITE, 176, 16, SPRITE_TEXT_WIDTH * 4, SPRITE_TEXT_HEIGHT, 'left')\n\n    // Keys\n    resource.getSprite('menu_key').draw(context, 160, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'x' + this.link.inventory.keys, SPRITE_TEXT_COLOR_WHITE, 176, 48, SPRITE_TEXT_WIDTH * 4, SPRITE_TEXT_HEIGHT, 'left')\n\n    // Bombs\n    resource.getSprite('menu_bomb').draw(context, 160, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'x' + this.link.inventory.bombs, SPRITE_TEXT_COLOR_WHITE, 176, 64, SPRITE_TEXT_WIDTH * 4, SPRITE_TEXT_HEIGHT, 'left')\n\n    // Item B\n    resource.getSprite('menu_blue_line_corner_north_west').draw(context, 256, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_west').draw(context, 256, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_horizontal').draw(context, 272, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_east').draw(context, 288, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_north_east').draw(context, 288, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'b', SPRITE_TEXT_COLOR_WHITE, 272, 16, 16, 16)\n    if (this.link.itemB !== undefined) {\n      this.link.itemB.draw(context, 256 + 8, 16 + 16)\n    }\n\n    // Item A\n    resource.getSprite('menu_blue_line_corner_north_west').draw(context, 256 + 48, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256 + 48, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 256 + 48, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_west').draw(context, 256 + 48, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_horizontal').draw(context, 272 + 48, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_south_east').draw(context, 288 + 48, 64, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288 + 48, 48, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_vertical').draw(context, 288 + 48, 32, SPRITE_WIDTH, SPRITE_HEIGHT)\n    resource.getSprite('menu_blue_line_corner_north_east').draw(context, 288 + 48, 16, SPRITE_WIDTH, SPRITE_HEIGHT)\n    textManager.draw(context, 'a', SPRITE_TEXT_COLOR_WHITE, 272 + 48, 16, 16, 16)\n    if (this.link.itemA !== undefined) {\n      this.link.itemA.draw(context, 256 + 48 + 8, 16 + 16)\n    }\n\n    // Life\n    textManager.draw(context, '-life-', SPRITE_TEXT_COLOR_RED, 384, 16, 96, 16)\n    let x = 368\n    let y = 64\n    for (let i = 0; i < this.link.totalLife; i++) {\n      if (i < Math.floor(this.link.currentLife + 0.25)) {\n        resource.getSprite('menu_heart_full').draw(context, x, y, SPRITE_WIDTH, SPRITE_HEIGHT)\n      } else if (i < this.currentLife) {\n        resource.getSprite('menu_heart_half').draw(context, x, y, SPRITE_WIDTH, SPRITE_HEIGHT)\n      } else {\n        resource.getSprite('menu_heart_empty').draw(context, x, y, SPRITE_WIDTH, SPRITE_HEIGHT)\n      }\n\n      x += SPRITE_WIDTH\n      if (i === 7) {\n        y -= SPRITE_HEIGHT\n        x = 368\n      }\n    }\n  }\n}\n\nexport { TopMenu }\n","'use strict'\n\nimport { ITEM_SHIELD_NORMAL, ITEM_RING_GREEN } from '../constant'\n\nclass Inventory {\n  constructor () {\n    this.shield = ITEM_SHIELD_NORMAL\n    this.ring = ITEM_RING_GREEN\n    this.arrow = undefined\n    this.bookOfMagic = undefined\n    this.ladder = undefined\n    this.magicalKey = undefined\n    this.powerBracelet = undefined\n\n    this.rupees = 0\n    this.keys = 0\n    this.bombs = 0\n    this.maxRupees = 255\n    this.maxKeys = 8\n    this.maxBombs = 8\n  }\n}\n\nexport { Inventory }\n","'use strict'\n\nimport HitboxManager from '../service/hitbox-manager'\nimport resource from '../resource'\nimport { DIRECTION_EAST, DIRECTION_SOUTH, DIRECTION_WEST, LINK_DIRECTION_EAST, LINK_DIRECTION_NORTH, LINK_DIRECTION_SOUTH, LINK_DIRECTION_WEST, LINK_ACTION_MOVE, LINK_ACTION_PICK, LINK_ACTION_USE_ITEM_A, LINK_ACTION_USE_ITEM_B, SPRITE_LINK_PREFIX } from '../constant'\nimport { Inventory } from './inventory'\n\nconst EVENT_ITEM_A_CHANGED = 'item_a_changed'\nconst EVENT_ITEM_B_CHANGED = 'item_b_changed'\n\nconst SPRITE_WIDTH = 32\nconst SPRITE_HEIGHT = 32\n\nconst HITBOX_DELTA = 2\nconst SPEED = 10 // Speed depends on game processing interval\n\nclass Link extends EventTarget {\n  constructor (x, y, width, height) {\n    super()\n\n    this.x = x\n    this.y = y\n    this.width = SPRITE_WIDTH\n    this.height = SPRITE_HEIGHT\n\n    this.speed = SPEED\n    this.action = LINK_ACTION_MOVE\n    this.direction = LINK_DIRECTION_SOUTH\n    this.clipX = 0\n    this.clipY = 0\n\n    this.inventory = new Inventory()\n\n    this.totalLife = 3\n    this.currentLife = 3\n\n    this.items = []\n    this._itemA = undefined\n    this._itemB = undefined\n\n    this.actions = []\n  }\n\n  canPick (item) {\n    if (!item.enabled) {\n      return false\n    }\n\n    const collision = HitboxManager.computeHitboxesCollision(item.hitbox, this.hitbox)\n    if (!collision) {\n      return false\n    }\n\n    if (item.price && this.inventory.rupees < item.price) {\n      return false\n    }\n\n    // TODO add swordconditions\n\n    return true\n  }\n\n  useItemA () {\n    if (this.itemA !== undefined) {\n      this.itemA.use()\n    }\n  }\n\n  useItemB () {\n    if (this.itemB !== undefined) {\n      this.itemB.use()\n    }\n  }\n\n  getHitbox (x, y) {\n    x = x || this.x\n    y = y || this.y\n\n    return {\n      x: x + HITBOX_DELTA,\n      y: y + (this.height / 2) + HITBOX_DELTA,\n      width: this.width - 2 * HITBOX_DELTA,\n      height: (this.height / 2) - 2 * HITBOX_DELTA\n    }\n  }\n\n  move (map, direction) {\n    let targetX = this.x\n    let targetY = this.y\n    let targetHitbox\n    let collision\n\n    switch (direction) {\n      case LINK_DIRECTION_EAST:\n        this.direction = LINK_DIRECTION_EAST\n        targetX += this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetX = HitboxManager.getMinX(collision) - this.width\n        }\n        this.x = targetX\n        break\n      case LINK_DIRECTION_NORTH:\n        this.direction = LINK_DIRECTION_NORTH\n        targetY -= this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetY = HitboxManager.getMaxY(collision) - (this.height / 2)\n        }\n        this.y = targetY\n        break\n      case LINK_DIRECTION_SOUTH:\n        this.direction = LINK_DIRECTION_SOUTH\n        targetY += this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetY = HitboxManager.getMinY(collision) - this.height\n        }\n        this.y = targetY\n        break\n      case LINK_DIRECTION_WEST:\n        this.direction = LINK_DIRECTION_WEST\n        targetX -= this.speed\n        targetHitbox = HitboxManager.compute(this.getHitbox(targetX, targetY))\n        collision = HitboxManager.computeHitboxesCollision(map.hitbox, targetHitbox)\n        if (collision) {\n          targetX = HitboxManager.getMaxX(collision)\n        }\n        this.x = targetX\n        break\n    }\n\n    this.hitbox = HitboxManager.compute(this)\n  }\n\n  startWalking () {\n    const sprite = resource.getSprite(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n    if (!sprite) {\n      console.log(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n      return\n    }\n    sprite.start()\n  }\n\n  stopWalking () {\n    const sprite = resource.getSprite(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n    if (!sprite) {\n      console.log(`${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${this.action}`)\n      return\n    }\n    sprite.stop()\n  }\n\n  drawSword (context, offsetX, offsetY) {\n    context.save()\n    const itemWidth = this.itemA.sprite.width\n    const itemHeight = this.itemA.sprite.height\n    const linkX = offsetX + this.x + this.clipX\n    const linkY = offsetY + this.y + this.clipY\n    const linkWidth = this.width - this.clipX\n    const linkHeight = this.height - this.clipY\n    context.setTransform(1, 0, 0, 1, linkX + linkWidth / 2, linkY + linkHeight / 2)\n    let deltaX = 0\n    const deltaY = -3 / 4 * linkHeight\n    if (this.direction === DIRECTION_EAST) {\n      context.rotate(90 * Math.PI / 180)\n      deltaX = 1 / 8 * linkWidth\n    }\n    if (this.direction === DIRECTION_SOUTH) {\n      context.rotate(180 * Math.PI / 180)\n    }\n    if (this.direction === DIRECTION_WEST) {\n      context.rotate(-90 * Math.PI / 180)\n      deltaX = -1 / 8 * linkWidth\n    }\n    this.itemA.sprite.draw(context, 0, 0, itemWidth, itemHeight, -linkWidth / 2 + deltaX, -linkHeight / 2 + deltaY, itemWidth, itemHeight)\n    context.restore()\n  }\n\n  draw (context, offsetX, offsetY, drawingAction) {\n    if (drawingAction === LINK_ACTION_USE_ITEM_A) {\n      this.drawSword(context, offsetX, offsetY)\n    }\n\n    const spriteName = this.getSpriteName(drawingAction)\n    const sprite = resource.getSprite(spriteName)\n    if (!sprite) {\n      console.log(spriteName)\n      return\n    }\n    resource.getSprite(spriteName).draw(\n      context,\n      0, 0, this.width - this.clipX, this.height - this.clipY,\n      offsetX + this.x + this.clipX, offsetY + this.y + this.clipY, this.width - this.clipX, this.height - this.clipY\n    )\n  }\n\n  getSpriteName (action) {\n    switch (action) {\n      case LINK_ACTION_PICK:\n        return `${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${LINK_ACTION_PICK}`\n      case LINK_ACTION_USE_ITEM_A:\n      case LINK_ACTION_USE_ITEM_B:\n        return `${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.shield}_${LINK_ACTION_PICK}`\n      case LINK_ACTION_MOVE:\n        return `${SPRITE_LINK_PREFIX}_${this.inventory.ring}_${this.direction}_${this.inventory.shield}_${LINK_ACTION_MOVE}`\n    }\n  }\n\n  addItem (item) {\n    this.items.push(item)\n  }\n\n  removeItem (item) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].constructor.name === item.name) {\n        this.items.splice(i, 1)\n      }\n    }\n  }\n\n  hasItem (item) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].constructor.name === item.name) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  addAction (action) {\n    if (this.actions.indexOf(action) === -1) {\n      this.actions.push(action)\n    }\n  }\n\n  hasAction (action) {\n    return this.actions.indexOf(action) > -1\n  }\n\n  removeAction (action) {\n    const index = this.actions.indexOf(action)\n    if (index > -1) {\n      this.actions.splice(index, 1)\n    }\n  }\n\n  resetActions () {\n    this.actions = []\n  }\n\n  get itemA () {\n    return this._itemA\n  }\n\n  set itemA (item) {\n    this._itemA = item\n    this.dispatchEvent(new Event(EVENT_ITEM_A_CHANGED))\n  }\n\n  get itemB () {\n    return this._itemB\n  }\n\n  set itemB (item) {\n    this._itemB = item\n    this.dispatchEvent(new Event(EVENT_ITEM_B_CHANGED))\n  }\n}\n\nexport default Link\n","'use strict'\n\nimport { GAME_INTERVAL_PROCESS } from '../constant'\n\nconst BLOCKING_ACTION = true\nconst ENABLED = true\n\nclass Key {\n  constructor (key, action, blockingAction, enabled) {\n    this.key = key\n    this.action = action\n    this.blockingAction = blockingAction\n    this.enabled = enabled\n\n    this.pressed = false\n    this.used = false\n  }\n\n  use () {\n    this.used = true\n\n    return this.action\n  }\n\n  disable () {\n    this.enabled = false\n  }\n\n  enable () {\n    this.enabled = true\n  }\n\n  unuse () {\n    this.used = false\n\n    return this.action\n  }\n\n  press () {\n    this.pressed = true\n  }\n\n  unpress () {\n    this.pressed = false\n  }\n\n  static get BLOCKING_ACTION () {\n    return BLOCKING_ACTION\n  }\n\n  static get ENABLED () {\n    return ENABLED\n  }\n}\n\nexport default {\n\n  ACTION_LINK_MOVE_WEST: 'link_move_west',\n  ACTION_LINK_MOVE_NORTH: 'link_move_north',\n  ACTION_LINK_MOVE_EAST: 'link_move_east',\n  ACTION_LINK_MOVE_SOUTH: 'link_move_south',\n  ACTION_LINK_USE_ITEM_A: 'link_use_item_a',\n  ACTION_LINK_USE_ITEM_B: 'link_use_item_b',\n  ACTION_MENU_CLOSE: 'menu_close',\n  ACTION_MENU_MOVE_LEFT: 'menu_move_left',\n  ACTION_MENU_MOVE_TOP: 'menu_move_top',\n  ACTION_MENU_MOVE_RIGHT: 'menu_move_right',\n  ACTION_MENU_MOVE_BOTTOM: 'menu_move_bottom',\n  ACTION_MENU_OPEN: 'menu_open',\n\n  MAPPING_MAIN: 'mapping_main',\n  MAPPING_MENU: 'mapping_menu',\n\n  mappings: {},\n\n  currentMappingName: undefined,\n\n  actionKeys: [],\n\n  setMapping: function () {\n    this.mappings = []\n    this.mappings[37] = new Key(37, this.ACTION_LINK_MOVE_WEST, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[38] = new Key(38, this.ACTION_LINK_MOVE_NORTH, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[39] = new Key(39, this.ACTION_LINK_MOVE_EAST, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[40] = new Key(40, this.ACTION_LINK_MOVE_SOUTH, !Key.BLOCKING_ACTION, Key.ENABLED)\n    this.mappings[65] = new Key(65, this.ACTION_LINK_USE_ITEM_A, Key.BLOCKING_ACTION, !Key.ENABLED)\n    this.mappings[66] = new Key(66, this.ACTION_LINK_USE_ITEM_B, Key.BLOCKING_ACTION, !Key.ENABLED)\n    /* return\n        this.mappings[this.MAPPING_MAIN] = {}\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_WEST] = new Key(37, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_NORTH] = new Key(38, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_EAST] = new Key(39, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_MOVE_SOUTH] = new Key(40, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_USE_ITEM_A] = new Key(65, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_LINK_USE_ITEM_B] = new Key(66, true)\n        this.mappings[this.MAPPING_MAIN][this.ACTION_MENU_OPEN] = 42\n\n        this.mappings[this.MAPPING_MENU] = {}\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_LEFT] = 37\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_TOP] = 38\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_RIGHT] = 39\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_MOVE_BOTTOM] = 40\n        this.mappings[this.MAPPING_MENU][this.ACTION_MENU_CLOSE] = 65 */\n  },\n\n  getCurrentDrawingAction: function () {\n    for (let i = 0; i < this.actionKeys.length; i++) {\n      if (this.actionKeys[i].blockingAction) {\n        return this.actionKeys[i].use()\n      }\n    }\n\n    return this.actionKeys[0]?.use()\n  },\n\n  getCurrentAction: function () {\n    for (let i = 0; i < this.actionKeys.length; i++) {\n      if (this.actionKeys[i].blockingAction && !this.actionKeys[i].used) {\n        return this.actionKeys[i].use()\n      }\n    }\n\n    return this.actionKeys[0] && !this.actionKeys[0].blockingAction ? this.actionKeys[0].use() : undefined\n  },\n\n  clear: function () {\n    this.actionKeys = []\n  },\n\n  getKey: function (keyNumber) {\n    return this.mappings[keyNumber]\n  },\n\n  addActionKey: function (key) {\n    this.actionKeys.unshift(key)\n  },\n\n  removeActionKey: function (key) {\n    const index = this.actionKeys.indexOf(key)\n    if (index !== -1) {\n      this.actionKeys.splice(index, 1)\n    }\n  },\n\n  triggerBlockingAction (key) {\n    if (key.blockingAction) {\n      key.disable()\n      const inputManager = this\n      setTimeout(() => {\n        inputManager.removeActionKey(key)\n        key.enable()\n      }, GAME_INTERVAL_PROCESS * 5)\n    }\n  },\n\n  handleKeyDown: function (keyNumber) {\n    const key = this.getKey(keyNumber)\n    if (!key || !key.enabled) {\n      return\n    }\n\n    if (key && !key.pressed) {\n      this.removeActionKey(key)\n      this.addActionKey(key)\n      this.triggerBlockingAction(key)\n      key.press()\n    }\n  },\n\n  handleKeyUp: function (keyNumber) {\n    const key = this.getKey(keyNumber)\n    if (!key) {\n      return\n    }\n    this.removeActionKey(key)\n    key.unuse()\n    key.unpress()\n  },\n\n  enable (action) {\n    for (const key in this.mappings) {\n      if (this.mappings[key].action === action) {\n        this.mappings[key].enable()\n      }\n    }\n  },\n\n  startDetection: function () {\n    const inputManager = this\n    document.onkeydown = function (e) {\n      inputManager.handleKeyDown(e.keyCode)\n    }\n    document.onkeyup = function (e) {\n      inputManager.handleKeyUp(e.keyCode)\n    }\n  },\n\n  stopDetection: function () {\n    document.onkeydown = undefined\n    document.onkeyup = undefined\n  }\n}\n","'use strict'\n\nimport transitionManager from '../service/transition-manager'\n// import TopMenu from 'Model/top-menu'\nimport { TopMenu } from '../model/top-menu'\n// import Link from 'Model/link'\nimport Link from '../model/link'\nimport InputManager from '../service/input-manager'\nimport HitboxManager from '../service/hitbox-manager'\n// import ItemManager from 'Manager/item'\nimport { TRANSITION_MAP_DRAG, SOUND_OVERWORLD, DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST, DIRECTION_WEST, LINK_DIRECTION_EAST, LINK_DIRECTION_NORTH, LINK_DIRECTION_SOUTH, LINK_DIRECTION_WEST, LINK_ACTION_MOVE, LINK_ACTION_USE_ITEM_A, LINK_ACTION_USE_ITEM_B, GAME_TOP_MENU_HEIGHT, TILE_WIDTH, TILE_HEIGHT, TILES_PER_LINE, TILES_PER_COLUMN } from '../constant'\nimport soundManager from '../service/sound-manager'\nimport resource from '../resource'\nimport worldManager from '../service/world-manager'\nimport { TileTransition } from '../model/tile-transition'\nimport { MapDrag, Dialog, ItemPick } from '../model/transition'\n\nclass Game {\n  constructor () {\n    const startingPosition = worldManager.findStartingPosition()\n    if (!startingPosition) {\n      throw new Error('No starting position found')\n    }\n    const map = startingPosition.map\n    const link = new Link(map.x + startingPosition.tileColumn * TILE_WIDTH, map.y + startingPosition.tileLine * TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT)\n    link.map = map\n\n    this.topMenu = new TopMenu(link)\n    // this.topMenu.initializeMap(map)\n\n    this.map = map\n    this.nextMap = undefined\n\n    this.link = link\n    this.link.addEventListener(Link.EVENT_ITEM_A_CHANGED, () => InputManager.enable(InputManager.ACTION_LINK_USE_ITEM_A))\n    this.link.addEventListener(Link.EVENT_ITEM_B_CHANGED, () => InputManager.enable(InputManager.ACTION_LINK_USE_ITEM_B))\n\n    this.isStarted = false\n    this.transitionPlaying = false\n  }\n\n  start () {\n    this.map.hitbox = HitboxManager.computeMapHitboxV2(this.map)\n    this.map.init()\n    this.link.hitbox = HitboxManager.compute(this.link)\n\n    InputManager.setMapping()\n    InputManager.startDetection()\n    InputManager.currentMappingName = InputManager.MAPPING_MAIN\n\n    this.isStarted = true\n\n    soundManager.play(resource.getSound(SOUND_OVERWORLD))\n\n    // this.link.itemA = ItemManager.create(ItemManager.WOODEN_SWORD, 0, 0)\n  }\n\n  draw (context, x, y, width, height) {\n    if (!this.isStarted) {\n      return\n    }\n\n    context.clearRect(x, y, width, height)\n\n    // Translate contexte to draw map behind top menu\n    context.translate(0, GAME_TOP_MENU_HEIGHT)\n\n    context.translate(-this.map.x, -this.map.y)\n    this.map.draw(context)\n    if (this.mapDragTransitionPlaying) {\n      this.nextMap.draw(context)\n    }\n    this.link.draw(context, 0, 0, this.link.action)\n    // this.link.draw(context, 0, 0, this.getLinkActionFromInput(InputManager.getCurrentDrawingAction()) ?? this.link.action)\n    context.translate(this.map.x, this.map.y)\n\n    context.translate(0, -GAME_TOP_MENU_HEIGHT)\n    this.topMenu.draw(context)\n  }\n\n  async process () {\n    if (!this.isStarted) {\n      return\n    }\n\n    if (this.transitionPlaying) {\n      return\n    }\n\n    // Process static transitions\n    if (this.map.character && this.map.character.enabled && !this.map.character.hasStoppedTalking()) {\n      this.transitionPlaying = true\n      this.link.resetActions()\n      const transition = new Dialog()\n      await transition.play(this.link)\n      this.transitionPlaying = false\n      return\n    }\n\n    for (const item of this.map.items) {\n      if (this.link.canPick(item)) {\n        this.transitionPlaying = true\n        this.link.resetActions()\n        const transition = new ItemPick()\n        await transition.play(this.link, item)\n        this.transitionPlaying = false\n        return\n      }\n    }\n\n    // Process move transitions\n    const linkTile = HitboxManager.getLinkTile(this.map, this.link)\n    if (linkTile && linkTile !== this.link.tile) {\n      linkTile.tileTransition.enabled = true\n    }\n    this.link.tile = linkTile\n    const linkFrontTile = HitboxManager.getLinkFrontTile(this.map, this.link)\n    let tileTransition\n    if (this.link.tile && !linkFrontTile) {\n      tileTransition = this.createDynamicMapDragTileTransition()\n      this.mapDragTransitionPlaying = true\n    }\n    if (this.link.tile && linkFrontTile) {\n      tileTransition = this.link.tile.tileTransition\n    }\n    if (tileTransition && tileTransition.enabled && tileTransition.start) {\n      this.transitionPlaying = true\n      this.link.resetActions()\n      this.nextMap = tileTransition.getTargetMap()\n      this.nextMap.init()\n      const transitionStart = transitionManager.get(tileTransition.start)\n      if (transitionStart) {\n        await transitionStart.play(this.link, this.map, this.nextMap)\n      }\n      this.map.reset()\n      this.map = tileTransition.getTargetMap()\n      this.nextMap = undefined\n      this.map.hitbox = HitboxManager.computeMapHitboxV2(this.map)\n      this.link.x = tileTransition.getTargetPosition().x\n      this.link.y = tileTransition.getTargetPosition().y\n      const transitionEnd = transitionManager.get(tileTransition.end)\n      if (transitionEnd) {\n        await transitionEnd.play(this.link)\n      }\n      this.link.tile = HitboxManager.getLinkTile(this.map, this.link)\n      this.link.tile.tileTransition.enabled = false\n      this.link.map = this.map\n      this.transitionPlaying = false\n      this.mapDragTransitionPlaying = false\n      tileTransition.enabled = false\n      return\n    }\n\n    // Process link\n    this.processLinkActions()\n  }\n\n  createDynamicMapDragTileTransition () {\n    let targetMapColumn\n    let targetMapLine\n    let targetTileColumn\n    let targetTileLine\n    if (this.link.direction === DIRECTION_EAST) {\n      targetMapColumn = this.map.column + 1\n      targetMapLine = this.map.line\n      targetTileColumn = 0\n      targetTileLine = (this.link.y % (TILES_PER_COLUMN * TILE_HEIGHT)) / TILE_HEIGHT\n    }\n    if (this.link.direction === DIRECTION_NORTH) {\n      targetMapColumn = this.map.column\n      targetMapLine = this.map.line - 1\n      targetTileColumn = (this.link.x % (TILES_PER_LINE * TILE_WIDTH)) / TILE_WIDTH\n      targetTileLine = TILES_PER_COLUMN - 1\n    }\n    if (this.link.direction === DIRECTION_SOUTH) {\n      targetMapColumn = this.map.column\n      targetMapLine = this.map.line + 1\n      targetTileColumn = (this.link.x % (TILES_PER_LINE * TILE_WIDTH)) / TILE_WIDTH\n      targetTileLine = 0\n    }\n    if (this.link.direction === DIRECTION_WEST) {\n      targetMapColumn = this.map.column - 1\n      targetMapLine = this.map.line\n      targetTileColumn = TILES_PER_LINE - 1\n      targetTileLine = (this.link.y % (TILES_PER_COLUMN * TILE_HEIGHT)) / TILE_HEIGHT\n    }\n    return new TileTransition(TRANSITION_MAP_DRAG, this.map.type, targetMapColumn, targetMapLine, targetTileColumn, targetTileLine)\n  }\n\n  processLinkActions () {\n    let mustWalk = false\n    const linkMoves = [InputManager.ACTION_LINK_MOVE_EAST, InputManager.ACTION_LINK_MOVE_NORTH, InputManager.ACTION_LINK_MOVE_SOUTH, InputManager.ACTION_LINK_MOVE_WEST]\n    for (let i = 0; i < linkMoves.length; i++) {\n      if (this.link.hasAction(linkMoves[i])) {\n        mustWalk = true\n      }\n    }\n\n    if (mustWalk) {\n      this.link.startWalking()\n    } else {\n      this.link.stopWalking()\n    }\n\n    if (this.link.actions.length === 0) {\n      this.link.action = LINK_ACTION_MOVE\n    } else {\n      for (let i = 0; i < this.link.actions.length; i++) {\n        this.processAction(this.link.actions[i])\n      }\n    }\n  }\n\n  getLinkActionFromInput (inputAction) {\n    switch (inputAction) {\n      case InputManager.ACTION_LINK_MOVE_EAST:\n      case InputManager.ACTION_LINK_MOVE_NORTH:\n      case InputManager.ACTION_LINK_MOVE_SOUTH:\n      case InputManager.ACTION_LINK_MOVE_WEST:\n        return LINK_ACTION_MOVE\n      case InputManager.ACTION_LINK_USE_ITEM_A:\n        return LINK_ACTION_USE_ITEM_A\n      case InputManager.ACTION_LINK_USE_ITEM_B:\n        return LINK_ACTION_USE_ITEM_B\n      default:\n        return undefined\n    }\n  }\n\n  processAction (action) {\n    switch (action) {\n      case InputManager.ACTION_LINK_MOVE_EAST:\n        this.link.move(this.map, LINK_DIRECTION_EAST)\n        break\n      case InputManager.ACTION_LINK_MOVE_NORTH:\n        this.link.move(this.map, LINK_DIRECTION_NORTH)\n        break\n      case InputManager.ACTION_LINK_MOVE_SOUTH:\n        this.link.move(this.map, LINK_DIRECTION_SOUTH)\n        break\n      case InputManager.ACTION_LINK_MOVE_WEST:\n        this.link.move(this.map, LINK_DIRECTION_WEST)\n        break\n      case InputManager.ACTION_LINK_USE_ITEM_A:\n        this.link.useItemA()\n        break\n      case InputManager.ACTION_LINK_USE_ITEM_B:\n        this.link.useItemB()\n        break\n      case InputManager.ACTION_MENU_CLOSE:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_BOTTOM:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_LEFT:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_RIGHT:\n\n        break\n      case InputManager.ACTION_MENU_MOVE_TOP:\n\n        break\n      case InputManager.ACTION_MENU_OPEN:\n\n        break\n    }\n\n    this.link.removeAction(action)\n  }\n\n  processInput () {\n    if (!this.isStarted) {\n      return\n    }\n\n    if (this.transitionPlaying) {\n      return\n    }\n\n    const action = InputManager.getCurrentAction()\n    if (action) {\n      this.link.addAction(action)\n    }\n  }\n}\n\nexport default Game\n","'use strict'\r\n\r\nimport Game from './game'\r\nimport { Debug } from './debug'\r\nimport io from '../utils/io'\r\nimport resource from '../resource'\r\nimport soundManager from '../service/sound-manager'\r\nimport worldManager from '../service/world-manager'\r\nimport { PATH_DATA_GAME, FILE_TYPE_LOZ, GAME_INTERVAL_PROCESS, GAME_INTERVAL_DRAWING, GAME_INTERVAL_INPUT, TILES_PER_LINE, TILES_PER_COLUMN, TILE_WIDTH, TILE_HEIGHT, GAME_TOP_MENU_HEIGHT } from '../constant'\r\n\r\nlet game\r\nlet drawInterval\r\nlet processInterval\r\nlet processInputInterval\r\nconst canvas = document.querySelector('#loz-canvas')\r\nconst context = canvas.getContext('2d')\r\n\r\ncanvas.width = TILES_PER_LINE * TILE_WIDTH\r\ncanvas.height = TILES_PER_COLUMN * TILE_HEIGHT + GAME_TOP_MENU_HEIGHT\r\ncanvas.onload = () => { canvas.focus() }\r\n\r\nconst debug = new Debug(\r\n  document.querySelector('input#control-blocking-zones'),\r\n  document.querySelector('input#control-blocking-zones-color'),\r\n  document.querySelector('input#control-rupees'),\r\n  document.querySelector('input#control-rupees-submit'),\r\n  document.querySelector('input#control-keys'),\r\n  document.querySelector('input#control-keys-submit'),\r\n  document.querySelector('input#control-bombs'),\r\n  document.querySelector('input#control-bombs-submit'),\r\n  document.querySelector('input#control-convert-file-to-loz')\r\n)\r\nsoundManager.initContext()\r\nsoundManager.initEvents(document.querySelector('input#play-sounds'), document.querySelector('input#control-volume'))\r\nawait resource.loadAll()\r\n\r\nasync function loadGame (gameData) {\r\n  worldManager.createMaps(gameData)\r\n\r\n  game = new Game()\r\n  debug.setGame(game)\r\n\r\n  clearInterval(drawInterval)\r\n  drawInterval = setInterval(() => {\r\n    game.draw(context, 0, 0, canvas.width, canvas.height)\r\n    debug.draw(context, 0, 0, canvas.width, canvas.height)\r\n  }, GAME_INTERVAL_DRAWING)\r\n  clearInterval(processInterval)\r\n  processInterval = setInterval(() => game.process(), GAME_INTERVAL_PROCESS)\r\n  clearInterval(processInputInterval)\r\n  processInputInterval = setInterval(() => game.processInput(), GAME_INTERVAL_INPUT)\r\n\r\n  game.start()\r\n}\r\n\r\nconst gameData = await io.fetchRemoteFile(PATH_DATA_GAME)\r\nawait loadGame(gameData)\r\n\r\ndocument.querySelector('input#control-import-game').addEventListener('click', async (e) => {\r\n  e.preventDefault()\r\n  const gameData = await io.openFile(FILE_TYPE_LOZ)\r\n  loadGame(gameData)\r\n})\r\n","'use strict'\n\nimport { ITEM_FIVE_RUPESS, CHARACTER_MERCHANT, SPRITE_TEXT_COLOR_WHITE, SPRITE_TEXT_HEIGHT, TILE_WIDTH, TILE_HEIGHT, SPRITE_TEXT_WIDTH } from '../constant'\nimport textManager from '../service/text-manager'\nimport resource from '../resource'\n\nclass Character {\n  constructor (name, column, line, x, y, width, height, sprite, text) {\n    this.name = name\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.sprite = sprite\n    this.text = text\n    this.displayedText = ''\n    this.enabled = true\n  }\n\n  init () {\n    this.sprite.start()\n    this.enabled = true\n  }\n\n  reset () {\n    this.sprite.stop()\n    this.displayedText = ''\n  }\n\n  hasStoppedTalking () {\n    return this.displayedText === this.text\n  }\n\n  draw (context) {\n    this.vanishDrawingCalled = true\n    if (!this.enabled) {\n      return\n    }\n    \n    this.sprite.draw(context, this.x, this.y, this.width, this.height)\n    //if (this.name === CHARACTER_MERCHANT) {\n    //resource.getItemSprite(ITEM_FIVE_RUPESS).draw(context, TILE_WIDTH * 2, 7 * TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT)\n    textManager.draw(context, 'x', SPRITE_TEXT_COLOR_WHITE, TILE_WIDTH * 3, 7 * TILE_HEIGHT, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT)\n    //}\n    textManager.draw(context, this.text, SPRITE_TEXT_COLOR_WHITE, this.x - 4.5 * TILE_WIDTH - TILE_WIDTH / 2, this.y - SPRITE_TEXT_HEIGHT * 3, 11 * TILE_WIDTH, SPRITE_TEXT_HEIGHT * 3, 'middle', this.displayedText.length)\n  }\n\n  vanish (timeout) {\n    const self = this\n    self.displayedText = ''\n    const interval = setInterval(() => {\n      if (self.vanishDrawingCalled) {\n        self.enabled = !self.enabled\n        self.vanishDrawingCalled = false\n      }\n    }, 5)\n    setTimeout(() => {\n      clearInterval(interval)\n      self.enabled = false\n    }, timeout)\n  }\n}\n\nexport { Character }\n","'use strict'\n\nclass Extra {\n  constructor (column, line, x, y, width, height, sprite) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.sprite = sprite\n  }\n\n  init () {\n    this.sprite.start()\n  }\n\n  reset () {\n    this.sprite.stop()\n  }\n\n  draw (context) {\n    this.sprite.draw(context, this.x, this.y, this.width, this.height)\n  }\n}\n\nexport { Extra }\n","'use strict'\n\nimport { SPRITE_TEXT_COLOR_WHITE, TILE_HEIGHT, TILE_WIDTH } from '../constant'\nimport textManager from '../service/text-manager'\nimport hitboxManager from '../service/hitbox-manager'\n\nclass Item {\n  constructor (name, column, line, x, y, width, height, sprite, price) {\n    this.name = name\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.sprite = sprite\n    this.price = price\n    this.hitbox = hitboxManager.compute({ x, y, width, height })\n    this.enabled = true\n  }\n\n  init () {\n    this.sprite.start()\n    this.enabled = true\n  }\n\n  reset () {\n    this.sprite.stop()\n  }\n\n  draw (context) {\n    if (!this.enabled) {\n      return\n    }\n\n    this.sprite.draw(context, this.x, this.y, this.width, this.height)\n\n    if (this.price) {\n      textManager.draw(context, this.price.toString(), SPRITE_TEXT_COLOR_WHITE, this.x - 0.5 * TILE_WIDTH, this.y + 1.5 * TILE_HEIGHT, TILE_WIDTH * 1.5, TILE_HEIGHT, 'right')\n    }\n  }\n\n  clone () {\n    return new Item(this.name, this.column, this.line, this.x, this.y, this.width, this.height, this.sprite, this.price)\n  }\n}\n\nexport { Item }\n","'use strict'\n\nimport { ITEM_FIVE_RUPESS, CHARACTER_MERCHANT, SPRITE_TEXT_COLOR_WHITE, SPRITE_TEXT_HEIGHT, TILE_WIDTH, TILE_HEIGHT, SPRITE_TEXT_WIDTH } from '../constant'\nimport textManager from '../service/text-manager'\n\nclass Map {\n  constructor (column, line, x, y, width, height, type, tiles, characters, items, extras) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.offsetX = 0\n    this.offsetY = 0\n    this.width = width\n    this.height = height\n    this.type = type\n    this.tiles = tiles\n    this.characters = characters\n    this.items = items\n    this.extras = extras\n\n    this.savedItems = []\n    this.savedCharacters = []\n    this.mapPath = this.getMapPath()\n  }\n\n  get character () {\n    return this.characters[0]\n  }\n\n  getMapPath () {\n    const path = new Path2D()\n    path.rect(this.x, this.y, this.width, this.height)\n\n    return path\n  }\n\n  init () {\n    for (const character of this.characters) {\n      character.init()\n    }\n    for (const item of this.items) {\n      item.init()\n    }\n    for (const extra of this.extras) {\n      extra.init()\n    }\n  }\n\n  reset () {\n    for (const character of this.characters) {\n      character.reset()\n    }\n    for (const item of this.items) {\n      item.reset()\n    }\n    for (const extra of this.extras) {\n      extra.reset()\n    }\n  }\n\n  draw (context) {\n    context.save()\n    context.translate(this.offsetX, this.offsetY)\n    \n    for (const tile of this.tilesIterator()) {\n      tile.draw(context)\n    }\n    \n    for (const character of this.characters) {\n      character.draw(context)\n    }\n    textManager.draw(context, 'x', SPRITE_TEXT_COLOR_WHITE, TILE_WIDTH, TILE_HEIGHT, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT)\n    textManager.draw(context, 'xss', SPRITE_TEXT_COLOR_WHITE, 176, 48, SPRITE_TEXT_WIDTH * 4, SPRITE_TEXT_HEIGHT, 'left')\n\n    for (const item of this.items) {\n      item.draw(context)\n    }\n\n    for (const extra of this.extras) {\n      extra.draw(context)\n    }\n     \n    context.translate(-this.offsetX, -this.offsetY)\n    context.restore()\n  }\n\n  drawBlockingZones (context, color) {\n    context.save()\n    context.translate(this.offsetX, this.offsetY)\n    context.globalAlpha = 0.5\n    context.fillStyle = color\n    for (const tile of this.tilesIterator()) {\n      context.fill(tile.blockPath)\n    }\n    context.translate(-this.offsetX, -this.offsetY)\n    context.restore()\n  }\n\n  * tilesIterator () {\n    for (let column = 0; column < this.tiles.length; column++) {\n      for (let line = 0; line < this.tiles[column].length; line++) {\n        yield this.tiles[column][line]\n      }\n    }\n  }\n\n  getTile (column, line) {\n    return this.tiles[column] ? this.tiles[column][line] : undefined\n  }\n}\n\nexport { Map }\n","'use strict'\n\nclass Sound {\n  constructor (name, buffer, context, gain, duration, loop, loopStart, loopEnd) {\n    this.name = name\n    this.buffer = buffer\n    this.context = context\n    this.gain = gain\n    this.duration = duration\n    this.loop = loop\n    this.loopStart = loopStart\n    this.loopEnd = loopEnd\n    this.source = undefined\n  }\n\n  play () {\n    this.source = this.context.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.connect(this.gain)\n    this.source.loop = this.loop\n    this.source.loopStart = this.loopStart\n    this.source.loopEnd = this.loopEnd\n    this.source.start(0)\n  }\n\n  stop () {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n\nexport { Sound }\n","'use strict'\n\n// TODO remove this and handle draw directly in Sprite class\nclass SpriteImage {\n  constructor (name, file, offset, width, height) {\n    this.name = name\n    this.file = file\n    this.offset = offset\n    this.width = width\n    this.height = height\n  }\n\n  draw (context, x, y, w, h, dx, dy, dw, dh) {\n    if (dx !== undefined && dy !== undefined && dw !== undefined && dh !== undefined) {\n      context.drawImage(this.file, this.offset.x + x, this.offset.y + y, w, h, dx, dy, dw, dh)\n      return\n    }\n\n    context.drawImage(this.file, this.offset.x, this.offset.y, this.width, this.height, x, y, w, h)\n  }\n}\n\nclass Sprite {\n  constructor (name, type, images) {\n    this.name = name\n    this.type = type\n    this.images = images\n\n    this.currentImageIndex = 0\n    this.incrementSpeed = 200\n    this.incrementInterval = undefined\n  }\n\n  clone () {\n    return new Sprite(this.name, this.type, this.images)\n  }\n\n  start () {\n    if (this.incrementInterval) {\n      return\n    }\n\n    const self = this\n\n    this.incrementImageIndex()\n    this.incrementInterval = setInterval(() => {\n      self.incrementImageIndex()\n    }, this.incrementSpeed)\n\n    return this\n  }\n\n  stop () {\n    clearInterval(this.incrementInterval)\n    this.incrementInterval = undefined\n\n    return this\n  }\n\n  incrementImageIndex () {\n    if (!this.images) {\n      return\n    }\n\n    this.currentImageIndex++\n    if (this.currentImageIndex >= this.images.length) {\n      this.currentImageIndex = 0\n    }\n  }\n\n  draw (context, x, y, w, h, x2, y2, w2, h2) {\n    if (!this.images || !this.images[this.currentImageIndex]) {\n      return\n    }\n\n    this.images[this.currentImageIndex].draw(context, x, y, w, h, x2, y2, w2, h2)\n  }\n\n  get width () {\n    return this.images[this.currentImageIndex]?.width\n  }\n\n  get height () {\n    return this.images[this.currentImageIndex]?.height\n  }\n}\n\nexport { Sprite, SpriteImage }\n","'use strict'\n\nimport { TILE_HEIGHT, TILE_WIDTH } from '../constant'\nimport worldManager from '../service/world-manager'\n\nclass TileTransition {\n  constructor (start, targetMapType, targetMapColumn, targetMapLine, targetTileColumn, targetTileLine, end) {\n    this.start = start\n    this.targetMapType = targetMapType\n    this.targetMapColumn = targetMapColumn\n    this.targetMapLine = targetMapLine\n    this.targetTileColumn = targetTileColumn\n    this.targetTileLine = targetTileLine\n    this.end = end\n    this.enabled = true\n  }\n\n  isEmpty () {\n    return !this.start && !this.targetMapType && !this.targetMapColumn && !this.targetMapLine && !this.targetTileColumn && !this.targetTileLine && !this.end\n  }\n\n  getTargetMap () {\n    return worldManager.getMap(this.targetMapType, this.targetMapColumn, this.targetMapLine)\n  }\n\n  getTargetPosition () {\n    return {\n      x: this.getTargetMap().x + this.targetTileColumn * TILE_WIDTH,\n      y: this.getTargetMap().y + this.targetTileLine * TILE_HEIGHT\n    }\n  }\n\n  clone () {\n    return new TileTransition(this.start, this.targetMapType, this.targetMapColumn, this.targetMapLine, this.targetTileColumn, this.targetTileLine, this.end)\n  }\n}\n\nexport { TileTransition }\n","'use strict'\n\nclass Tile {\n  constructor (column, line, x, y, width, height, hitbox, sprite, block, desctructible, tileTransition, start) {\n    this.column = column\n    this.line = line\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.hitbox = hitbox\n    this.sprite = sprite\n    this.transition = undefined\n    this.tilePath = this.getTilePath()\n    this.blockPath = this.getBlockPath()\n    this.block = block\n    this.desctructible = desctructible\n    this.tileTransition = tileTransition\n    this.start = start\n  }\n\n  recomputePaths () {\n    this.tilePath = this.getTilePath()\n    this.blockPath = this.getBlockPath()\n  }\n\n  clone () {\n    return new Tile(this.column, this.line, this.x, this.y, this.width, this.height, this.hitbox, this.sprite.clone(), this.block, this.desctructible, this.tileTransition.clone())\n  }\n\n  draw (context, offsetX, offsetY) {\n    const tileOffsetX = offsetX !== undefined ? this.x + offsetX : this.x\n    const tileOffsetY = offsetY !== undefined ? this.y + offsetY : this.y\n\n    this.sprite.draw(context, tileOffsetX, tileOffsetY, this.width, this.height)\n    if (this.other) {\n      this.other.draw(context, tileOffsetX, tileOffsetY, this.width, this.height)\n    }\n  }\n\n  getTilePath () {\n    const path = new Path2D()\n    path.rect(this.x, this.y, this.width, this.height)\n\n    return path\n  }\n\n  getBlockPath () {\n    if (typeof this.hitbox !== 'string') {\n      return\n    }\n\n    const points = []\n    if (this.hitbox.charAt(0) === '1') {\n      points.push([this.x, this.y])\n    }\n    if (this.hitbox.charAt(1) === '1') {\n      points.push([this.x + this.width / 2, this.y])\n    }\n    if (this.hitbox.charAt(2) === '1') {\n      points.push([this.x + this.width, this.y])\n    }\n    if (this.hitbox.charAt(3) === '1') {\n      points.push([this.x + this.width, this.y + this.height / 2])\n    }\n    if (this.hitbox.charAt(4) === '1') {\n      points.push([this.x + this.width, this.y + this.height])\n    }\n    if (this.hitbox.charAt(5) === '1') {\n      points.push([this.x + this.width / 2, this.y + this.height])\n    }\n    if (this.hitbox.charAt(6) === '1') {\n      points.push([this.x, this.y + this.height])\n    }\n    if (this.hitbox.charAt(7) === '1') {\n      points.push([this.x, this.y + this.height / 2])\n    }\n\n    const path = new Path2D()\n    if (points[0]) {\n      path.moveTo(points[0][0], points[0][1])\n    }\n    for (let i = 1; i < points.length; i++) {\n      path.lineTo(points[i][0], points[i][1])\n    }\n\n    return path\n  }\n}\n\nexport { Tile }\n","'use strict'\r\n\r\nimport io from './utils/io'\r\nimport soundManager from './service/sound-manager'\r\nimport { PATH_DATA_SPRITES, PATH_SPRITES_IMAGE, PATH_DATA_SOUNDS, PATH_AUDIO_SOUNDS, SPRITE_WIDTH, SPRITE_HEIGHT } from './constant'\r\nimport { Sprite, SpriteImage } from './model/resource/sprite'\r\nimport { Sound } from './model/resource/sound'\r\n\r\nconst sprites = {}\r\nconst sounds = {}\r\n\r\nexport default {\r\n  loadAll: async function () {\r\n    const resources = await io.fetchRemoteFiles(PATH_DATA_SPRITES, PATH_SPRITES_IMAGE, PATH_DATA_SOUNDS, PATH_AUDIO_SOUNDS)\r\n    const dataSprites = resources[0]\r\n    const spritesImage = resources[1]\r\n    const dataSounds = resources[2]\r\n    const audioSounds = resources[3]\r\n    this.loadSprites(dataSprites, spritesImage)\r\n    await this.loadSounds(dataSounds, audioSounds)\r\n  },\r\n  loadSprites: async function (dataSprites, spritesImage) {\r\n    if (!dataSprites || !spritesImage) {\r\n      const resources = await io.fetchRemoteFiles(PATH_DATA_SPRITES, PATH_SPRITES_IMAGE)\r\n      dataSprites = resources[0]\r\n      spritesImage = resources[1]\r\n    }\r\n    for (let i = 0; i < dataSprites.length; i++) {\r\n      const dataSprite = dataSprites[i]\r\n      const name = dataSprite.name\r\n      const type = dataSprite.type\r\n      // Several image parts for one Sprite\r\n      const images = dataSprite.offsets.map((offset) => new SpriteImage(name, spritesImage, { x: offset.x * SPRITE_WIDTH, y: offset.y * SPRITE_HEIGHT }, SPRITE_WIDTH, SPRITE_HEIGHT))\r\n      sprites[name] = new Sprite(name, type, images)\r\n    }\r\n  },\r\n  cloneSprite: (name) => {\r\n    return sprites[name] ? sprites[name].clone() : undefined\r\n  },\r\n  getItemSprite: (name) => {\r\n    return sprites[`item_${name}`]\r\n  },\r\n  getSprite: (name) => {\r\n    return sprites[name]\r\n  },\r\n  loadSounds: async function (dataSounds, audioSounds) {\r\n    const context = soundManager.getContext()\r\n    const gainNode = soundManager.getGainNode()\r\n    if (!context || !gainNode) {\r\n      throw new Error('Audio context must be initialized before loading sounds')\r\n    }\r\n    if (!dataSounds || !audioSounds) {\r\n      const resources = await io.fetchRemoteFiles(PATH_DATA_SOUNDS, PATH_AUDIO_SOUNDS)\r\n      dataSounds = resources[0]\r\n      audioSounds = resources[1]\r\n    }\r\n    for (let i = 0; i < dataSounds.length; i++) {\r\n      const dataSound = dataSounds[i]\r\n      const bytes = dataSound.bytes\r\n      const offset = dataSound.offset\r\n      const arrayBuffer = audioSounds.slice(offset, offset + bytes)\r\n      const audioBuffer = await context.decodeAudioData(arrayBuffer)\r\n      const name = dataSound.name\r\n      const duration = dataSound.duration || undefined\r\n      const loop = dataSound.loop || false\r\n      const loopEnd = dataSound.loop_end || 0\r\n      const loopStart = dataSound.loop_start || 0\r\n      sounds[name] = new Sound(name, audioBuffer, context, gainNode, duration, loop, loopStart, loopEnd)\r\n    }\r\n  },\r\n  cloneSound: (name) => {\r\n    return sounds[name] ? sounds[name].clone() : undefined\r\n  },\r\n  getSound: (name) => {\r\n    return sounds[name]\r\n  }\r\n}\r\n","'use strict'\n\nimport { DIRECTION_WEST, DIRECTION_SOUTH, DIRECTION_NORTH, DIRECTION_EAST } from '../constant'\n\n// @see https://www.npmjs.com/package/polybooljs\nconst PolyBool = require('polybooljs')\n\nconst HitboxManager = {\n  getHitboxFromString: function (x, y, width, height, hitboxString) {\n    let hitbox = []\n\n    if (hitboxString.charAt(0) === '1') {\n      hitbox.push([x, y])\n    }\n    if (hitboxString.charAt(1) === '1') {\n      hitbox.push([x + width / 2, y])\n    }\n    if (hitboxString.charAt(2) === '1') {\n      hitbox.push([x + width, y])\n    }\n    if (hitboxString.charAt(3) === '1') {\n      hitbox.push([x + width, y + height / 2])\n    }\n    if (hitboxString.charAt(4) === '1') {\n      hitbox.push([x + width, y + height])\n    }\n    if (hitboxString.charAt(5) === '1') {\n      hitbox.push([x + width / 2, y + height])\n    }\n    if (hitboxString.charAt(6) === '1') {\n      hitbox.push([x, y + height])\n    }\n    if (hitboxString.charAt(7) === '1') {\n      hitbox.push([x, y + height / 2])\n    }\n\n    hitbox = {\n      regions: [hitbox],\n      inverted: false\n    }\n\n    return PolyBool.polygon(PolyBool.segments(hitbox))\n  },\n\n  getPathFromString: function (x, y, width, height, hitboxString) {\n    const hitbox = []\n    if (hitboxString.charAt(0) === '1') {\n      hitbox.push([x, y])\n    }\n    if (hitboxString.charAt(1) === '1') {\n      hitbox.push([x + width / 2, y])\n    }\n    if (hitboxString.charAt(2) === '1') {\n      hitbox.push([x + width, y])\n    }\n    if (hitboxString.charAt(3) === '1') {\n      hitbox.push([x + width, y + height / 2])\n    }\n    if (hitboxString.charAt(4) === '1') {\n      hitbox.push([x + width, y + height])\n    }\n    if (hitboxString.charAt(5) === '1') {\n      hitbox.push([x + width / 2, y + height])\n    }\n    if (hitboxString.charAt(6) === '1') {\n      hitbox.push([x, y + height])\n    }\n    if (hitboxString.charAt(7) === '1') {\n      hitbox.push([x, y + height / 2])\n    }\n\n    const path = new Path2D()\n    if (hitbox[0]) {\n      path.moveTo(hitbox[0][0], hitbox[0][1])\n    }\n    for (let i = 1; i < hitbox.length; i++) {\n      path.lineTo(hitbox[i][0], hitbox[i][1])\n    }\n\n    return path\n  },\n\n  compute: function (object) {\n    const hitbox = {\n      regions: [[\n        [object.x, object.y],\n        [object.x + object.width, object.y],\n        [object.x + object.width, object.y + object.height],\n        [object.x, object.y + object.height]\n      ]],\n      inverted: false\n    }\n\n    return hitbox\n  },\n\n  computeMapHitbox: function (map) {\n    const hitbox = {\n      regions: [],\n      inverted: false\n    }\n\n    for (let i = 0; i < map.tiles.length; i++) {\n      if (map.tiles[i].hitbox.regions[0]) {\n        hitbox.regions.push(map.tiles[i].hitbox.regions[0])\n      }\n    }\n\n    return PolyBool.union(hitbox, { regions: [], inverted: false })\n  },\n\n  computeMapHitboxV2: function (map) {\n    const hitbox = {\n      regions: [],\n      inverted: false\n    }\n\n    for (const tile of map.tilesIterator()) {\n      if (tile.block.regions && tile.block.regions[0]) {\n        hitbox.regions.push(tile.block.regions[0])\n      }\n    }\n\n    return PolyBool.union(hitbox, { regions: [], inverted: false })\n  },\n\n  computeHitboxesCollision: function (hitobx1, hitbox2) {\n    const intersection = PolyBool.intersect(hitobx1, hitbox2)\n    if (intersection && intersection.regions && intersection.regions.length > 0) {\n      return intersection\n    }\n\n    return undefined\n  },\n\n  getMinX: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let x\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (x === undefined || x > hitbox.regions[i][j][0]) {\n          x = hitbox.regions[i][j][0]\n        }\n      }\n    }\n\n    return x\n  },\n\n  getMaxX: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let x\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (x === undefined || x < hitbox.regions[i][j][0]) {\n          x = hitbox.regions[i][j][0]\n        }\n      }\n    }\n\n    return x\n  },\n\n  getMinY: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let y\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (y === undefined || y > hitbox.regions[i][j][1]) {\n          y = hitbox.regions[i][j][1]\n        }\n      }\n    }\n\n    return y\n  },\n\n  getMaxY: function (hitbox) {\n    if (!hitbox.regions) {\n      return undefined\n    }\n\n    let y\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (y === undefined || y < hitbox.regions[i][j][1]) {\n          y = hitbox.regions[i][j][1]\n        }\n      }\n    }\n\n    return y\n  },\n\n  draw: function (context, hitbox, offsetX, offsetY, color) {\n    if (offsetX === undefined) {\n      offsetX = 0\n    }\n    if (offsetY === undefined) {\n      offsetY = 0\n    }\n\n    context.save()\n    context.globalAlpha = 0.5\n    context.fillStyle = color\n\n    for (let i = 0; i < hitbox.regions.length; i++) {\n      context.beginPath()\n      for (let j = 0; j < hitbox.regions[i].length; j++) {\n        if (j === 0) {\n          context.moveTo(hitbox.regions[i][j][0] + offsetX, hitbox.regions[i][j][1] + offsetY)\n          continue\n        }\n        context.lineTo(hitbox.regions[i][j][0] + offsetX, hitbox.regions[i][j][1] + offsetY)\n      }\n      context.closePath()\n      context.fill()\n    }\n\n    context.restore()\n  },\n\n  getCurrentTiles: function (map, link) {\n    const currentTiles = []\n    for (const tile of map.tilesIterator()) {\n      if (\n        (tile.x <= link.x && link.x <= tile.x + tile.width && tile.y <= link.y && link.y <= tile.y + tile.height) || // link (x,y) is in tile\n                (tile.x <= link.x + link.width && link.x + link.width <= tile.x + tile.width && tile.y <= link.y && link.y <= tile.y + tile.height) || // link (x+w,y) is in tile\n                (tile.x <= link.x + link.width && link.x + link.width <= tile.x + tile.width && tile.y <= link.y + link.height && link.y + link.height <= tile.y + tile.height) || // link (x+w,y+h) is in tile\n                (tile.x <= link.x && link.x <= tile.x + tile.width && tile.y <= link.y + link.height && link.y + link.height <= tile.y + tile.height) // link (x,y+h) is in tile\n      ) {\n        currentTiles.push(tile)\n      }\n    }\n\n    return currentTiles\n  },\n\n  getLinkTile: function (map, link) {\n    const linkCenterX = link.x + link.width / 2\n    const linkCenterY = link.y + link.height / 2\n    const delta = 2\n    for (const tile of map.tilesIterator()) {\n      if (tile.x <= linkCenterX + delta && linkCenterX <= tile.x + tile.width - delta && tile.y <= linkCenterY + delta && linkCenterY <= tile.y + tile.height - delta) {\n        return tile\n      }\n    }\n\n    return undefined\n  },\n\n  getLinkFrontTile: function (map, link) {\n    const linkTile = link.tile ?? this.getLinkTile(map, link)\n    if (!linkTile) {\n      return undefined\n    }\n    if (link.direction === DIRECTION_WEST && linkTile.x >= link.x) {\n      return map.getTile(linkTile.column - 1, linkTile.line)\n    }\n    if (link.direction === DIRECTION_NORTH && linkTile.y >= link.y) {\n      return map.getTile(linkTile.column, linkTile.line - 1)\n    }\n    if (link.direction === DIRECTION_EAST && linkTile.x + linkTile.width <= link.x + link.width) {\n      return map.getTile(linkTile.column + 1, linkTile.line)\n    }\n    if (link.direction === DIRECTION_SOUTH && linkTile.y + linkTile.height <= link.y + link.height) {\n      return map.getTile(linkTile.column, linkTile.line + 1)\n    }\n    return linkTile\n  },\n\n  getReachedMapEdge: function (map, link) {\n    if (map.x >= link.x) {\n      return DIRECTION_WEST\n    }\n    if (map.y >= link.y) {\n      return DIRECTION_NORTH\n    }\n    if (map.x + map.width <= link.x) {\n      return DIRECTION_EAST\n    }\n    if (map.y + map.height <= link.y) {\n      return DIRECTION_SOUTH\n    }\n    return undefined\n  },\n\n  getHorizontalCenter: function (hitbox) {\n    const minX = this.getMinX(hitbox)\n    const maxX = this.getMaxX(hitbox)\n\n    return minX + (maxX - minX) / 2\n  }\n}\n\nexport default HitboxManager\n","'use strict'\n\nlet context\nlet gainNode\n\nexport default {\n  initContext () {\n    context = new AudioContext()\n    context.suspend()\n    context.createGain = context.createGain ? context.createGain : context.createGainNode\n    gainNode = context.createGain()\n    gainNode.connect(context.destination)\n  },\n  initEvents (playSoundsCheckbox, volumeRangeInput) {\n    const self = this\n    volumeRangeInput.addEventListener('change', (e) => {\n      e.preventDefault()\n      self.updateVolume(parseInt(e.target.value) / parseInt(e.target.max))\n    })\n    volumeRangeInput.value = 50\n    volumeRangeInput.dispatchEvent(new Event('change'))\n\n    playSoundsCheckbox.addEventListener('change', (e) => {\n      if (e.target.checked) {\n        self.enable()\n      } else {\n        self.disable()\n      }\n    })\n    playSoundsCheckbox.checked = false\n    playSoundsCheckbox.dispatchEvent(new Event('change'))\n  },\n  getContext () {\n    return context\n  },\n  getGainNode () {\n    return gainNode\n  },\n  updateVolume (value) {\n    gainNode.gain.setValueAtTime(value, context.currentTime)\n  },\n  enable () {\n    context.resume()\n  },\n  disable () {\n    context.suspend()\n  },\n  play (sound) {\n    sound.play()\n    const duration = sound.duration\n    if (duration) {\n      setTimeout(() => this.stop(sound), duration * 1000)\n    }\n  },\n  stop (sound) {\n    sound.stop()\n  }\n}\n","'use strict'\n\nimport resource from '../resource'\nimport { SPRITE_TEXT_PREFIX, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT } from '../constant'\n\nexport default {\n  draw: function (context, text, color, x, y, width, height, alignement, maxLength) {\n    const maxNbLines = Math.floor(height / SPRITE_TEXT_HEIGHT)\n    const lines = this.splitTextIntoLines(text, width)\n    maxLength = maxLength === undefined ? text.length : maxLength\n    maxLength -= (lines.length - 1)\n    let nbDisplayedCharacters = 0\n    for (let i = 0; i < lines.length; i++) {\n      const alignedLine = this.alignLine(lines[i], width, alignement)\n      const displayedLine = alignedLine.substring(0, maxLength + this.getSpacesLeft(lines[i], width) - nbDisplayedCharacters)\n      nbDisplayedCharacters += alignedLine.length\n      this.drawLine(context, displayedLine, color, x, y)\n      y += SPRITE_TEXT_HEIGHT\n      if ((i + 1) >= maxNbLines) {\n        break\n      }\n    }\n  },\n\n  drawLine: function (context, text, color, x, y) {\n    for (const char of text) {\n      const sprite = resource.getSprite(`${SPRITE_TEXT_PREFIX}_${color}_${char.toLowerCase()}`)\n      if (sprite) {\n        sprite.draw(context, x, y, SPRITE_TEXT_WIDTH, SPRITE_TEXT_HEIGHT)\n      }\n      x += SPRITE_TEXT_WIDTH\n    }\n  },\n\n  splitTextIntoLines: function (text, maxWidth) {\n    const textPerLine = []\n    const nbLettersPerLine = Math.floor(maxWidth / SPRITE_TEXT_WIDTH)\n    let currentLine = ''\n    const parts = text.split(' ')\n    for (const part of parts) {\n      let currentNbLetters = currentLine.length\n      if (currentNbLetters > 0) {\n        currentNbLetters += 1 // Count space\n      }\n      if (currentNbLetters + part.length <= nbLettersPerLine) {\n        currentLine += currentNbLetters > 0 ? ` ${part}` : `${part}`\n      } else {\n        textPerLine.push(currentLine)\n        currentLine = `${part}`\n      }\n    }\n    if (currentLine.length > 0) {\n      textPerLine.push(currentLine)\n    }\n    return textPerLine\n  },\n\n  getSpacesLeft: function (text, maxWidth) {\n    const nbLettersPerLine = Math.floor(maxWidth / SPRITE_TEXT_WIDTH)\n    return nbLettersPerLine - text.length\n  },\n\n  alignLine: function (text, maxWidth, alignement = 'middle') {\n    const spacesLeft = this.getSpacesLeft(text, maxWidth)\n    let nbStartSpaces\n    let nbEndSpaces\n    if (alignement === 'middle') {\n      nbStartSpaces = Math.ceil(spacesLeft / 2)\n      nbEndSpaces = Math.floor(spacesLeft / 2)\n    }\n    if (alignement === 'right') {\n      nbStartSpaces = spacesLeft\n      nbEndSpaces = 0\n    }\n    if (alignement === 'left') {\n      nbStartSpaces = 0\n      nbEndSpaces = spacesLeft\n    }\n    text = text.padStart(text.length + nbStartSpaces, ' ')\n    text = text.padEnd(text.length + nbEndSpaces, ' ')\n    return text\n  }\n}\n","'use strict'\n\nimport { TILES_PER_LINE, TILES_PER_COLUMN, TILE_WIDTH, TILE_HEIGHT, MAP_TYPE_WORLD, MAP_TYPE_CAVERNS, MAP_TYPE_LEVEL1 } from '../constant'\nimport { Map } from '../model/map'\nimport { Tile } from '../model/tile'\nimport resource from '../resource'\nimport HitboxManager from './hitbox-manager'\nimport { TileTransition } from '../model/tile-transition'\nimport { Extra } from '../model/extra'\nimport { Character } from '../model/character'\nimport { Item } from '../model/item'\n\nexport default {\n  world: [],\n  caverns: [],\n  level1: [],\n  level2: [],\n  level3: [],\n  level4: [],\n  level5: [],\n  level6: [],\n  level7: [],\n  level8: [],\n  level9: [],\n\n  createMaps (data) {\n    this.world = this.createMapsForType('world', data.world)\n    this.caverns = this.createMapsForType('caverns', data.caverns)\n    this.level1 = this.createMapsForType('level1', data.level1)\n  },\n\n  createMapsForType (type, mapsData) {\n    const maps = []\n    for (let i = 0; i < mapsData.length; i++) {\n      const mapData = mapsData[i]\n      const column = mapData.x\n      const line = mapData.y\n      const width = TILES_PER_LINE * TILE_WIDTH\n      const height = TILES_PER_COLUMN * TILE_HEIGHT\n      const x = column * width\n      const y = line * height\n      const tiles = this.createMapTiles(mapData.tiles, x, y)\n      if (!maps[column]) {\n        maps[column] = []\n      }\n      const characters = []\n      for (const characterData of mapData.characters) {\n        const characterColumn = characterData.x\n        const characterLine = characterData.y\n        const characterWidth = TILE_WIDTH\n        const characterHeight = TILE_HEIGHT\n        const characterX = x + characterColumn * characterWidth\n        const characterY = y + characterLine * characterHeight\n        const characterSprite = resource.getSprite(characterData.sprite)\n        const characterName = characterData.sprite.replace('misc_', '')\n        const characterText = characterData.text\n        characters.push(new Character(characterName, characterColumn, characterLine, characterX, characterY, characterWidth, characterHeight, characterSprite, characterText))\n      }\n      const items = []\n      for (const itemData of mapData.items) {\n        const itemColumn = itemData.x\n        const itemLine = itemData.y\n        const itemWidth = TILE_WIDTH\n        const itemHeight = TILE_HEIGHT\n        const itemX = x + itemColumn * itemWidth\n        const itemY = y + itemLine * itemHeight\n        const itemSprite = resource.getSprite(itemData.sprite)\n        const itemName = itemData.sprite.replace('item_', '')\n        const itemPrice = itemData.price\n        items.push(new Item(itemName, itemColumn, itemLine, itemX, itemY, itemWidth, itemHeight, itemSprite, itemPrice))\n      }\n      const extras = []\n      for (const extraData of mapData.extras) {\n        const extraColumn = extraData.x\n        const extraLine = extraData.y\n        const extraWidth = TILE_WIDTH\n        const extraHeight = TILE_HEIGHT\n        const extraX = x + extraColumn * extraWidth\n        const extraY = y + extraLine * extraHeight\n        const extraSprite = resource.getSprite(extraData.sprite)\n        extras.push(new Extra(extraColumn, extraLine, extraX, extraY, extraWidth, extraHeight, extraSprite))\n      }\n      maps[column][line] = new Map(column, line, x, y, width, height, type, tiles, characters, items, extras)\n    }\n\n    return maps\n  },\n\n  createMapTiles (tilesData, offsetX, offsetY) {\n    const tiles = []\n    for (let i = 0; i < tilesData.length; i++) {\n      const tileData = tilesData[i]\n      const column = tileData.x\n      const line = tileData.y\n      const width = TILE_WIDTH\n      const height = TILE_HEIGHT\n      const x = column * width + offsetX\n      const y = line * height + offsetY\n      const sprite = resource.getSprite(tileData.sprite)\n      const block = HitboxManager.getHitboxFromString(x, y, width, height, tileData.hitbox)\n      const transition = new TileTransition(tileData.transition?.start, tileData.transition?.targetMapType, tileData.transition?.targetMapColumn, tileData.transition?.targetMapLine, tileData.transition?.targetTileColumn, tileData.transition?.targetTileLine, tileData.transition?.end)\n      if (!tiles[column]) {\n        tiles[column] = []\n      }\n      tiles[column][line] = new Tile(column, line, x, y, width, height, tileData.hitbox, sprite, block, undefined, transition, !!tileData.start)\n    }\n\n    return tiles\n  },\n\n  getMap (type, column, line) {\n    return this[type] && this[type][column] && this[type][column][line] ? this[type][column][line] : undefined\n  },\n\n  findStartingPosition () {\n    for (const map of this.mapsIterator(MAP_TYPE_WORLD)) {\n      for (const tile of map.tilesIterator()) {\n        if (tile.start) {\n          return {\n            map,\n            tileColumn: tile.column,\n            tileLine: tile.line\n          }\n        }\n      }\n    }\n  },\n\n  * mapsIterator (type) {\n    for (let column = 0; column < this[type].length; column++) {\n      for (let line = 0; line < this[type][column].length; line++) {\n        yield this[type][column][line]\n      }\n    }\n  },\n\n  exportGame () {\n    const world = this.exportMaps(MAP_TYPE_WORLD)\n    const caverns = this.exportMaps(MAP_TYPE_CAVERNS)\n    const level1 = this.exportMaps(MAP_TYPE_LEVEL1)\n\n    return { world, caverns, level1 }\n  },\n\n  exportMaps (type) {\n    const mapsData = []\n    for (const map of this.mapsIterator(type)) {\n      const mapData = {\n        x: map.column,\n        y: map.line,\n        tiles: [],\n        characters: [],\n        items: [],\n        extras: []\n      }\n      for (const character of map.characters) {\n        mapData.characters.push({\n          x: character.column,\n          y: character.line,\n          sprite: character.sprite.name,\n          text: character.text\n        })\n      }\n      for (const item of map.items) {\n        mapData.items.push({\n          x: item.column,\n          y: item.line,\n          sprite: item.sprite.name,\n          price: item.price\n        })\n      }\n      for (const extra of map.extras) {\n        mapData.extras.push({\n          x: extra.column,\n          y: extra.line,\n          sprite: extra.sprite.name\n        })\n      }\n      for (const tile of map.tilesIterator()) {\n        const tileData = {\n          x: tile.column,\n          y: tile.line,\n          hitbox: tile.hitbox,\n          sprite: tile.sprite.name\n        }\n        if (!tile.tileTransition.isEmpty()) {\n          tileData.transition = {\n            start: tile.tileTransition.start,\n            targetMapType: tile.tileTransition.targetMapType,\n            targetMapColumn: tile.tileTransition.targetMapColumn,\n            targetMapLine: tile.tileTransition.targetMapLine,\n            targetTileColumn: tile.tileTransition.targetTileColumn,\n            targetTileLine: tile.tileTransition.targetTileLine,\n            end: tile.tileTransition.end\n          }\n        }\n        if (tile.start) {\n          tileData.start = true\n        }\n        mapData.tiles.push(tileData)\n      }\n      mapsData.push(mapData)\n    }\n    return mapsData\n  }\n}\n","'use strict'\n\nconst COMPRESSION_GZIP = 'gzip'\n\nconst compression = {\n  compress: async function (str) {\n    const stream = new Blob([str]).stream()\n    const compressedStream = stream.pipeThrough(new CompressionStream(COMPRESSION_GZIP))\n    const chunks = []\n    for await (const chunk of compressedStream) {\n      chunks.push(chunk)\n    }\n    return await this.concatUint8Arrays(chunks)\n  },\n  decompress: async function (compressedBytes) {\n    const stream = new Blob([compressedBytes]).stream()\n    const decompressedStream = stream.pipeThrough(new DecompressionStream(COMPRESSION_GZIP))\n    const chunks = []\n    for await (const chunk of decompressedStream) {\n      chunks.push(chunk)\n    }\n    const stringBytes = await this.concatUint8Arrays(chunks)\n    return new TextDecoder().decode(stringBytes)\n  },\n  concatUint8Arrays: async function (uint8arrays) {\n    const blob = new Blob(uint8arrays)\n    const buffer = await blob.arrayBuffer()\n    return new Uint8Array(buffer)\n  }\n}\n\nexport default compression\n","'use strict'\r\n\r\nimport compression from './compression'\r\nimport { FILE_TYPE_JSON, FILE_TYPE_LOZ, FILE_TYPE_MP3, FILE_TYPE_PNG, FILE_TYPE_WEBP } from '../constant'\r\n\r\nexport default {\r\n  openFile: async function (type) {\r\n    const self = this\r\n    return new Promise((resolve, reject) => {\r\n      const input = document.createElement('input')\r\n      input.type = 'file'\r\n      if (type) {\r\n        input.accept = `.${type}`\r\n      }\r\n      input.style.display = 'none'\r\n      input.addEventListener('cancel', () => {\r\n        input.remove()\r\n      })\r\n      input.addEventListener('change', async () => {\r\n        const files = input.files\r\n        input.remove()\r\n        if (files.length === 1) {\r\n          resolve(await self.readFile(files[0], type))\r\n        } else {\r\n          reject()\r\n        }\r\n      })\r\n      document.body.appendChild(input)\r\n      input.click()\r\n    })\r\n  },\r\n  readFile: async function (file, type) {\r\n    if (!type) {\r\n      type = this.guessTypeFromExtension(file.name)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader()\r\n      let img\r\n      let blob\r\n      fileReader.onload = async (e) => {\r\n        let data = e.target.result\r\n        switch (type) {\r\n          case FILE_TYPE_LOZ:\r\n            data = new Uint8Array(data)\r\n            data = await compression.decompress(data)\r\n            try {\r\n              data = JSON.parse(data)\r\n            } catch (e) {}\r\n            resolve(data)\r\n            break\r\n          case FILE_TYPE_JSON:\r\n            resolve(JSON.parse(data))\r\n            break\r\n          case FILE_TYPE_PNG:\r\n            img = await fetch(data)\r\n            blob = await img.blob()\r\n            resolve(createImageBitmap(blob))\r\n            break\r\n          default:\r\n            reject(new Error(`Unhandeld type ${type}`))\r\n        }\r\n      }\r\n      switch (type) {\r\n        case FILE_TYPE_LOZ:\r\n          fileReader.readAsArrayBuffer(file)\r\n          break\r\n        case FILE_TYPE_PNG:\r\n          fileReader.readAsDataURL(file)\r\n          break\r\n        case FILE_TYPE_JSON:\r\n        default:\r\n          fileReader.readAsText(file)\r\n      }\r\n    })\r\n  },\r\n  dowloadFile: async function (data, type) {\r\n    const filename = prompt('Filename')\r\n    if (!filename) {\r\n      return\r\n    }\r\n    switch (type) {\r\n      case FILE_TYPE_LOZ:\r\n        data = await compression.compress(data)\r\n        break\r\n      case FILE_TYPE_JSON:\r\n      default:\r\n                // nothing\r\n    }\r\n    const a = document.createElement('a')\r\n    a.style.display = 'none'\r\n    a.href = URL.createObjectURL(new Blob([data]))\r\n    a.download = `${filename.toLowerCase()}.${type}`\r\n    a.textContent = 'Download'\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  },\r\n  fetchRemoteFiles: async function (/* Each argument will be loaded */) {\r\n    let paths = Array.prototype.slice.call(arguments)\r\n    if (!Array.isArray(paths)) {\r\n      paths = [paths]\r\n    }\r\n    if (paths.length === 1 && Array.isArray(paths[0])) {\r\n      paths = paths[0]\r\n    }\r\n\r\n    const promises = []\r\n    for (let i = 0; i < paths.length; i++) {\r\n      promises.push(this.fetchRemoteFile(paths[i]))\r\n    }\r\n\r\n    return Promise.all(promises)\r\n  },\r\n  fetchRemoteFile: async function (path) {\r\n    const extension = path.split('.').pop()\r\n    switch (extension) {\r\n      case FILE_TYPE_JSON:\r\n        return this.fetchJsonFile(path)\r\n      case FILE_TYPE_LOZ:\r\n        return this.fetchLozFile(path)\r\n      case FILE_TYPE_MP3:\r\n        return this.fetchAudioFile(path)\r\n      case FILE_TYPE_PNG:\r\n      case FILE_TYPE_WEBP:\r\n        return this.fetchImageFile(path)\r\n      default:\r\n        throw new Error(`IO: extension not allowed for file ${path}`)\r\n    }\r\n  },\r\n  fetchLozFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.arrayBuffer()\r\n    data = new Uint8Array(data)\r\n    data = await compression.decompress(data)\r\n    try {\r\n      data = JSON.parse(data)\r\n    } catch (e) {}\r\n    return data\r\n  },\r\n  fetchJsonFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.json()\r\n    return data\r\n  },\r\n  fetchImageFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.blob()\r\n    data = createImageBitmap(data)\r\n    return data\r\n  },\r\n  fetchAudioFile: async (path) => {\r\n    let data = await fetch(path)\r\n    data = await data.arrayBuffer()\r\n    return data\r\n  },\r\n  guessTypeFromExtension: (filename) => {\r\n    return filename.split('.').at(-1)\r\n  }\r\n}\r\n","/*\n * @copyright 2016 Sean Connelly (@voidqk), http://syntheti.cc\n * @license MIT\n * @preserve Project Home: https://github.com/voidqk/polybooljs\n */\n\nvar BuildLog = require('./lib/build-log');\nvar Epsilon = require('./lib/epsilon');\nvar Intersecter = require('./lib/intersecter');\nvar SegmentChainer = require('./lib/segment-chainer');\nvar SegmentSelector = require('./lib/segment-selector');\nvar GeoJSON = require('./lib/geojson');\n\nvar buildLog = false;\nvar epsilon = Epsilon();\n\nvar PolyBool;\nPolyBool = {\n\t// getter/setter for buildLog\n\tbuildLog: function(bl){\n\t\tif (bl === true)\n\t\t\tbuildLog = BuildLog();\n\t\telse if (bl === false)\n\t\t\tbuildLog = false;\n\t\treturn buildLog === false ? false : buildLog.list;\n\t},\n\t// getter/setter for epsilon\n\tepsilon: function(v){\n\t\treturn epsilon.epsilon(v);\n\t},\n\n\t// core API\n\tsegments: function(poly){\n\t\tvar i = Intersecter(true, epsilon, buildLog);\n\t\tpoly.regions.forEach(i.addRegion);\n\t\treturn {\n\t\t\tsegments: i.calculate(poly.inverted),\n\t\t\tinverted: poly.inverted\n\t\t};\n\t},\n\tcombine: function(segments1, segments2){\n\t\tvar i3 = Intersecter(false, epsilon, buildLog);\n\t\treturn {\n\t\t\tcombined: i3.calculate(\n\t\t\t\tsegments1.segments, segments1.inverted,\n\t\t\t\tsegments2.segments, segments2.inverted\n\t\t\t),\n\t\t\tinverted1: segments1.inverted,\n\t\t\tinverted2: segments2.inverted\n\t\t};\n\t},\n\tselectUnion: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.union(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 || combined.inverted2\n\t\t}\n\t},\n\tselectIntersect: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.intersect(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectDifference: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.difference(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && !combined.inverted2\n\t\t}\n\t},\n\tselectDifferenceRev: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.differenceRev(combined.combined, buildLog),\n\t\t\tinverted: !combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectXor: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.xor(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 !== combined.inverted2\n\t\t}\n\t},\n\tpolygon: function(segments){\n\t\treturn {\n\t\t\tregions: SegmentChainer(segments.segments, epsilon, buildLog),\n\t\t\tinverted: segments.inverted\n\t\t};\n\t},\n\n\t// GeoJSON converters\n\tpolygonFromGeoJSON: function(geojson){\n\t\treturn GeoJSON.toPolygon(PolyBool, geojson);\n\t},\n\tpolygonToGeoJSON: function(poly){\n\t\treturn GeoJSON.fromPolygon(PolyBool, epsilon, poly);\n\t},\n\n\t// helper functions for common operations\n\tunion: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectUnion);\n\t},\n\tintersect: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectIntersect);\n\t},\n\tdifference: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifference);\n\t},\n\tdifferenceRev: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifferenceRev);\n\t},\n\txor: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectXor);\n\t}\n};\n\nfunction operate(poly1, poly2, selector){\n\tvar seg1 = PolyBool.segments(poly1);\n\tvar seg2 = PolyBool.segments(poly2);\n\tvar comb = PolyBool.combine(seg1, seg2);\n\tvar seg3 = selector(comb);\n\treturn PolyBool.polygon(seg3);\n}\n\nif (typeof window === 'object')\n\twindow.PolyBool = PolyBool;\n\nmodule.exports = PolyBool;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// used strictly for logging the processing of the algorithm... only useful if you intend on\n// looking under the covers (for pretty UI's or debugging)\n//\n\nfunction BuildLog(){\n\tvar my;\n\tvar nextSegmentId = 0;\n\tvar curVert = false;\n\n\tfunction push(type, data){\n\t\tmy.list.push({\n\t\t\ttype: type,\n\t\t\tdata: data ? JSON.parse(JSON.stringify(data)) : void 0\n\t\t});\n\t\treturn my;\n\t}\n\n\tmy = {\n\t\tlist: [],\n\t\tsegmentId: function(){\n\t\t\treturn nextSegmentId++;\n\t\t},\n\t\tcheckIntersection: function(seg1, seg2){\n\t\t\treturn push('check', { seg1: seg1, seg2: seg2 });\n\t\t},\n\t\tsegmentChop: function(seg, end){\n\t\t\tpush('div_seg', { seg: seg, pt: end });\n\t\t\treturn push('chop', { seg: seg, pt: end });\n\t\t},\n\t\tstatusRemove: function(seg){\n\t\t\treturn push('pop_seg', { seg: seg });\n\t\t},\n\t\tsegmentUpdate: function(seg){\n\t\t\treturn push('seg_update', { seg: seg });\n\t\t},\n\t\tsegmentNew: function(seg, primary){\n\t\t\treturn push('new_seg', { seg: seg, primary: primary });\n\t\t},\n\t\tsegmentRemove: function(seg){\n\t\t\treturn push('rem_seg', { seg: seg });\n\t\t},\n\t\ttempStatus: function(seg, above, below){\n\t\t\treturn push('temp_status', { seg: seg, above: above, below: below });\n\t\t},\n\t\trewind: function(seg){\n\t\t\treturn push('rewind', { seg: seg });\n\t\t},\n\t\tstatus: function(seg, above, below){\n\t\t\treturn push('status', { seg: seg, above: above, below: below });\n\t\t},\n\t\tvert: function(x){\n\t\t\tif (x === curVert)\n\t\t\t\treturn my;\n\t\t\tcurVert = x;\n\t\t\treturn push('vert', { x: x });\n\t\t},\n\t\tlog: function(data){\n\t\t\tif (typeof data !== 'string')\n\t\t\t\tdata = JSON.stringify(data, false, '  ');\n\t\t\treturn push('log', { txt: data });\n\t\t},\n\t\treset: function(){\n\t\t\treturn push('reset');\n\t\t},\n\t\tselected: function(segs){\n\t\t\treturn push('selected', { segs: segs });\n\t\t},\n\t\tchainStart: function(seg){\n\t\t\treturn push('chain_start', { seg: seg });\n\t\t},\n\t\tchainRemoveHead: function(index, pt){\n\t\t\treturn push('chain_rem_head', { index: index, pt: pt });\n\t\t},\n\t\tchainRemoveTail: function(index, pt){\n\t\t\treturn push('chain_rem_tail', { index: index, pt: pt });\n\t\t},\n\t\tchainNew: function(pt1, pt2){\n\t\t\treturn push('chain_new', { pt1: pt1, pt2: pt2 });\n\t\t},\n\t\tchainMatch: function(index){\n\t\t\treturn push('chain_match', { index: index });\n\t\t},\n\t\tchainClose: function(index){\n\t\t\treturn push('chain_close', { index: index });\n\t\t},\n\t\tchainAddHead: function(index, pt){\n\t\t\treturn push('chain_add_head', { index: index, pt: pt });\n\t\t},\n\t\tchainAddTail: function(index, pt){\n\t\t\treturn push('chain_add_tail', { index: index, pt: pt, });\n\t\t},\n\t\tchainConnect: function(index1, index2){\n\t\t\treturn push('chain_con', { index1: index1, index2: index2 });\n\t\t},\n\t\tchainReverse: function(index){\n\t\t\treturn push('chain_rev', { index: index });\n\t\t},\n\t\tchainJoin: function(index1, index2){\n\t\t\treturn push('chain_join', { index1: index1, index2: index2 });\n\t\t},\n\t\tdone: function(){\n\t\t\treturn push('done');\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = BuildLog;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// provides the raw computation functions that takes epsilon into account\n//\n// zero is defined to be between (-epsilon, epsilon) exclusive\n//\n\nfunction Epsilon(eps){\n\tif (typeof eps !== 'number')\n\t\teps = 0.0000000001; // sane default? sure why not\n\tvar my = {\n\t\tepsilon: function(v){\n\t\t\tif (typeof v === 'number')\n\t\t\t\teps = v;\n\t\t\treturn eps;\n\t\t},\n\t\tpointAboveOrOnLine: function(pt, left, right){\n\t\t\tvar Ax = left[0];\n\t\t\tvar Ay = left[1];\n\t\t\tvar Bx = right[0];\n\t\t\tvar By = right[1];\n\t\t\tvar Cx = pt[0];\n\t\t\tvar Cy = pt[1];\n\t\t\treturn (Bx - Ax) * (Cy - Ay) - (By - Ay) * (Cx - Ax) >= -eps;\n\t\t},\n\t\tpointBetween: function(p, left, right){\n\t\t\t// p must be collinear with left->right\n\t\t\t// returns false if p == left, p == right, or left == right\n\t\t\tvar d_py_ly = p[1] - left[1];\n\t\t\tvar d_rx_lx = right[0] - left[0];\n\t\t\tvar d_px_lx = p[0] - left[0];\n\t\t\tvar d_ry_ly = right[1] - left[1];\n\n\t\t\tvar dot = d_px_lx * d_rx_lx + d_py_ly * d_ry_ly;\n\t\t\t// if `dot` is 0, then `p` == `left` or `left` == `right` (reject)\n\t\t\t// if `dot` is less than 0, then `p` is to the left of `left` (reject)\n\t\t\tif (dot < eps)\n\t\t\t\treturn false;\n\n\t\t\tvar sqlen = d_rx_lx * d_rx_lx + d_ry_ly * d_ry_ly;\n\t\t\t// if `dot` > `sqlen`, then `p` is to the right of `right` (reject)\n\t\t\t// therefore, if `dot - sqlen` is greater than 0, then `p` is to the right of `right` (reject)\n\t\t\tif (dot - sqlen > -eps)\n\t\t\t\treturn false;\n\n\t\t\treturn true;\n\t\t},\n\t\tpointsSameX: function(p1, p2){\n\t\t\treturn Math.abs(p1[0] - p2[0]) < eps;\n\t\t},\n\t\tpointsSameY: function(p1, p2){\n\t\t\treturn Math.abs(p1[1] - p2[1]) < eps;\n\t\t},\n\t\tpointsSame: function(p1, p2){\n\t\t\treturn my.pointsSameX(p1, p2) && my.pointsSameY(p1, p2);\n\t\t},\n\t\tpointsCompare: function(p1, p2){\n\t\t\t// returns -1 if p1 is smaller, 1 if p2 is smaller, 0 if equal\n\t\t\tif (my.pointsSameX(p1, p2))\n\t\t\t\treturn my.pointsSameY(p1, p2) ? 0 : (p1[1] < p2[1] ? -1 : 1);\n\t\t\treturn p1[0] < p2[0] ? -1 : 1;\n\t\t},\n\t\tpointsCollinear: function(pt1, pt2, pt3){\n\t\t\t// does pt1->pt2->pt3 make a straight line?\n\t\t\t// essentially this is just checking to see if the slope(pt1->pt2) === slope(pt2->pt3)\n\t\t\t// if slopes are equal, then they must be collinear, because they share pt2\n\t\t\tvar dx1 = pt1[0] - pt2[0];\n\t\t\tvar dy1 = pt1[1] - pt2[1];\n\t\t\tvar dx2 = pt2[0] - pt3[0];\n\t\t\tvar dy2 = pt2[1] - pt3[1];\n\t\t\treturn Math.abs(dx1 * dy2 - dx2 * dy1) < eps;\n\t\t},\n\t\tlinesIntersect: function(a0, a1, b0, b1){\n\t\t\t// returns false if the lines are coincident (e.g., parallel or on top of each other)\n\t\t\t//\n\t\t\t// returns an object if the lines intersect:\n\t\t\t//   {\n\t\t\t//     pt: [x, y],    where the intersection point is at\n\t\t\t//     alongA: where intersection point is along A,\n\t\t\t//     alongB: where intersection point is along B\n\t\t\t//   }\n\t\t\t//\n\t\t\t//  alongA and alongB will each be one of: -2, -1, 0, 1, 2\n\t\t\t//\n\t\t\t//  with the following meaning:\n\t\t\t//\n\t\t\t//    -2   intersection point is before segment's first point\n\t\t\t//    -1   intersection point is directly on segment's first point\n\t\t\t//     0   intersection point is between segment's first and second points (exclusive)\n\t\t\t//     1   intersection point is directly on segment's second point\n\t\t\t//     2   intersection point is after segment's second point\n\t\t\tvar adx = a1[0] - a0[0];\n\t\t\tvar ady = a1[1] - a0[1];\n\t\t\tvar bdx = b1[0] - b0[0];\n\t\t\tvar bdy = b1[1] - b0[1];\n\n\t\t\tvar axb = adx * bdy - ady * bdx;\n\t\t\tif (Math.abs(axb) < eps)\n\t\t\t\treturn false; // lines are coincident\n\n\t\t\tvar dx = a0[0] - b0[0];\n\t\t\tvar dy = a0[1] - b0[1];\n\n\t\t\tvar A = (bdx * dy - bdy * dx) / axb;\n\t\t\tvar B = (adx * dy - ady * dx) / axb;\n\n\t\t\tvar ret = {\n\t\t\t\talongA: 0,\n\t\t\t\talongB: 0,\n\t\t\t\tpt: [\n\t\t\t\t\ta0[0] + A * adx,\n\t\t\t\t\ta0[1] + A * ady\n\t\t\t\t]\n\t\t\t};\n\n\t\t\t// categorize where intersection point is along A and B\n\n\t\t\tif (A <= -eps)\n\t\t\t\tret.alongA = -2;\n\t\t\telse if (A < eps)\n\t\t\t\tret.alongA = -1;\n\t\t\telse if (A - 1 <= -eps)\n\t\t\t\tret.alongA = 0;\n\t\t\telse if (A - 1 < eps)\n\t\t\t\tret.alongA = 1;\n\t\t\telse\n\t\t\t\tret.alongA = 2;\n\n\t\t\tif (B <= -eps)\n\t\t\t\tret.alongB = -2;\n\t\t\telse if (B < eps)\n\t\t\t\tret.alongB = -1;\n\t\t\telse if (B - 1 <= -eps)\n\t\t\t\tret.alongB = 0;\n\t\t\telse if (B - 1 < eps)\n\t\t\t\tret.alongB = 1;\n\t\t\telse\n\t\t\t\tret.alongB = 2;\n\n\t\t\treturn ret;\n\t\t},\n\t\tpointInsideRegion: function(pt, region){\n\t\t\tvar x = pt[0];\n\t\t\tvar y = pt[1];\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar inside = false;\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\n\t\t\t\t// if y is between curr_y and last_y, and\n\t\t\t\t// x is to the right of the boundary created by the line\n\t\t\t\tif ((curr_y - y > eps) != (last_y - y > eps) &&\n\t\t\t\t\t(last_x - curr_x) * (y - curr_y) / (last_y - curr_y) + curr_x - x > eps)\n\t\t\t\t\tinside = !inside\n\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\treturn inside;\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = Epsilon;\n","// (c) Copyright 2017, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// convert between PolyBool polygon format and GeoJSON formats (Polygon and MultiPolygon)\n//\n\nvar GeoJSON = {\n\t// convert a GeoJSON object to a PolyBool polygon\n\ttoPolygon: function(PolyBool, geojson){\n\n\t\t// converts list of LineString's to segments\n\t\tfunction GeoPoly(coords){\n\t\t\t// check for empty coords\n\t\t\tif (coords.length <= 0)\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [] });\n\n\t\t\t// convert LineString to segments\n\t\t\tfunction LineString(ls){\n\t\t\t\t// remove tail which should be the same as head\n\t\t\t\tvar reg = ls.slice(0, ls.length - 1);\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [reg] });\n\t\t\t}\n\n\t\t\t// the first LineString is considered the outside\n\t\t\tvar out = LineString(coords[0]);\n\n\t\t\t// the rest of the LineStrings are considered interior holes, so subtract them from the\n\t\t\t// current result\n\t\t\tfor (var i = 1; i < coords.length; i++)\n\t\t\t\tout = PolyBool.selectDifference(PolyBool.combine(out, LineString(coords[i])));\n\n\t\t\treturn out;\n\t\t}\n\n\t\tif (geojson.type === 'Polygon'){\n\t\t\t// single polygon, so just convert it and we're done\n\t\t\treturn PolyBool.polygon(GeoPoly(geojson.coordinates));\n\t\t}\n\t\telse if (geojson.type === 'MultiPolygon'){\n\t\t\t// multiple polygons, so union all the polygons together\n\t\t\tvar out = PolyBool.segments({ inverted: false, regions: [] });\n\t\t\tfor (var i = 0; i < geojson.coordinates.length; i++)\n\t\t\t\tout = PolyBool.selectUnion(PolyBool.combine(out, GeoPoly(geojson.coordinates[i])));\n\t\t\treturn PolyBool.polygon(out);\n\t\t}\n\t\tthrow new Error('PolyBool: Cannot convert GeoJSON object to PolyBool polygon');\n\t},\n\n\t// convert a PolyBool polygon to a GeoJSON object\n\tfromPolygon: function(PolyBool, eps, poly){\n\t\t// make sure out polygon is clean\n\t\tpoly = PolyBool.polygon(PolyBool.segments(poly));\n\n\t\t// test if r1 is inside r2\n\t\tfunction regionInsideRegion(r1, r2){\n\t\t\t// we're guaranteed no lines intersect (because the polygon is clean), but a vertex\n\t\t\t// could be on the edge -- so we just average pt[0] and pt[1] to produce a point on the\n\t\t\t// edge of the first line, which cannot be on an edge\n\t\t\treturn eps.pointInsideRegion([\n\t\t\t\t(r1[0][0] + r1[1][0]) * 0.5,\n\t\t\t\t(r1[0][1] + r1[1][1]) * 0.5\n\t\t\t], r2);\n\t\t}\n\n\t\t// calculate inside heirarchy\n\t\t//\n\t\t//  _____________________   _______    roots -> A       -> F\n\t\t// |          A          | |   F   |            |          |\n\t\t// |  _______   _______  | |  ___  |            +-- B      +-- G\n\t\t// | |   B   | |   C   | | | |   | |            |   |\n\t\t// | |  ___  | |  ___  | | | |   | |            |   +-- D\n\t\t// | | | D | | | | E | | | | | G | |            |\n\t\t// | | |___| | | |___| | | | |   | |            +-- C\n\t\t// | |_______| |_______| | | |___| |                |\n\t\t// |_____________________| |_______|                +-- E\n\n\t\tfunction newNode(region){\n\t\t\treturn {\n\t\t\t\tregion: region,\n\t\t\t\tchildren: []\n\t\t\t};\n\t\t}\n\n\t\tvar roots = newNode(null);\n\n\t\tfunction addChild(root, region){\n\t\t\t// first check if we're inside any children\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(region, child.region)){\n\t\t\t\t\t// we are, so insert inside them instead\n\t\t\t\t\taddChild(child, region);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// not inside any children, so check to see if any children are inside us\n\t\t\tvar node = newNode(region);\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(child.region, region)){\n\t\t\t\t\t// oops... move the child beneath us, and remove them from root\n\t\t\t\t\tnode.children.push(child);\n\t\t\t\t\troot.children.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// now we can add ourselves\n\t\t\troot.children.push(node);\n\t\t}\n\n\t\t// add all regions to the root\n\t\tfor (var i = 0; i < poly.regions.length; i++){\n\t\t\tvar region = poly.regions[i];\n\t\t\tif (region.length < 3) // regions must have at least 3 points (sanity check)\n\t\t\t\tcontinue;\n\t\t\taddChild(roots, region);\n\t\t}\n\n\t\t// with our heirarchy, we can distinguish between exterior borders, and interior holes\n\t\t// the root nodes are exterior, children are interior, children's children are exterior,\n\t\t// children's children's children are interior, etc\n\n\t\t// while we're at it, exteriors are counter-clockwise, and interiors are clockwise\n\n\t\tfunction forceWinding(region, clockwise){\n\t\t\t// first, see if we're clockwise or counter-clockwise\n\t\t\t// https://en.wikipedia.org/wiki/Shoelace_formula\n\t\t\tvar winding = 0;\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar copy = [];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\t\t\t\tcopy.push([curr_x, curr_y]); // create a copy while we're at it\n\t\t\t\twinding += curr_y * last_x - curr_x * last_y;\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\t// this assumes Cartesian coordinates (Y is positive going up)\n\t\t\tvar isclockwise = winding < 0;\n\t\t\tif (isclockwise !== clockwise)\n\t\t\t\tcopy.reverse();\n\t\t\t// while we're here, the last point must be the first point...\n\t\t\tcopy.push([copy[0][0], copy[0][1]]);\n\t\t\treturn copy;\n\t\t}\n\n\t\tvar geopolys = [];\n\n\t\tfunction addExterior(node){\n\t\t\tvar poly = [forceWinding(node.region, false)];\n\t\t\tgeopolys.push(poly);\n\t\t\t// children of exteriors are interior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\tpoly.push(getInterior(node.children[i]));\n\t\t}\n\n\t\tfunction getInterior(node){\n\t\t\t// children of interiors are exterior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\taddExterior(node.children[i]);\n\t\t\t// return the clockwise interior\n\t\t\treturn forceWinding(node.region, true);\n\t\t}\n\n\t\t// root nodes are exterior\n\t\tfor (var i = 0; i < roots.children.length; i++)\n\t\t\taddExterior(roots.children[i]);\n\n\t\t// lastly, construct the approrpriate GeoJSON object\n\n\t\tif (geopolys.length <= 0) // empty GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: [] };\n\t\tif (geopolys.length == 1) // use a GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: geopolys[0] };\n\t\treturn { // otherwise, use a GeoJSON MultiPolygon\n\t\t\ttype: 'MultiPolygon',\n\t\t\tcoordinates: geopolys\n\t\t};\n\t}\n};\n\nmodule.exports = GeoJSON;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// this is the core work-horse\n//\n\nvar LinkedList = require('./linked-list');\n\nfunction Intersecter(selfIntersection, eps, buildLog){\n\t// selfIntersection is true/false depending on the phase of the overall algorithm\n\n\t//\n\t// segment creation\n\t//\n\n\tfunction segmentNew(start, end){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: null, // is there fill above us?\n\t\t\t\tbelow: null  // is there fill below us?\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\tfunction segmentCopy(start, end, seg){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: seg.myFill.above,\n\t\t\t\tbelow: seg.myFill.below\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\t//\n\t// event logic\n\t//\n\n\tvar event_root = LinkedList.create();\n\n\tfunction eventCompare(p1_isStart, p1_1, p1_2, p2_isStart, p2_1, p2_2){\n\t\t// compare the selected points first\n\t\tvar comp = eps.pointsCompare(p1_1, p2_1);\n\t\tif (comp !== 0)\n\t\t\treturn comp;\n\t\t// the selected points are the same\n\n\t\tif (eps.pointsSame(p1_2, p2_2)) // if the non-selected points are the same too...\n\t\t\treturn 0; // then the segments are equal\n\n\t\tif (p1_isStart !== p2_isStart) // if one is a start and the other isn't...\n\t\t\treturn p1_isStart ? 1 : -1; // favor the one that isn't the start\n\n\t\t// otherwise, we'll have to calculate which one is below the other manually\n\t\treturn eps.pointAboveOrOnLine(p1_2,\n\t\t\tp2_isStart ? p2_1 : p2_2, // order matters\n\t\t\tp2_isStart ? p2_2 : p2_1\n\t\t) ? 1 : -1;\n\t}\n\n\tfunction eventAdd(ev, other_pt){\n\t\tevent_root.insertBefore(ev, function(here){\n\t\t\t// should ev be inserted before here?\n\t\t\tvar comp = eventCompare(\n\t\t\t\tev  .isStart, ev  .pt,      other_pt,\n\t\t\t\there.isStart, here.pt, here.other.pt\n\t\t\t);\n\t\t\treturn comp < 0;\n\t\t});\n\t}\n\n\tfunction eventAddSegmentStart(seg, primary){\n\t\tvar ev_start = LinkedList.node({\n\t\t\tisStart: true,\n\t\t\tpt: seg.start,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: null,\n\t\t\tstatus: null\n\t\t});\n\t\teventAdd(ev_start, seg.end);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventAddSegmentEnd(ev_start, seg, primary){\n\t\tvar ev_end = LinkedList.node({\n\t\t\tisStart: false,\n\t\t\tpt: seg.end,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: ev_start,\n\t\t\tstatus: null\n\t\t});\n\t\tev_start.other = ev_end;\n\t\teventAdd(ev_end, ev_start.pt);\n\t}\n\n\tfunction eventAddSegment(seg, primary){\n\t\tvar ev_start = eventAddSegmentStart(seg, primary);\n\t\teventAddSegmentEnd(ev_start, seg, primary);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventUpdateEnd(ev, end){\n\t\t// slides an end backwards\n\t\t//   (start)------------(end)    to:\n\t\t//   (start)---(end)\n\n\t\tif (buildLog)\n\t\t\tbuildLog.segmentChop(ev.seg, end);\n\n\t\tev.other.remove();\n\t\tev.seg.end = end;\n\t\tev.other.pt = end;\n\t\teventAdd(ev.other, ev.pt);\n\t}\n\n\tfunction eventDivide(ev, pt){\n\t\tvar ns = segmentCopy(pt, ev.seg.end, ev.seg);\n\t\teventUpdateEnd(ev, pt);\n\t\treturn eventAddSegment(ns, ev.primary);\n\t}\n\n\tfunction calculate(primaryPolyInverted, secondaryPolyInverted){\n\t\t// if selfIntersection is true then there is no secondary polygon, so that isn't used\n\n\t\t//\n\t\t// status logic\n\t\t//\n\n\t\tvar status_root = LinkedList.create();\n\n\t\tfunction statusCompare(ev1, ev2){\n\t\t\tvar a1 = ev1.seg.start;\n\t\t\tvar a2 = ev1.seg.end;\n\t\t\tvar b1 = ev2.seg.start;\n\t\t\tvar b2 = ev2.seg.end;\n\n\t\t\tif (eps.pointsCollinear(a1, b1, b2)){\n\t\t\t\tif (eps.pointsCollinear(a2, b1, b2))\n\t\t\t\t\treturn 1;//eventCompare(true, a1, a2, true, b1, b2);\n\t\t\t\treturn eps.pointAboveOrOnLine(a2, b1, b2) ? 1 : -1;\n\t\t\t}\n\t\t\treturn eps.pointAboveOrOnLine(a1, b1, b2) ? 1 : -1;\n\t\t}\n\n\t\tfunction statusFindSurrounding(ev){\n\t\t\treturn status_root.findTransition(function(here){\n\t\t\t\tvar comp = statusCompare(ev, here.ev);\n\t\t\t\treturn comp > 0;\n\t\t\t});\n\t\t}\n\n\t\tfunction checkIntersection(ev1, ev2){\n\t\t\t// returns the segment equal to ev1, or false if nothing equal\n\n\t\t\tvar seg1 = ev1.seg;\n\t\t\tvar seg2 = ev2.seg;\n\t\t\tvar a1 = seg1.start;\n\t\t\tvar a2 = seg1.end;\n\t\t\tvar b1 = seg2.start;\n\t\t\tvar b2 = seg2.end;\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.checkIntersection(seg1, seg2);\n\n\t\t\tvar i = eps.linesIntersect(a1, a2, b1, b2);\n\n\t\t\tif (i === false){\n\t\t\t\t// segments are parallel or coincident\n\n\t\t\t\t// if points aren't collinear, then the segments are parallel, so no intersections\n\t\t\t\tif (!eps.pointsCollinear(a1, a2, b1))\n\t\t\t\t\treturn false;\n\t\t\t\t// otherwise, segments are on top of each other somehow (aka coincident)\n\n\t\t\t\tif (eps.pointsSame(a1, b2) || eps.pointsSame(a2, b1))\n\t\t\t\t\treturn false; // segments touch at endpoints... no intersection\n\n\t\t\t\tvar a1_equ_b1 = eps.pointsSame(a1, b1);\n\t\t\t\tvar a2_equ_b2 = eps.pointsSame(a2, b2);\n\n\t\t\t\tif (a1_equ_b1 && a2_equ_b2)\n\t\t\t\t\treturn ev2; // segments are exactly equal\n\n\t\t\t\tvar a1_between = !a1_equ_b1 && eps.pointBetween(a1, b1, b2);\n\t\t\t\tvar a2_between = !a2_equ_b2 && eps.pointBetween(a2, b1, b2);\n\n\t\t\t\t// handy for debugging:\n\t\t\t\t// buildLog.log({\n\t\t\t\t//\ta1_equ_b1: a1_equ_b1,\n\t\t\t\t//\ta2_equ_b2: a2_equ_b2,\n\t\t\t\t//\ta1_between: a1_between,\n\t\t\t\t//\ta2_between: a2_between\n\t\t\t\t// });\n\n\t\t\t\tif (a1_equ_b1){\n\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t//  (a1)---(a2)\n\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//  (a1)----------(a2)\n\t\t\t\t\t\t//  (b1)---(b2)\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t}\n\t\t\t\t\treturn ev2;\n\t\t\t\t}\n\t\t\t\telse if (a1_between){\n\t\t\t\t\tif (!a2_equ_b2){\n\t\t\t\t\t\t// make a2 equal to b2\n\t\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t\t\t//  (b1)-----------------(b2)\n\t\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t//         (a1)----------(a2)\n\t\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// otherwise, lines intersect at i.pt, which may or may not be between the endpoints\n\n\t\t\t\t// is A divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongA === 0){\n\t\t\t\t\tif (i.alongB === -1) // yes, at exactly b1\n\t\t\t\t\t\teventDivide(ev1, b1);\n\t\t\t\t\telse if (i.alongB === 0) // yes, somewhere between B's endpoints\n\t\t\t\t\t\teventDivide(ev1, i.pt);\n\t\t\t\t\telse if (i.alongB === 1) // yes, at exactly b2\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t}\n\n\t\t\t\t// is B divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongB === 0){\n\t\t\t\t\tif (i.alongA === -1) // yes, at exactly a1\n\t\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t\telse if (i.alongA === 0) // yes, somewhere between A's endpoints (exclusive)\n\t\t\t\t\t\teventDivide(ev2, i.pt);\n\t\t\t\t\telse if (i.alongA === 1) // yes, at exactly a2\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//\n\t\t// main event loop\n\t\t//\n\t\tvar segments = [];\n\t\twhile (!event_root.isEmpty()){\n\t\t\tvar ev = event_root.getHead();\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.vert(ev.pt[0]);\n\n\t\t\tif (ev.isStart){\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.segmentNew(ev.seg, ev.primary);\n\n\t\t\t\tvar surrounding = statusFindSurrounding(ev);\n\t\t\t\tvar above = surrounding.before ? surrounding.before.ev : null;\n\t\t\t\tvar below = surrounding.after ? surrounding.after.ev : null;\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.tempStatus(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfunction checkBothIntersections(){\n\t\t\t\t\tif (above){\n\t\t\t\t\t\tvar eve = checkIntersection(ev, above);\n\t\t\t\t\t\tif (eve)\n\t\t\t\t\t\t\treturn eve;\n\t\t\t\t\t}\n\t\t\t\t\tif (below)\n\t\t\t\t\t\treturn checkIntersection(ev, below);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar eve = checkBothIntersections();\n\t\t\t\tif (eve){\n\t\t\t\t\t// ev and eve are equal\n\t\t\t\t\t// we'll keep eve and throw away ev\n\n\t\t\t\t\t// merge ev.seg's fill information into eve.seg\n\n\t\t\t\t\tif (selfIntersection){\n\t\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\t\tif (ev.seg.myFill.below === null)\n\t\t\t\t\t\t\ttoggle = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below;\n\n\t\t\t\t\t\t// merge two segments that belong to the same polygon\n\t\t\t\t\t\t// think of this as sandwiching two segments together, where `eve.seg` is\n\t\t\t\t\t\t// the bottom -- this will cause the above fill flag to toggle\n\t\t\t\t\t\tif (toggle)\n\t\t\t\t\t\t\teve.seg.myFill.above = !eve.seg.myFill.above;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// merge two segments that belong to different polygons\n\t\t\t\t\t\t// each segment has distinct knowledge, so no special logic is needed\n\t\t\t\t\t\t// note that this can only happen once per segment in this phase, because we\n\t\t\t\t\t\t// are guaranteed that all self-intersections are gone\n\t\t\t\t\t\teve.seg.otherFill = ev.seg.myFill;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.segmentUpdate(eve.seg);\n\n\t\t\t\t\tev.other.remove();\n\t\t\t\t\tev.remove();\n\t\t\t\t}\n\n\t\t\t\tif (event_root.getHead() !== ev){\n\t\t\t\t\t// something was inserted before us in the event queue, so loop back around and\n\t\t\t\t\t// process it before continuing\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.rewind(ev.seg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\t// calculate fill flags\n\t\t\t\t//\n\t\t\t\tif (selfIntersection){\n\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\tif (ev.seg.myFill.below === null) // if we are a new segment...\n\t\t\t\t\t\ttoggle = true; // then we toggle\n\t\t\t\t\telse // we are a segment that has previous knowledge from a division\n\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below; // calculate toggle\n\n\t\t\t\t\t// next, calculate whether we are filled below us\n\t\t\t\t\tif (!below){ // if nothing is below us...\n\t\t\t\t\t\t// we are filled below us if the polygon is inverted\n\t\t\t\t\t\tev.seg.myFill.below = primaryPolyInverted;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// otherwise, we know the answer -- it's the same if whatever is below\n\t\t\t\t\t\t// us is filled above it\n\t\t\t\t\t\tev.seg.myFill.below = below.seg.myFill.above;\n\t\t\t\t\t}\n\n\t\t\t\t\t// since now we know if we're filled below us, we can calculate whether\n\t\t\t\t\t// we're filled above us by applying toggle to whatever is below us\n\t\t\t\t\tif (toggle)\n\t\t\t\t\t\tev.seg.myFill.above = !ev.seg.myFill.below;\n\t\t\t\t\telse\n\t\t\t\t\t\tev.seg.myFill.above = ev.seg.myFill.below;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// now we fill in any missing transition information, since we are all-knowing\n\t\t\t\t\t// at this point\n\n\t\t\t\t\tif (ev.seg.otherFill === null){\n\t\t\t\t\t\t// if we don't have other information, then we need to figure out if we're\n\t\t\t\t\t\t// inside the other polygon\n\t\t\t\t\t\tvar inside;\n\t\t\t\t\t\tif (!below){\n\t\t\t\t\t\t\t// if nothing is below us, then we're inside if the other polygon is\n\t\t\t\t\t\t\t// inverted\n\t\t\t\t\t\t\tinside =\n\t\t\t\t\t\t\t\tev.primary ? secondaryPolyInverted : primaryPolyInverted;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{ // otherwise, something is below us\n\t\t\t\t\t\t\t// so copy the below segment's other polygon's above\n\t\t\t\t\t\t\tif (ev.primary === below.primary)\n\t\t\t\t\t\t\t\tinside = below.seg.otherFill.above;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tinside = below.seg.myFill.above;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tev.seg.otherFill = {\n\t\t\t\t\t\t\tabove: inside,\n\t\t\t\t\t\t\tbelow: inside\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.status(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// insert the status and remember it for later removal\n\t\t\t\tev.other.status = surrounding.insert(LinkedList.node({ ev: ev }));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvar st = ev.status;\n\n\t\t\t\tif (st === null){\n\t\t\t\t\tthrow new Error('PolyBool: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t\t\t'probably too small or too large');\n\t\t\t\t}\n\n\t\t\t\t// removing the status will create two new adjacent edges, so we'll need to check\n\t\t\t\t// for those\n\t\t\t\tif (status_root.exists(st.prev) && status_root.exists(st.next))\n\t\t\t\t\tcheckIntersection(st.prev.ev, st.next.ev);\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.statusRemove(st.ev.seg);\n\n\t\t\t\t// remove the status\n\t\t\t\tst.remove();\n\n\t\t\t\t// if we've reached this point, we've calculated everything there is to know, so\n\t\t\t\t// save the segment for reporting\n\t\t\t\tif (!ev.primary){\n\t\t\t\t\t// make sure `seg.myFill` actually points to the primary polygon though\n\t\t\t\t\tvar s = ev.seg.myFill;\n\t\t\t\t\tev.seg.myFill = ev.seg.otherFill;\n\t\t\t\t\tev.seg.otherFill = s;\n\t\t\t\t}\n\t\t\t\tsegments.push(ev.seg);\n\t\t\t}\n\n\t\t\t// remove the event and continue\n\t\t\tevent_root.getHead().remove();\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.done();\n\n\t\treturn segments;\n\t}\n\n\t// return the appropriate API depending on what we're doing\n\tif (!selfIntersection){\n\t\t// performing combination of polygons, so only deal with already-processed segments\n\t\treturn {\n\t\t\tcalculate: function(segments1, inverted1, segments2, inverted2){\n\t\t\t\t// segmentsX come from the self-intersection API, or this API\n\t\t\t\t// invertedX is whether we treat that list of segments as an inverted polygon or not\n\t\t\t\t// returns segments that can be used for further operations\n\t\t\t\tsegments1.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), true);\n\t\t\t\t});\n\t\t\t\tsegments2.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), false);\n\t\t\t\t});\n\t\t\t\treturn calculate(inverted1, inverted2);\n\t\t\t}\n\t\t};\n\t}\n\n\t// otherwise, performing self-intersection, so deal with regions\n\treturn {\n\t\taddRegion: function(region){\n\t\t\t// regions are a list of points:\n\t\t\t//  [ [0, 0], [100, 0], [50, 100] ]\n\t\t\t// you can add multiple regions before running calculate\n\t\t\tvar pt1;\n\t\t\tvar pt2 = region[region.length - 1];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tpt1 = pt2;\n\t\t\t\tpt2 = region[i];\n\n\t\t\t\tvar forward = eps.pointsCompare(pt1, pt2);\n\t\t\t\tif (forward === 0) // points are equal, so we have a zero-length segment\n\t\t\t\t\tcontinue; // just skip it\n\n\t\t\t\teventAddSegment(\n\t\t\t\t\tsegmentNew(\n\t\t\t\t\t\tforward < 0 ? pt1 : pt2,\n\t\t\t\t\t\tforward < 0 ? pt2 : pt1\n\t\t\t\t\t),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tcalculate: function(inverted){\n\t\t\t// is the polygon inverted?\n\t\t\t// returns segments\n\t\t\treturn calculate(inverted, false);\n\t\t}\n\t};\n}\n\nmodule.exports = Intersecter;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// simple linked list implementation that allows you to traverse down nodes and save positions\n//\n\nvar LinkedList = {\n\tcreate: function(){\n\t\tvar my = {\n\t\t\troot: { root: true, next: null },\n\t\t\texists: function(node){\n\t\t\t\tif (node === null || node === my.root)\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tisEmpty: function(){\n\t\t\t\treturn my.root.next === null;\n\t\t\t},\n\t\t\tgetHead: function(){\n\t\t\t\treturn my.root.next;\n\t\t\t},\n\t\t\tinsertBefore: function(node, check){\n\t\t\t\tvar last = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here)){\n\t\t\t\t\t\tnode.prev = here.prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\there.prev.next = node;\n\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlast = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\tlast.next = node;\n\t\t\t\tnode.prev = last;\n\t\t\t\tnode.next = null;\n\t\t\t},\n\t\t\tfindTransition: function(check){\n\t\t\t\tvar prev = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tprev = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tbefore: prev === my.root ? null : prev,\n\t\t\t\t\tafter: here,\n\t\t\t\t\tinsert: function(node){\n\t\t\t\t\t\tnode.prev = prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\tprev.next = node;\n\t\t\t\t\t\tif (here !== null)\n\t\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\treturn my;\n\t},\n\tnode: function(data){\n\t\tdata.prev = null;\n\t\tdata.next = null;\n\t\tdata.remove = function(){\n\t\t\tdata.prev.next = data.next;\n\t\t\tif (data.next)\n\t\t\t\tdata.next.prev = data.prev;\n\t\t\tdata.prev = null;\n\t\t\tdata.next = null;\n\t\t};\n\t\treturn data;\n\t}\n};\n\nmodule.exports = LinkedList;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\n\nfunction SegmentChainer(segments, eps, buildLog){\n\tvar chains = [];\n\tvar regions = [];\n\n\tsegments.forEach(function(seg){\n\t\tvar pt1 = seg.start;\n\t\tvar pt2 = seg.end;\n\t\tif (eps.pointsSame(pt1, pt2)){\n\t\t\tconsole.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t'probably too small or too large');\n\t\t\treturn;\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainStart(seg);\n\n\t\t// search for two chains that this segment matches\n\t\tvar first_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar second_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar next_match = first_match;\n\t\tfunction setMatch(index, matches_head, matches_pt1){\n\t\t\t// return true if we've matched twice\n\t\t\tnext_match.index = index;\n\t\t\tnext_match.matches_head = matches_head;\n\t\t\tnext_match.matches_pt1 = matches_pt1;\n\t\t\tif (next_match === first_match){\n\t\t\t\tnext_match = second_match;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnext_match = null;\n\t\t\treturn true; // we've matched twice, we're done here\n\t\t}\n\t\tfor (var i = 0; i < chains.length; i++){\n\t\t\tvar chain = chains[i];\n\t\t\tvar head  = chain[0];\n\t\t\tvar head2 = chain[1];\n\t\t\tvar tail  = chain[chain.length - 1];\n\t\t\tvar tail2 = chain[chain.length - 2];\n\t\t\tif (eps.pointsSame(head, pt1)){\n\t\t\t\tif (setMatch(i, true, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(head, pt2)){\n\t\t\t\tif (setMatch(i, true, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt1)){\n\t\t\t\tif (setMatch(i, false, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt2)){\n\t\t\t\tif (setMatch(i, false, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (next_match === first_match){\n\t\t\t// we didn't match anything, so create a new chain\n\t\t\tchains.push([ pt1, pt2 ]);\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainNew(pt1, pt2);\n\t\t\treturn;\n\t\t}\n\n\t\tif (next_match === second_match){\n\t\t\t// we matched a single chain\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainMatch(first_match.index);\n\n\t\t\t// add the other point to the apporpriate end, and check to see if we've closed the\n\t\t\t// chain into a loop\n\n\t\t\tvar index = first_match.index;\n\t\t\tvar pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n\t\t\tvar addToHead = first_match.matches_head; // if we matched at head, then add to the head\n\n\t\t\tvar chain = chains[index];\n\t\t\tvar grow  = addToHead ? chain[0] : chain[chain.length - 1];\n\t\t\tvar grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n\t\t\tvar oppo  = addToHead ? chain[chain.length - 1] : chain[0];\n\t\t\tvar oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n\n\t\t\tif (eps.pointsCollinear(grow2, grow, pt)){\n\t\t\t\t// grow isn't needed because it's directly between grow2 and pt:\n\t\t\t\t// grow2 ---grow---> pt\n\t\t\t\tif (addToHead){\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, pt);\n\t\t\t\t\tchain.shift();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, pt);\n\t\t\t\t\tchain.pop();\n\t\t\t\t}\n\t\t\t\tgrow = grow2; // old grow is gone... new grow is what grow2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsSame(oppo, pt)){\n\t\t\t\t// we're closing the loop, so remove chain from chains\n\t\t\t\tchains.splice(index, 1);\n\n\t\t\t\tif (eps.pointsCollinear(oppo2, oppo, grow)){\n\t\t\t\t\t// oppo isn't needed because it's directly between oppo2 and grow:\n\t\t\t\t\t// oppo2 ---oppo--->grow\n\t\t\t\t\tif (addToHead){\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, grow);\n\t\t\t\t\t\tchain.pop();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, grow);\n\t\t\t\t\t\tchain.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainClose(first_match.index);\n\n\t\t\t\t// we have a closed chain!\n\t\t\t\tregions.push(chain);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// not closing a loop, so just add it to the apporpriate side\n\t\t\tif (addToHead){\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddHead(first_match.index, pt);\n\t\t\t\tchain.unshift(pt);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddTail(first_match.index, pt);\n\t\t\t\tchain.push(pt);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, we matched two chains, so we need to combine those chains together\n\n\t\tfunction reverseChain(index){\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainReverse(index);\n\t\t\tchains[index].reverse(); // gee, that's easy\n\t\t}\n\n\t\tfunction appendChain(index1, index2){\n\t\t\t// index1 gets index2 appended to it, and index2 is removed\n\t\t\tvar chain1 = chains[index1];\n\t\t\tvar chain2 = chains[index2];\n\t\t\tvar tail  = chain1[chain1.length - 1];\n\t\t\tvar tail2 = chain1[chain1.length - 2];\n\t\t\tvar head  = chain2[0];\n\t\t\tvar head2 = chain2[1];\n\n\t\t\tif (eps.pointsCollinear(tail2, tail, head)){\n\t\t\t\t// tail isn't needed because it's directly between tail2 and head\n\t\t\t\t// tail2 ---tail---> head\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveTail(index1, tail);\n\t\t\t\tchain1.pop();\n\t\t\t\ttail = tail2; // old tail is gone... new tail is what tail2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsCollinear(tail, head, head2)){\n\t\t\t\t// head isn't needed because it's directly between tail and head2\n\t\t\t\t// tail ---head---> head2\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveHead(index2, head);\n\t\t\t\tchain2.shift();\n\t\t\t}\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainJoin(index1, index2);\n\t\t\tchains[index1] = chain1.concat(chain2);\n\t\t\tchains.splice(index2, 1);\n\t\t}\n\n\t\tvar F = first_match.index;\n\t\tvar S = second_match.index;\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainConnect(F, S);\n\n\t\tvar reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n\t\tif (first_match.matches_head){\n\t\t\tif (second_match.matches_head){\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\tappendChain(S, F);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif (second_match.matches_head){\n\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\tappendChain(F, S);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn regions;\n}\n\nmodule.exports = SegmentChainer;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// filter a list of segments based on boolean operations\n//\n\nfunction select(segments, selection, buildLog){\n\tvar result = [];\n\tsegments.forEach(function(seg){\n\t\tvar index =\n\t\t\t(seg.myFill.above ? 8 : 0) +\n\t\t\t(seg.myFill.below ? 4 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.above) ? 2 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.below) ? 1 : 0);\n\t\tif (selection[index] !== 0){\n\t\t\t// copy the segment to the results, while also calculating the fill status\n\t\t\tresult.push({\n\t\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\t\tstart: seg.start,\n\t\t\t\tend: seg.end,\n\t\t\t\tmyFill: {\n\t\t\t\t\tabove: selection[index] === 1, // 1 if filled above\n\t\t\t\t\tbelow: selection[index] === 2  // 2 if filled below\n\t\t\t\t},\n\t\t\t\totherFill: null\n\t\t\t});\n\t\t}\n\t});\n\n\tif (buildLog)\n\t\tbuildLog.selected(result);\n\n\treturn result;\n}\n\nvar SegmentSelector = {\n\tunion: function(segments, buildLog){ // primary | secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 2, 0, 0,\n\t\t\t1, 0, 1, 0,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\tintersect: function(segments, buildLog){ // primary & secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled below    2\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   yes filled above    1\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled below    2\n\t\t//    1      1      1      0   =>   yes filled above    1\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 1, 0\n\t\t], buildLog);\n\t},\n\tdifference: function(segments, buildLog){ // primary - secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled below    2\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   yes filled above    1\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t2, 0, 2, 0,\n\t\t\t1, 1, 0, 0,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t},\n\tdifferenceRev: function(segments, buildLog){ // secondary - primary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled above    1\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   yes filled below    2\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\txor: function(segments, buildLog){ // primary ^ secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 0, 0, 1,\n\t\t\t1, 0, 0, 2,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t}\n};\n\nmodule.exports = SegmentSelector;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(526);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","PATH_DATA_SPRITES","PATH_DATA_SOUNDS","PATH_AUDIO_SOUNDS","PATH_SPRITES_IMAGE","PATH_DATA_GAME","TILE_WIDTH","TILE_HEIGHT","TILES_PER_LINE","TILES_PER_COLUMN","WORLD_MAPS_PER_LINE","WORLD_MAPS_PER_COLUMN","FILE_TYPE_JSON","FILE_TYPE_LOZ","FILE_TYPE_MP3","FILE_TYPE_PNG","FILE_TYPE_WEBP","GAME_INTERVAL_DRAWING","GAME_INTERVAL_PROCESS","GAME_INTERVAL_INPUT","GAME_TOP_MENU_HEIGHT","MAP_TYPE_WORLD","MAP_TYPE_CAVERNS","MAP_TYPE_LEVEL1","SPRITE_WIDTH","SPRITE_HEIGHT","SOUND_FANFARE","SOUND_OVERWORLD","SOUND_STAIRS","SOUND_TEXT_LOOP","SPRITE_LINK_PREFIX","SPRITE_TEXT_PREFIX","SPRITE_TEXT_COLOR_RED","SPRITE_TEXT_COLOR_WHITE","SPRITE_TEXT_WIDTH","SPRITE_TEXT_HEIGHT","ITEM_SHIELD_NORMAL","ITEM_RING_GREEN","UNIQUE_ITEMS","LINK_ACTION_MOVE","LINK_ACTION_PICK","LINK_ACTION_USE_ITEM_A","LINK_ACTION_USE_ITEM_B","LINK_DIRECTION_EAST","LINK_DIRECTION_NORTH","LINK_DIRECTION_SOUTH","LINK_DIRECTION_WEST","TRANSITION_CAVE_ENTRANCE","TRANSITION_CAVE_EXIT","TRANSITION_CAVE_STAIRS_DOWN","TRANSITION_CAVE_STAIRS_UP","TRANSITION_MAP_DRAG","TRANSITION_MAP_INCREMENT_DELTA","TRANSITION_MAP_INTERVAL_PLAY","DIRECTION_EAST","DIRECTION_NORTH","DIRECTION_SOUTH","DIRECTION_WEST","Debug","game","displayBlockingZones","blockingZonesColor","constructor","displayBlockingZonesCheckbox","blockingZonesColorInput","rupeesInput","rupeesSubmit","keysInput","keysSubmit","bombsInput","bombsSubmit","convertToLozInput","self","this","addEventListener","e","preventDefault","target","checked","dispatchEvent","Event","value","link","inventory","rupees","Math","min","max","maxRupees","undefined","keys","maxKeys","bombs","maxBombs","async","data","openFile","JSON","stringify","dowloadFile","setGame","draw","context","drawBlockingZones","color","map","translate","x","y","nextMap","ItemPick","buy","item","i","price","soundInteval","setInterval","buyInterval","clearInterval","rupee","removeItemFromMap","index","items","indexOf","splice","addItemToMap","push","play","character","vanish","clonedItem","clone","enabled","stopWalking","action","itemDeltaX","getHorizontalCenter","hitbox","height","resource","getSound","Promise","resolve","setTimeout","finalizeTransition","includes","name","characters","Dialog","length","transitionInterval","displayedText","text","substring","stop","transitions","limitY","startWalking","currentMap","direction","tile","clipY","targetMap","playEast","playNorth","playSouth","playWest","offsetX","width","nbTicks","round","linkIncrementDelta","offsetY","get","TopMenu","mapLocationWidth","mapLocationHeight","initializeMap","fillStyle","fillRect","mapWidth","mapHeight","column","line","getSprite","itemB","itemA","totalLife","floor","currentLife","Inventory","shield","ring","arrow","bookOfMagic","ladder","magicalKey","powerBracelet","Link","EventTarget","super","speed","clipX","_itemA","_itemB","actions","canPick","computeHitboxesCollision","useItemA","use","useItemB","getHitbox","move","targetHitbox","collision","targetX","targetY","compute","getMinX","getMaxY","getMinY","getMaxX","sprite","start","console","log","drawSword","save","itemWidth","itemHeight","linkX","linkY","linkWidth","linkHeight","setTransform","deltaX","deltaY","rotate","PI","restore","drawingAction","spriteName","getSpriteName","addItem","removeItem","hasItem","addAction","hasAction","removeAction","resetActions","Key","key","blockingAction","pressed","used","disable","enable","unuse","press","unpress","BLOCKING_ACTION","ENABLED","ACTION_LINK_MOVE_WEST","ACTION_LINK_MOVE_NORTH","ACTION_LINK_MOVE_EAST","ACTION_LINK_MOVE_SOUTH","ACTION_LINK_USE_ITEM_A","ACTION_LINK_USE_ITEM_B","ACTION_MENU_CLOSE","ACTION_MENU_MOVE_LEFT","ACTION_MENU_MOVE_TOP","ACTION_MENU_MOVE_RIGHT","ACTION_MENU_MOVE_BOTTOM","ACTION_MENU_OPEN","MAPPING_MAIN","MAPPING_MENU","mappings","currentMappingName","actionKeys","setMapping","getCurrentDrawingAction","getCurrentAction","clear","getKey","keyNumber","addActionKey","unshift","removeActionKey","triggerBlockingAction","inputManager","handleKeyDown","handleKeyUp","startDetection","document","onkeydown","keyCode","onkeyup","stopDetection","startingPosition","findStartingPosition","Error","tileColumn","tileLine","topMenu","EVENT_ITEM_A_CHANGED","EVENT_ITEM_B_CHANGED","isStarted","transitionPlaying","computeMapHitboxV2","init","clearRect","mapDragTransitionPlaying","process","hasStoppedTalking","transition","linkTile","getLinkTile","tileTransition","linkFrontTile","getLinkFrontTile","createDynamicMapDragTileTransition","getTargetMap","transitionStart","reset","getTargetPosition","transitionEnd","end","processLinkActions","targetMapColumn","targetMapLine","targetTileColumn","targetTileLine","type","mustWalk","linkMoves","processAction","getLinkActionFromInput","inputAction","processInput","drawInterval","processInterval","processInputInterval","canvas","querySelector","getContext","onload","focus","debug","loadGame","gameData","createMaps","initContext","initEvents","loadAll","fetchRemoteFile","Character","vanishDrawingCalled","timeout","interval","Extra","Item","toString","Map","tiles","extras","savedItems","savedCharacters","mapPath","getMapPath","path","Path2D","rect","extra","tilesIterator","globalAlpha","fill","blockPath","getTile","Sound","buffer","gain","duration","loop","loopStart","loopEnd","source","createBufferSource","connect","SpriteImage","file","offset","w","h","dx","dy","dw","dh","drawImage","Sprite","images","currentImageIndex","incrementSpeed","incrementInterval","incrementImageIndex","x2","y2","w2","h2","TileTransition","targetMapType","isEmpty","getMap","Tile","block","desctructible","tilePath","getTilePath","getBlockPath","recomputePaths","tileOffsetX","tileOffsetY","other","points","charAt","moveTo","lineTo","sprites","sounds","resources","fetchRemoteFiles","dataSprites","spritesImage","dataSounds","audioSounds","loadSprites","loadSounds","dataSprite","offsets","cloneSprite","getItemSprite","gainNode","getGainNode","dataSound","bytes","arrayBuffer","slice","audioBuffer","decodeAudioData","loop_end","loop_start","cloneSound","PolyBool","getHitboxFromString","hitboxString","regions","inverted","polygon","segments","getPathFromString","object","computeMapHitbox","union","hitobx1","hitbox2","intersection","intersect","j","beginPath","closePath","getCurrentTiles","currentTiles","linkCenterX","linkCenterY","getReachedMapEdge","minX","AudioContext","suspend","createGain","createGainNode","destination","playSoundsCheckbox","volumeRangeInput","updateVolume","parseInt","setValueAtTime","currentTime","resume","sound","alignement","maxLength","maxNbLines","lines","splitTextIntoLines","nbDisplayedCharacters","alignedLine","alignLine","displayedLine","getSpacesLeft","drawLine","char","toLowerCase","maxWidth","textPerLine","nbLettersPerLine","currentLine","parts","split","part","currentNbLetters","spacesLeft","nbStartSpaces","nbEndSpaces","ceil","padStart","padEnd","world","caverns","level1","level2","level3","level4","level5","level6","level7","level8","level9","createMapsForType","mapsData","maps","mapData","createMapTiles","characterData","characterColumn","characterLine","characterWidth","characterHeight","characterX","characterY","characterSprite","characterName","replace","characterText","itemData","itemColumn","itemLine","itemX","itemY","itemSprite","itemName","itemPrice","extraData","extraColumn","extraLine","extraWidth","extraHeight","extraX","extraY","extraSprite","tilesData","tileData","mapsIterator","exportGame","exportMaps","COMPRESSION_GZIP","compress","str","compressedStream","Blob","stream","pipeThrough","CompressionStream","chunks","chunk","concatUint8Arrays","decompress","compressedBytes","decompressedStream","DecompressionStream","stringBytes","TextDecoder","decode","uint8arrays","blob","Uint8Array","reject","input","createElement","accept","style","display","remove","files","readFile","body","appendChild","click","guessTypeFromExtension","fileReader","FileReader","img","result","parse","fetch","createImageBitmap","readAsArrayBuffer","readAsDataURL","readAsText","filename","prompt","a","href","URL","createObjectURL","download","textContent","removeChild","paths","Array","prototype","call","arguments","isArray","promises","all","pop","fetchJsonFile","fetchLozFile","fetchAudioFile","fetchImageFile","json","at","BuildLog","Epsilon","Intersecter","SegmentChainer","SegmentSelector","GeoJSON","buildLog","epsilon","operate","poly1","poly2","selector","seg1","seg2","seg3","combine","bl","list","v","poly","forEach","addRegion","calculate","segments1","segments2","combined","inverted1","inverted2","selectUnion","selectIntersect","selectDifference","difference","selectDifferenceRev","differenceRev","selectXor","xor","polygonFromGeoJSON","geojson","toPolygon","polygonToGeoJSON","fromPolygon","window","module","exports","my","nextSegmentId","curVert","segmentId","checkIntersection","segmentChop","seg","pt","statusRemove","segmentUpdate","segmentNew","primary","segmentRemove","tempStatus","above","below","rewind","status","vert","txt","selected","segs","chainStart","chainRemoveHead","chainRemoveTail","chainNew","pt1","pt2","chainMatch","chainClose","chainAddHead","chainAddTail","chainConnect","index1","index2","chainReverse","chainJoin","done","eps","pointAboveOrOnLine","left","right","Ax","Ay","Bx","By","Cx","pointBetween","p","d_py_ly","d_rx_lx","d_px_lx","d_ry_ly","dot","pointsSameX","p1","p2","abs","pointsSameY","pointsSame","pointsCompare","pointsCollinear","pt3","dx1","dy1","dx2","dy2","linesIntersect","a0","a1","b0","b1","adx","ady","bdx","bdy","axb","A","B","ret","alongA","alongB","pointInsideRegion","region","last_x","last_y","inside","curr_x","curr_y","GeoPoly","coords","LineString","ls","reg","out","coordinates","regionInsideRegion","r1","r2","newNode","children","roots","addChild","root","child","node","forceWinding","clockwise","winding","copy","reverse","geopolys","addExterior","getInterior","LinkedList","selfIntersection","segmentCopy","id","myFill","otherFill","event_root","create","eventAdd","ev","other_pt","insertBefore","here","p1_isStart","isStart","p1_1","p1_2","p2_isStart","p2_1","p2_2","comp","eventAddSegment","ev_start","eventAddSegmentStart","ev_end","eventAddSegmentEnd","eventDivide","ns","eventUpdateEnd","primaryPolyInverted","secondaryPolyInverted","status_root","statusFindSurrounding","findTransition","ev1","ev2","a2","b2","a1_equ_b1","a2_equ_b2","a1_between","a2_between","getHead","surrounding","before","after","checkBothIntersections","eve","toggle","insert","st","exists","prev","next","s","forward","check","last","chains","warn","first_match","matches_head","matches_pt1","second_match","next_match","head","chain","tail","setMatch","addToHead","grow","grow2","oppo","oppo2","shift","F","S","reverseF","reverseChain","appendChain","chain1","chain2","tail2","head2","concat","select","selection","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Symbol","queue","d","fn","r","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","deps","dep","then","obj","wrapDeps","getResult","fnQueue","q","has","add","err","definition","o","Object","defineProperty","enumerable","prop","hasOwnProperty"],"sourceRoot":""}